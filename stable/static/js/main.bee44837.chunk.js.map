{"version":3,"sources":["store/Reducers.js","store/Store.js","GameplayAssets.js","WorldAssets.js","Utilities.js","store/mapStateToProps.js","LegendsOfTheCatacombs.js","Functions.js","components/Web.js","components/Misc.js","components/ItemImage.js","components/Button.js","components/Arrow.js","components/ToolTip.js","components/Input.js","views/CreateCharacter.js","components/BackgroundImages.js","containers/EventLog.js","containers/Story.js","containers/Map.js","containers/GearAndWeapons.js","containers/PlayerVitals.js","containers/DirectionalArrows.js","containers/Abilities.js","containers/Inventory.js","containers/SpellBook.js","containers/SaveAndLoad.js","components/Slider.js","containers/Volume.js","views/Play.js","Game.js","index.js"],"names":["dispatch","combineReducers","GameTime","State","Action","NewState","type","Turn","Start","Milliseconds","HumanFriendly","Player","PlayerState","NewPlayerState","Monsters","Maps","WallMap","WallMapRevealed","DiscoveryMap","LootMap","MonsterMap","Loot","LootContainers","EventLog","Story","Texts","CurrentEvent","Event","Cheats","Sound","Volume","Math","max","min","floor","Debug","SoundDebug","Responsiveness","MobileScreen","TabletScreen","Styles","createStore","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__","GameplayAssets","Messages","NewGame","On","Off","ShowFullMap","NoClip","GodMode","CastAlwaysSucceeds","LoadGameError","Invalid","Collision","LockedDoor","PlayerMissed","PlayerDead","Gathered","TooHeavy","TooMuch","ItemTooHeavy","BackpackFull","Potion","NoEffect","Health1","Health2","Health3","Stamina1","Stamina2","Stamina3","Mana1","Mana2","Mana3","Spell","CanNotCast","UnsufficientLevel","NotEnoughMana","Failed","NoTarget","NoTargetArea","Food","Yummy","Delicious","Diet","NotAsGoodAsMyMom","Rest","More","NotNecessary","PartialMessages","Period","UnlockDoor","MonsterNoticed","MonsterAttacking","MonsterMissed","MonsterKilled","PlayerHit","PlayerHealth","Weak","BadlyInjured","ThatHurt","JustAScratch","SpellSuccess","Help","ContactMe","GitHub","Vitals","Health","Mana","Stamina","Arrows","Race","Class","North","West","East","South","Stats","Abilities","Strength","Constitution","Dexterity","Intelligence","Level","LevelSpellcaster","LevelNotSpellcaster","XP","ArmorClass","Backpack","BackpackWeight","BackpackMaxWeight","SpellBook","Buttons","Reroll","PlayGame","ResumeGame","SaveGame","LoadGame","ClearLog","Take","GameStateBox","CharacterName","AbilityBonus","FirstSpell","LevelXP","Level2","Level3","Level4","Level5","Level6","Level7","Level8","Level9","Level10","Level11","Level12","Level13","Level14","Level15","Level16","Level17","Level18","Level19","Level20","MaxPlayerLevel","MaxAbilityScore","SpellTypes","SpellTargets","ScrollItemTypes","Type","image","Weight","WeaponClasses","Dagger","Sword","Blunt","Staff","Bow","Crossbow","MeleeWeaponClasses","Object","keys","filter","Key","map","WorldAssets","Races","Dwarf","Name","AbilityBoost","Description","Elf","Human","Gnome","Classes","Barbarian","AbilityPriorities","Proficiency","Cleric","Spellcaster","Fighter","Paladin","Ranger","Wizard","Items","Image","BagOfHolding","MaxItems","TravelerBag","DuffelBag","Haversack","IronKey","BrassKey","OrnateKey","Rock","HealthPotion","Heal","ManaPotion","StaminaPotion","EmeraldDagger","Damage","Min","Max","SimpleStaff","BurningStaff","StaffOfLife","StaffOfintelligence","CrusaderShield","TitaniumShield","AmuletOfMagic","SkullAmulet","ChainmailArmor","SteelArmor","GoldArmor","MithrilArmor","TitaniumArmor","LeatherBoots","LeatherGloves","SteelHelm","KnightHelm","Leaf","RestoreStamina","Apple","Berries","Grapes","Bread","Chicken","Sausage","MagicArrowScroll","ColdTouchScroll","FireballScroll","VampiricTouchScroll","ChainLightningScroll","CircleOfDeathScroll","MoonbeamScroll","FirstAidScroll","AlertnessScroll","HealWoundsScroll","RegenerateScroll","TrueStrikeScroll","BarkSkinScroll","StoneSkinScroll","BlessScroll","BlurScroll","MirrorShieldScroll","BerserkScroll","ConfusionScroll","EntangleScroll","ShockingGraspScroll","EarthquakeScroll","CreateFoodScroll","DetectMonsterScroll","FindTrapsScroll","MistyStepScroll","InvisibilityScroll","GlobeOfInvulnerabilityScroll","GenerateRandomItems","Level1","random","Spells","MagicArrow","ManaCost","Duration","ColdTouch","Fireball","VampiricTouch","Vampiric","ChainLightning","Target","MaxTargets","CircleOfDeath","Moonbeam","FirstAid","Property","Alertness","HealWounds","Regenerate","TrueStrike","Boost","Fixed","BarkSkin","Percentage","StoneSkin","Bless","Blur","MirrorShield","Berserk","Amount","Confusion","Effect","Entangle","ShockingGrasp","Earthquake","CreateFood","DetectMonster","FindTraps","MistyStep","Invisibility","GlobeOfInvulnerability","Bestiary","WinterWolf","Hyena","PoisonousSnake","Boar","BlackBear","SwarmOfWasps","Kobold","Gnoll","Dryad","Bullywug","Lizard","GiantRat","EvilSpider","Troglodyte","DeepRothe","Zombie","Skeleton","Ghoul","HellHound","Mummy","Banshee","LostSoul","Vampire","BoneDevil","Lich","PitFiend","Bandit","TribalWarrior","Assassin","Goblin","Hobgoblin","Orc","Troll","Dretch","HalfOgre","Ogre","Cyclops","Golem","StoneGiant","Acolyte","Sprite","Satyr","Elemental","Djinn","Harpy","Centaur","Manticore","Minotaur","Flumph","AnimatedTable","Utilities","UserOS","navigator","userAgent","indexOf","DevBuild","Mac","Win","StableBuild","DebugCreateCharacter","DebugVolume","ScreenSize","matchMedia","matches","ScreenBreakpoints","MaxEventLogEntries","ResponsiveMaxEventLogEntries","MaxSoundFilesPerFolder","StartMaxItems","DefaultSoundVolume","MaxSpellLevel","NumberOfSpells","length","Equipable","WallMapVisibleRange","x","y","WallMapVisibleRangeMobileScreen","MapObjects","Wall","Door","LootContainer","Undiscovered","Empty","Directions","DirectionsOffset","mapStateToProps","Store","state","ownProps","CampaignAssets","CreateCharacter","Facing","Gear","Head","Neck","Chest","LeftHand","RightHand","LeftFinger","RightFinger","Feet","Quiver","AvailableStartSpell","maxItems","ItemCount","items","Stationary","StartText","text","Text","accessPoints","SingleTile","Functions","IndefiniteArticle","word","capitalize","isNaN","includes","toLowerCase","RandomIntegerFromRange","RandomFloatFromRange","URL","href","this","props","onMouseLeave","onMouseMove","style","target","title","children","Component","LineBreak","View","Block","alt","Heading","H3","HeadingContainer","connect","PageSubtitle","H2","PageSubtitleContainer","PageTitle","H1","PageTitleContainer","Graphics","ClearFloat","clear","Version","draggable","src","GitHubLogo","GitHubContainer","Link","NormalStyle","setState","HoverStyle","LinkHover","LinkProps","LinkContainer","Contact","ContactContainer","Header","console","log","nextProps","location","process","HeaderContainer","ItemImage","ItemSingleAction","ItemActionHover","ItemAction","UseItem","onClick","ItemImageBlock","RegisterTouch","Item","item","getOwnPropertyNames","TouchEvent","ToggleItemActions","input","Slot","grabInput","preventDefault","NoActionMenu","HideItemDescription","ShowItemDescription","pageX","pageY","HideItemActions","PreventHoverEvent","document","addEventListener","Mounted","DescriptionAsAction","CleanupDescriptionEventListener","removeEventListener","ShowItemDescriptionOnHover","HoveredOut","setTimeout","bind","HideItemDescriptionOnHover","ShowHoverForItemAfterClick","ResetHover","ItemDescription","hidden","left","top","ItemDescriptionName","ItemDescriptionContent","ItemActions","AvailableActions","key","Equipped","BuiltInComponent","push","MainAction","Clicked","update","$merge","warn","Id","id","onContextMenu","onMouseEnter","onTouchStart","ItemImageBlockClick","getElementById","getBoundingClientRect","scrollLeft","ItemImageBlockNumber","showIndex","index","ItemImageBlockContainer","ActionButton","SmallPadding","ActionButtonSmallPadding","ActionButtonHoverSmallPadding","ActionButtonHover","ActionButtonClickSmallPadding","ActionButtonClick","that","StayClicked","NextProps","CurrentlyClicked","CurrentlySmallPadding","display","ActionButtonContainer","Arrow","ArrowBlock","ArrowBlockHover","arrow","ArrowBlockClick","arrowStyle","ArrowContainer","HoverToolTip","ShowToolTipOnClick","DisabledOnClick","HideToolTipOnClick","HideToolTip","ShowToolTipOnHover","HideToolTipOnHover","ShowHoverAfterClick","ToolTip","FlexibleWidth","ToolTipFlexibleWidth","NextState","onKeyUp","ToolTipContainer","TextEdit","onKeyPress","keypress","blur","onFocus","styleFocus","TextEditFocus","onBlur","onChange","name","placeholder","value","maxLength","TextEditContainer","TextArea","readOnly","TextAreaContainer","CreateCharacterHeader","CharacterHeader","CreateCharacterContainer","CreateCharacterName","CharacterCreateName","PropertyLabelForInput","Gameplay","Inline","PropertyFieldForInput","TextEditUnderline","TextEditUnderlineFocus","SavePlayerName","PropertyLabel","PropertyField","MaxHealth","MaxMana","MaxStamina","CreateCharacterAbilities","assign","CharacterCreateView","RollAbilities","GeneratePlayerStats","CreateCharacterBackground","SelectRace","Input","World","RaceName","RaceObjectName","i","SetRace","SelectClass","ClassName","ClassObjectName","SetClass","SelectFirstSpell","Campaign","SetFirstSpell","CharacterCreateBackground","paddingTop","FlexBoxContainer","flexGrow","flexBasis","textAlign","margin","marginTop","marginLeft","CreateCharacterDescription","Paragraph","StartGame","GameInBackground","StartPlaying","CreatePlayer","TopBackgroundImage","TopGameBackgroundImage","TopBackgroundImageContainer","BottomBackgroundImage","BottomGameBackgroundImage","BottomBackgroundImageContainer","GameStateBackgroundImage","GameStateBackgroundImageContainer","ClearLogContainer","HtmlElement","SeparatingLine","clientHeight","Direction","clientY","scrollHeight","height","scrollTop","DisplayCustomLogEntryInput","Scroll","EventLogContainer","LogEntry","Index","CustomLogEntryInputContainer","width","padding","replace","EnterCustomLogEntry","CustomLogEntry","StoreCustomLogEntryInput","SaveCustomLogEntryInput","split","paragraph","StoryContainer","Map","DrawMap","HorizontalLine","MapRow","MapObjectRevealed","MapObject","join","DrawMonster","DrawMapObject","Monster","topRow","slice","middleRow","bottomRow","MapObjectInContext","DrawWall","DrawDoor","DetectWallInVicinityOfActor","EmptySurrounding","Row","MapObj","Pillar","WestToEast","NorthToSouth","NorthToWest","SouthToEast","SouthToWest","NorthToEast","TShapedWallNSW","NorthSouthAndWest","TShapedWallNSE","NorthSouthAndEast","NorthSouthEastAndSouthEast","NorthWestEastAndNorthWest","wallX","wallY","actorX","actorY","Click","clientX","PlayerMarker","DecisiveDirection","Offset","undefined","MovePlayer","onClickArrow","onMouseDown","MapContainer","Accessories","HideInventory","GearContainer","WeaponReady","ReadyItem","WeaponReadyContainer","WeaponReadyBlock","WeaponReadyBlockContainer","PlayerNameAndWeapons","PlayerStats0","ReadyItemBlock","PlayerNameAndWeaponsContainer","StatBar","Metric","ratio","current","ShowLabel","StatBarContainer","HealthBar","HealthBarContainer","ManaBar","ManaBarContainer","StaminaBar","ceil","StaminaBarContainer","PlayerVitals","PlayerStat","PlayerVitalsContainer","GoNorth","GoWest","GoEast","GoSouth","ArrowRow","DirectionalArrows","PlayerLevelAndArmor","PlayerStats2Block1","PlayerStats3","HideStats","PlayerLevelAndArmorContainer","PlayerAbilities","PlayerStats2Block2","PlayerAttributesStacked","PlayerAbilitiesContainer","Inventory","DisplayInventory","list","Number","InventoryLabel","InventoryWeightLabel","Current","toFixed","InventoryContainer","DisplaySpellBook","SpellSlots","CastSpell","MaxSpells","HideSpellBook","SpellBookLabel","SpellBookContainer","BottomControls","BottomControlsContainer","GameStateOptions","ToggleSaveGameStateBox","ToggleGameStateBox","ToggleLoadGameStateBox","ToggleCancelGameStateBox","GameState","ShowCharacterScreen","ShowGameStateBox","GameStateOptionsContainer","GenerateSaveGameState","IncludeStaticAssets","Keystrokes","EditableGameStateBox","GameStateToLoad","RandomItems","StripStaticAssets","DisplayState","JSON","stringify","ToggleSaveStaticAsset","UpdateGameStateToLoad","select","GameStateBoxContainer","checked","Slider","SliderWidth","Dragging","onMouseUp","CurrentValue","MaxValue","MinValue","Ratio","CursorWidth","SliderCursor","border","SliderTrack","SliderInside","SliderContainer","NewValueRatio","VolumeSlider","VolumeControl","VolumeLabel","VolumeContainer","RestButton","ResponsiveTabSelector","TabSelector","TabButton","ShowStats","ShowInventory","ShowSpellBook","RepsonsiveStatsContainer","ResponsiveStatsContainer","Controls","ControlBlock","TakeSingleLoot","lootContainerId","LootList","GenerateEventText","currentEvent","loot","lootIsEmpty","lootCount","eventText","event","eventType","TakeAllLoot","StoryBlock","Game","NextAvailableId","CalculateStyles","px","HUDBorder","ButtonNormalBackground","ButtonHoverBackground","ButtonClickBackground","WallLine","BorderThickness","DoorLine","TitleRow","ContactRow","MessageRow","MainRow","ControlRow","ControlRow2","ControlRow3","InventoryRow","SpellBookRow","AccessoriesStartRow","AccessoriesStopRow","BottomControlsRow","VolumeRow","GameStateRow","StoryStartColumn","StoryEndColumn","MapStartColumn","MapEndColumn","ContactColumnStart","ContactColumnStop","PlayerWeaponStartColumn","PlayerWeaponStopColumn","PlayerVitalsStartColumn","PlayerVitalsStopColumn","DirectionalArrowStartColumn","DirectionalArrowStopColumn","PlayerActionStartColumn","PlayerActionStopColumn","PlayerStat2StartColumn","PlayerAttributesStartColumn","PlayerAttributesBlockSeparation","PlayerAttributesStopColumn","InventoryStartColumn","InventoryStopColumn","SpellBookStartColumn","SpellBookStopColumn","AccessoriesStartColumn","AccessoriesStopColumn","Hidden","Placeholder","background","paddingBottom","justifyContent","fontFamily","fontSize","outline","textDecoration","userSelect","cursor","gridTemplateColumns","gridTemplateRows","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","backgroundImage","minHeight","marginRight","StoryRowHeight","color","fontStyle","H4","paddingLeft","verticalAlign","backgroundColor","borderRadius","fontWeight","HUDPadding","maxHeight","overflow","scrollBehavior","LastColumn","paddingRight","zIndex","borderRight","borderLeft","borderTop","minWidth","boxSizing","WallBoxWidth","WallBoxHeight","marginBottom","WallBoxWidthWithBorder","WallBoxHeightWithBorder","borderBottom","WallBoxWidthCentered","WallBoxHeightCentered","DoorLongSize","boxShadow","float","position","opacity","right","maxWidth","textTransform","forceUpdate","GenerateFormattedDate","TimeInMilliseconds","getFullYear","getMonth","getDate","PadNumber","getHours","getMinutes","GenerateFormattedTime","Time","Date","getSeconds","NumberToPad","GenerateIds","ArrayToId","IdType","ArrayElement","InitGameEnvironment","InitPlayer","InitState","GameStarted","now","itemObjectName","CheckInventoryWeightAtStartUp","MaxWeight","parse","Container","currentText","currentTextImage","Rolls","GeneratePlayerAbilityScore","sort","a","b","AbilityScores","AbilityModifier","CalculateMaxHealth","CalculateMaxStamina","CalculateMaxWeight","CalculateMaxMana","error","AbilityDieBonus","rolls","score","dieScore","RollDice","apply","RaceObject","ClassObject","Operation","Visibility","Editable","ListenToKeyboard","Dead","tagName","match","BreakEvent","CastSpellFromKeyboard","FlushKeystrokeHistory","UseItemFromKeyboard","LookForCheats","PlaySound","Strict","Cheat","Prefix","SetText","SoundName","Precedence","SoundFileExtensions","SoundFileFolders","SoundPlaying","CountTest","CountErrors","MaxErrorCount","SoundArray","AudioObject","Audio","PlaySingleFile","AudObj","play","then","volume","catch","SoundFileDoesNotExist","SoundFileExists","p","onloadeddata","SelectedSound","RandomInteger","onerror","RandomDirection","array","randomY","randomX","RollD20","dice","sides","result","Ability","GetUnlucky","Luck","SetMessage","Message","currentMessage","EventLogEntries","Array","isArray","Msg","ScrollToBottom","ElementId","ScrollToTop","CustomLogEntryInputRecentlyClosed","NewLogEntry","ResetArrowStyle","UpdateText","StoryTexts","matchTextAccessPoint","Used","accessPoint","AbilityCheck","AbilityScore","Modifier","FindMonsterById","MonsterId","FindSingleMonsterInSurroundings","Actor","Targets","concat","SpellNumber","FindSpell","Caster","CasterIsPlayer","UpdateEventLog","TargetHit","MonsterTakeDamage","targetCoordinates","TargetMonster","MonsterInCenter","SpellActionUsed","MoveMonsters","FullStateUpdate","MoveObject","CheckLockedDoors","Locked","Unlocked","UnlockMessage","AttackMonster","DetectCollision","WakeUpMonster","UpdateDiscoveryMap","CheckLootContainers","PlayerCoordinates","originalCoordinates","MapY","MapX","LockedDoors","matchLockedDoor","object","matchKey","DoorId","matchLootContainer","GenerateRandomLoot","LootCount","FreeSlots","LootEvents","CheckInventoryWeight","lootIndex","containerId","lootContainer","splice","DropItem","Save","reduce","sum","val","MonsterList","ChasePlayer","PlayerNewCoordinates","Patrol","Surroundings","GetSurroundingWalls","originalMonsterCoordinates","HorizontalDistance","VerticalDistance","Monst","AttackPlayer","PlayerTakeDamage","MonsterCoordinates","Enemy","DistributeXP","ItemNumber","FindItem","DrinkPotion","NewHealedProperty","RemoveItemFromInventory","ConsumeFood","Bonus","UpdatedBackpackItems","BackpackItem","Source","DebugEventMessages","Play","GameContainer","GameStore","store","ReactDOM","render"],"mappings":"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","file":"static/js/main.bee44837.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction GameTime(State, Action) {\n    let NewState = { ...State };\n    switch (Action.type) {\n        case 'UPDATE_TURN':\n            NewState = { ...NewState, Turn: Action.Turn };\n            break;\n\n        case 'ADD_TIMESTAMP':\n            if (!NewState.GameTime) {\n                NewState = { ...NewState, Start: [] };\n            }\n            NewState = {\n                ...NewState,\n                Start: [\n                    ...NewState.Start,\n                    {\n                        Milliseconds: Action.Milliseconds,\n                        HumanFriendly: Action.HumanFriendly\n                    }\n                ]\n            };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Player(PlayerState, Action) {\n    let NewPlayerState = { ...PlayerState };\n\n    switch (Action.type) {\n        case 'UPDATE_PLAYER':\n            NewPlayerState = { ...PlayerState, ...Action.Player };\n            break;\n\n        case 'USE_ITEM':\n            // do mutations of the copied state\n            /*\n            NewPlayerState = update(PlayerState, {\n                $merge: {\n                    Health: {\n                        ...PlayerState.Health,\n                        Current: 2\n                    }\n                }\n            });\n            */\n\n            // console.log(PlayerState, NewPlayerState);\n\n            // dispatch({type: \"REMOVE_ITEM\", Item: []})\n\n            // let Item = Action.Item\n\n            break;\n\n        case 'REMOVE_ITEM':\n            debugger;\n            break;\n\n        default:\n            break;\n    }\n\n    return NewPlayerState;\n}\n\nfunction Monsters(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_MONSTERS':\n            NewState = { ...NewState, ...Action.Monsters };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Maps(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_MAPS':\n            NewState = {\n                ...NewState,\n                WallMap: [...Action.WallMap],\n                WallMapRevealed: [...Action.WallMapRevealed],\n                DiscoveryMap: [...Action.DiscoveryMap],\n                LootMap: [...Action.LootMap],\n                MonsterMap: [...Action.MonsterMap]\n            };\n            break;\n\n        case 'UPDATE_DISCOVERY_MAP':\n            NewState = {\n                ...NewState,\n                DiscoveryMap: [...Action.DiscoveryMap]\n            };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Loot(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_LOOT':\n            NewState = { ...NewState, ...Action.LootContainers };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction EventLog(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_EVENT_LOG':\n            NewState = { ...NewState, ...Action.EventLog };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Story(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_STORY':\n            NewState = { ...NewState, ...Action.Story };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Texts(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_TEXTS':\n            NewState = [...Action.Texts];\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction CurrentEvent(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_CURRENT_EVENT':\n            NewState = [...Action.Event];\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Cheats(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_CHEATS':\n            NewState = { ...NewState, ...Action.Cheats };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Sound(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_SOUND':\n            NewState = { ...NewState, ...Action.Sound };\n            break;\n\n        case 'UPDATE_VOLUME':\n            NewState = {\n                ...NewState,\n                Volume: Math.max(\n                    0,\n                    Math.min(1, Math.floor(Action.Volume * 100) / 100)\n                )\n            };\n            break;\n\n        case 'MUTE_VOLUME':\n            NewState = { ...NewState, Volume: 0 };\n            break;\n\n        case 'INCREASE_VOLUME':\n            NewState = {\n                ...NewState,\n                Volume: Math.min(\n                    1,\n                    Math.floor((NewState.Volume + 0.1) * 100) / 100\n                )\n            };\n            break;\n\n        case 'DECREASE_VOLUME':\n            NewState = {\n                ...NewState,\n                Volume: Math.max(\n                    0,\n                    Math.floor((NewState.Volume - 0.1) * 100) / 100\n                )\n            };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Debug(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_DEBUG':\n            NewState = {\n                ...NewState,\n                Debug: Action.Debug,\n                SoundDebug: Action.SoundDebug\n            };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Responsiveness(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_SCREEN_SIZE':\n            NewState = {\n                ...NewState,\n                MobileScreen: Action.MobileScreen,\n                TabletScreen: Action.TabletScreen\n            };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nfunction Styles(State, Action) {\n    let NewState = { ...State };\n\n    switch (Action.type) {\n        case 'UPDATE_STYLES':\n            NewState = { ...NewState, ...Action.Styles };\n            break;\n\n        default:\n            break;\n    }\n\n    return NewState;\n}\n\nvar dispatch = combineReducers({\n    GameTime,\n    Player,\n    Monsters,\n    Maps,\n    Loot,\n    EventLog,\n    Story,\n    Texts,\n    CurrentEvent,\n    Cheats,\n    Sound,\n    Debug,\n    Responsiveness,\n    Styles\n});\n\nexport default dispatch;\n","import { createStore } from 'redux';\nimport Reducers from './Reducers';\n\nexport default createStore(\n    Reducers,\n    {},\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\n\nexport const GameplayAssets = {\n    Messages: {\n        NewGame: 'Ready for adventure!',\n        Debug: { On: 'Debug is ON.', Off: 'Debug is OFF.' },\n        SoundDebug: { On: 'Sound debug is ON.', Off: 'Sound debug is OFF.' },\n        Cheats: {\n            ShowFullMap: {\n                On: 'You can sense your surroundings very clearly.',\n                Off: 'Your akin sense of perception dissipates.'\n            },\n            NoClip: {\n                On:\n                    'Your essence is transformed. Your body becomes immaterial.',\n                Off:\n                    'You cease floating into the air. Your feet are now anchored to the ground again.'\n            },\n            GodMode: {\n                On: 'You feel almighty and invincible.',\n                Off: 'Your godly powers leave your body.'\n            },\n            CastAlwaysSucceeds: {\n                On: 'Your concentration is at its highest.',\n                Off: \"You're not sure your next spell will succeed anymore.\"\n            }\n        },\n        LoadGameError: {\n            Invalid: 'The game state you entered is not valid.'\n        },\n        Collision: \"You can't go there.\",\n        LockedDoor: \"You try to open the door... it's locked.\",\n        PlayerMissed: 'You missed your target!',\n        PlayerDead: 'Ouch! You are dead.',\n        Loot: {\n            Gathered: 'You gathered all the loot in your backpack.',\n            TooHeavy: 'The loot is too heavy.',\n            TooMuch: 'You can not take all the loot.',\n            ItemTooHeavy: 'This item is too heavy.',\n            BackpackFull: 'Your backpack is full.'\n        },\n        Potion: {\n            NoEffect: 'The potion had no effect.',\n            // Health\n            Health1: 'You feel a little better.',\n            Health2: 'Your body regenerates quickly.',\n            Health3: 'This potion was much needed.',\n            // Stamina\n            Stamina1: 'The potion gave you a small boost of energy.',\n            Stamina2: \"You're in better shape now.\",\n            Stamina3: 'You feel invigorated.',\n            // Mana\n            Mana1:\n                'As you drink the potion, a tiny sparkle lights up in your chest.',\n            Mana2: 'You feel the power of magic.',\n            Mana3: 'Nice!'\n        },\n        Spell: {\n            CanNotCast:\n                'You have not studied the arcane of magic. You can not cast spells.',\n            UnsufficientLevel:\n                'You have not mastered the secrets of this spell yet.',\n            NotEnoughMana: [\n                \"You can't gather the energy necessary to operate this kind of magic.\",\n                'Your power is too low to cast this spell.',\n                'You position your hands and get ready to cast the spell. Nothing happens.'\n            ],\n            Failed: [\n                'As you finish pronouncing the magic words to cast the spell, the energy you focalized dissipates.',\n                'Your mind wandered at a critical time that required all your attention. The spell failed.',\n                'Darn! The effect of your spell flopped miserably.'\n            ],\n            NoTarget:\n                'A beautiful ray of magic appears, and crashes on a wall in front of you.',\n            NoTargetArea:\n                'A wave of energy emanated from you, but nobody got hit.'\n        },\n        Food: {\n            // random\n            Yummy: (\n                <span>\n                    Crunch crunch... Now <i>that</i> was yummy.\n                </span>\n            ),\n            Delicious: 'Delicious! Totally worth it.',\n            Diet: 'Look at you. A perfect, healthy diet.',\n            NotAsGoodAsMyMom: \"Not as good as your mom's, but that will do.\",\n            // more or less needed\n            Rest: 'Aaaaaah! That was a good meal. How about a little nap now?',\n            More: 'Well, you could definitively use some more of that.',\n            NotNecessary: \"Well, that wasn't really necessary, was it?\"\n        }\n    },\n    PartialMessages: {\n        Period: '.',\n        UnlockDoor: 'You unlocked the door with the ',\n        MonsterNoticed: ' noticed your presence.',\n        MonsterAttacking: ' is attacking you.',\n        MonsterMissed: ' missed their attack.',\n        MonsterKilled: 'You killed ',\n        PlayerHit: 'You hit ',\n        PlayerHealth: {\n            Weak: 'You feel very weak.',\n            BadlyInjured: 'You are badly injured.',\n            ThatHurt: 'That hurt a little.',\n            JustAScratch: 'No worries, just a scratch.'\n        },\n        SpellSuccess: 'You successfully cast '\n    },\n\n    Help: {\n        ContactMe: '',\n        GitHub: '',\n        // Player stats and controls + Character creation\n        Vitals: {\n            Health:\n                'Your health determines how much damage you can take before you fall unconscious.',\n            Mana: 'Mana is a pool of energy that is necessary to cast spells.',\n            Stamina:\n                'As your stamina decreases, you are more likely to fail at your actions.'\n        },\n        Arrows: {\n            Race: 'Click here to choose a different race.',\n            Class: 'Click here to choose a different class.',\n            Spell: 'Click here to choose a different spell.',\n            North: 'Click here to go north.',\n            West: 'Click here to go west.',\n            East: 'Click here to go east.',\n            South: 'Click here to go south.'\n        },\n        Stats: 'Your stats define the kind of adventurer you are.', // only shows on small screens\n        Abilities: {\n            Strength: 'Strength dictates the force of your attacks.',\n            Constitution:\n                'Your constitution determines how much effort you can sustain and how good you are at taking damage.',\n            Dexterity:\n                'Dexterity influences how able you are to hit your target.',\n            Intelligence:\n                'Your intelligence affects your ability to successfully cast spells.'\n        },\n        Level:\n            'Your level represents how seasoned you are. Every time you level up, you become more able. If you are a spellcaster, you also learn new spells.',\n        LevelSpellcaster:\n            'Your level represents how seasoned you are. Every time you level up, you become more able and you learn new spells.',\n        LevelNotSpellcaster:\n            'Your level represents how seasoned you are. Every time you level up, you become more able.',\n        XP:\n            'You gain experience points as you progress in your adventure. When you reach a certain amount, you level up.',\n        ArmorClass:\n            'Your Armor Class (AC) shows how well protected you are against the attacks of enemies',\n        // Backpack\n        Backpack:\n            'You can carry items that are not equipped in your backpack. Depending on the type of backpack you own, you can travel with more or less items.',\n        BackpackWeight:\n            'This is the current weight of your backpack and your equipment.',\n        BackpackMaxWeight:\n            'This is the maximum weight you can hold without being immobilized. The stronger you are, the more weight you can bear.',\n        // Spellbook\n        SpellBook: 'Your spellbook contains all the spells that you can cast.',\n        // Action buttons\n        Buttons: {\n            Reroll: 'Generate a new set of numbers.',\n            PlayGame: \"Ready? Let's get started!\",\n            ResumeGame:\n                'Changed your mind? Click here to stop the creation of a new character and resume your adventure where you left it.',\n            NewGame: 'Start a game with a different character.',\n            SaveGame: 'Copy the current state of your game.',\n            LoadGame: 'Insert a game state to resume playing.',\n            ClearLog: 'Remove all log entries until now.',\n            Rest:\n                'Take a long rest to restore your health, your mana, and your stamina. Be careful, enemies might attack you in your sleep!',\n            Take: 'Put the loot in your backpack.'\n        },\n        // Save/Load game\n        GameStateBox: {\n            SaveGame:\n                'Copy this text and store it in a file in order to resume your game later.',\n            LoadGame: 'Copy here a previously saved game to keep playing it.'\n        },\n        // Specific to character creation\n        CharacterName: 'Enter the name of your character.',\n        AbilityBonus: 'The race you selected has a bonus for this ability.',\n        Race: 'Each race has slightly different natural traits.',\n        Class:\n            'A class determines what your talent are and what type of combat you trained for.',\n        FirstSpell: 'Choose the first spell that will go into your spellbook.',\n        Sound: ''\n    },\n\n    LevelXP: {\n        Level2: 10,\n        Level3: 900,\n        Level4: 2700,\n        Level5: 6500,\n        Level6: 14000,\n        Level7: 23000,\n        Level8: 34000,\n        Level9: 48000,\n        Level10: 64000,\n        Level11: 85000,\n        Level12: 100000,\n        Level13: 120000,\n        Level14: 140000,\n        Level15: 165000,\n        Level16: 195000,\n        Level17: 225000,\n        Level18: 265000,\n        Level19: 305000,\n        Level20: 355000\n    },\n\n    MaxPlayerLevel: 20,\n    MaxAbilityScore: 50\n};\n\nexport default GameplayAssets;\n","const SpellTypes = {\n    Heal: 'Heal',\n    Attack: 'Attack',\n    Motion: 'Motion',\n    Bonus: 'Bonus'\n    // \"Other\" type is omitted\n};\n\nconst SpellTargets = {\n    Surrounding: 'Surrounding',\n    Facing: 'Facing',\n    Adjacent: 'Adjacent'\n};\n\n// Generic scroll items\nconst ScrollItemTypes = {\n    AttackSpell: {\n        Type: 'scroll',\n        image: 'scroll_attack',\n        Weight: 0.1\n    },\n    BonusSpell: {\n        Type: 'scroll',\n        image: 'scroll_bonus',\n        Weight: 0.1\n    },\n    MotionModifierSpell: {\n        Type: 'scroll',\n        image: 'scroll_motion_modifier',\n        Weight: 0.1\n    },\n    OtherSpell: {\n        Type: 'scroll',\n        image: 'scroll_other',\n        Weight: 0.1\n    }\n};\n\nconst WeaponClasses = {\n    Dagger: 'dagger',\n    Sword: 'sword',\n    Blunt: 'blunt',\n    Staff: 'staff',\n    Bow: 'bow',\n    Crossbow: 'crossbow'\n};\n\nconst MeleeWeaponClasses = Object.keys(WeaponClasses)\n    .filter(Key => {\n        return (\n            WeaponClasses[Key] !== 'Bow' && WeaponClasses[Key] !== 'Crossbow'\n        );\n    })\n    .map(Key => {\n        return WeaponClasses[Key];\n    });\n\nexport const WorldAssets = {\n    Races: {\n        Dwarf: {\n            Name: 'dwarf',\n            AbilityBoost: { Constitution: 2 },\n            Description:\n                'Dwarves are used to the hardship of the mountains. They are very resistant to attacks.'\n        },\n        Elf: {\n            Name: 'elf',\n            AbilityBoost: { Dexterity: 2 },\n            Description:\n                'Elves are atuned to their body. Their concentration gives them a great advantage during combat.'\n        },\n        Human: {\n            Name: 'human',\n            AbilityBoost: {\n                Constitution: 1,\n                Strength: 1,\n                Intelligence: 1\n            },\n            Description:\n                'Humans are polyvalent. Their instincts make them fit for any kind of adventure.'\n        },\n        Gnome: {\n            Name: 'gnome',\n            AbilityBoost: { Intelligence: 2 },\n            Description: 'Gnomes are a smart people. They can be great wizards.'\n        }\n    },\n\n    Classes: {\n        Barbarian: {\n            Name: 'barbarian',\n            // STR (+) - CON - DEX\n            AbilityPriorities: [\n                'Strength',\n                'Constitution',\n                'Dexterity',\n                'Intelligence'\n            ],\n            Proficiency: Object.keys(WeaponClasses).map(Key => {\n                return WeaponClasses[Key];\n            }),\n            Description:\n                'Barbarians are vigorous warriors. Their innate combat skills give them an advantage with all weapons. Conversely, barbarians have absolutely no interest in magic.'\n        },\n        Cleric: {\n            Name: 'cleric',\n            Spellcaster: true,\n            // INT - CON - DEX\n            AbilityPriorities: [\n                'Intelligence',\n                'Constitution',\n                'Dexterity',\n                'Strength'\n            ],\n            Proficiency: ['blunt', 'staff'],\n            Description:\n                'Clerics are spiritual guides who have a strong connection with the plane of immateriality. Their faith allows them to summon the powers of their gods. Clerics are experimented with blunt weapons and staves.'\n        },\n        Fighter: {\n            Name: 'fighter',\n            // STR (+) - DEX - CON\n            AbilityPriorities: [\n                'Strength',\n                'Dexterity',\n                'Constitution',\n                'Intelligence'\n            ],\n            Proficiency: MeleeWeaponClasses,\n            Description:\n                'Fighters are strong beings that consider combat as a sport. Their meticulous training make them more precise than barbarians. Fighters tend to have a slightly weaker constitution, though. They are unable to cast spells but they know the secrets of all melee weapons.'\n        },\n        Paladin: {\n            Name: 'paladin',\n            Spellcaster: true,\n            // STR - INT - CON\n            AbilityPriorities: [\n                'Strength',\n                'Intelligence',\n                'Constitution',\n                'Dexterity'\n            ],\n            Proficiency: ['sword', 'blunt'],\n            Description:\n                'Paladins are both skilled soldiers and well-versed into the arcane of magic. Their weapon of choice is the sword but they also do a good deal of damage with blunt weapons.'\n        },\n        Ranger: {\n            Name: 'ranger',\n            // DEX (+) - CON - STR\n            AbilityPriorities: [\n                'Dexterity',\n                'Constitution',\n                'Strength',\n                'Intelligence'\n            ],\n            Proficiency: ['dagger', 'sword', 'bow', 'crossbow'],\n            Description:\n                'Rangers are stealthy individuals. Their incredible dexterity is instrumental during combats. They excel at the art of dodging and hitting their foes. Rangers are good with daggers, swords, bows, and crossbows.'\n        },\n        Wizard: {\n            Name: 'wizard',\n            Spellcaster: true,\n            // INT - DEX - CON\n            AbilityPriorities: [\n                'Intelligence',\n                'Dexterity',\n                'Constitution',\n                'Strength'\n            ],\n            Proficiency: ['dagger', 'staff'],\n            Description:\n                'Wizard are powerful mages. Their dedicated study of the world and its essence give them the ability to manipulate reality. They cast spells to protect themselves or destroy their opponents. Wizards are proficient with staves and daggers.'\n        }\n    },\n\n    Items: {\n        // Spellbook\n        SpellBook: {\n            Type: 'spellbook',\n            Name: 'spellbook',\n            Image: 'spellbook',\n            Description:\n                'This is where you keep notes on how to cast spells. Without this book, your magic is useless.',\n            Weight: 4\n        },\n\n        // Backpacks\n        BagOfHolding: {\n            Type: 'backpack',\n            Name: 'bag of holding',\n            Image: 'backpack_holding', // rename backpack_Sack2.png\n            Description:\n                'The best backpack you could dream of. Lots of room in there.',\n            MaxItems: 48\n        },\n        TravelerBag: {\n            Type: 'backpack',\n            Name: \"traveler's bag\",\n            Image: 'backpack_traveler',\n            Description:\n                'A must-have for adventurers. Holds a comfortable number of items.',\n            MaxItems: 32\n        },\n        DuffelBag: {\n            Type: 'backpack',\n            Name: 'duffel bag',\n            Description:\n                'This bag allows you to bring additional items with you.',\n            MaxItems: 16\n        },\n        Haversack: {\n            Type: 'backpack',\n            Name: 'haversack',\n            Description: 'A small bag where you can carry essential items.',\n            MaxItems: 10\n        },\n\n        // Keys\n        IronKey: {\n            type: 'key',\n            Name: 'iron key',\n            image: 'key_iron',\n            Weight: 0.1\n        },\n        BrassKey: {\n            type: 'key',\n            Name: 'brass key',\n            image: 'key_brass'\n        },\n        OrnateKey: {\n            type: 'key',\n            Name: 'ornate key',\n            image: 'key_ornate'\n        },\n\n        // Miscellani\n        Rock: {\n            Level: 1,\n            Type: 'misc',\n            Name: 'rock',\n            image: 'rock',\n            Weight: 2\n        },\n\n        // Potions\n        HealthPotion: {\n            Level: 1,\n            Type: 'potion',\n            Name: 'health potion',\n            image: 'potion_health',\n            Heal: 'Health',\n            Strength: 12,\n            Action: 'DrinkPotion',\n            Description:\n                'This vial contains a precious liquid that heals your wounds immediately.',\n            Weight: 0.5\n        },\n        ManaPotion: {\n            Level: 1,\n            Type: 'potion',\n            Name: 'mana potion',\n            image: 'potion_mana',\n            Heal: 'Mana',\n            Strength: 8,\n            Action: 'DrinkPotion',\n            Description:\n                'A precious item for spellcasters. This potion replenishes your magic energy without the need to rest.',\n            Weight: 0.5\n        },\n        StaminaPotion: {\n            Level: 1,\n            Type: 'potion',\n            Name: 'potion of vigor',\n            image: 'potion_stamina',\n            Heal: 'Stamina',\n            Strength: 30,\n            Action: 'DrinkPotion',\n            Description:\n                'A useful beverage for adventurers that need a boost to keep going.',\n            Weight: 0.5\n        },\n\n        // Weapons\n        // Swords\n        EmeraldDagger: {\n            Name: 'emerald dagger',\n            Type: 'weapon',\n            image: 'weapon_dagger_emerald',\n            Damage: { Min: 3, Max: 7 },\n            Weight: 3\n        },\n        Sword: {\n            Name: 'sword',\n            Type: 'weapon',\n            image: 'weapon_sword',\n            Damage: { Min: 5, Max: 9 }\n        },\n        // Bows\n        Bow: {\n            Type: 'weapon',\n            Name: 'bow',\n            image: 'weapon_bow'\n        },\n        // Staff\n        SimpleStaff: {\n            Name: 'simple staff',\n            Type: 'weapon',\n            image: 'weapon_staff'\n        },\n        BurningStaff: {\n            Name: 'burning staff',\n            Type: 'staff',\n            Image: 'weapon_staff_burning' // rename weapon_Staff2\n        },\n        StaffOfLife: {\n            Name: 'staff of life',\n            Type: 'staff',\n            Image: 'weapon_staff_life' // rename weapon_Staff3\n        },\n        StaffOfintelligence: {\n            Name: 'staff of intelligence',\n            Type: 'staff',\n            Image: 'weapon_staff_intelligence' // staff0\n        },\n        // Shield\n        CrusaderShield: {\n            Name: 'crusader shield',\n            Type: 'shield',\n            Image: 'shield_crusader'\n        },\n        TitaniumShield: {\n            Name: 'titanium_shield',\n            Type: 'shield',\n            Image: 'shield_titanium'\n        },\n        // Gear\n        // Necklaces\n        AmuletOfMagic: {\n            Name: 'amulet of magic',\n            Type: 'necklace',\n            image: 'amulet_magic'\n        },\n        SkullAmulet: {\n            Name: 'skull amulet',\n            Type: 'necklace',\n            image: 'amulet_skull'\n        },\n        // Armors\n        ChainmailArmor: {\n            Name: 'chainmail armor',\n            Type: 'armor',\n            Image: 'armor_chainmail' // delete original; rename armor_ChestH1.png\n        },\n        SteelArmor: {\n            Name: 'steel armor',\n            Type: 'armor',\n            Image: 'armor_steel' // rename armor_ChestG1.png\n        },\n        GoldArmor: {\n            Name: 'gold armor',\n            Type: 'armor',\n            Image: 'armor_gold'\n        },\n        MithrilArmor: {\n            Name: 'mithril armor',\n            Type: 'armor',\n            Image: 'armor_mithril'\n        },\n        TitaniumArmor: {\n            Name: 'titanium armor',\n            Type: 'armor',\n            Image: 'armor_titanium'\n        },\n        // Boots\n        LeatherBoots: {\n            Name: 'leather boots',\n            Type: 'boots',\n            Image: 'boots_leather'\n        },\n        // Gloves\n        LeatherGloves: {\n            Name: 'leather gloves',\n            Type: 'gloves',\n            Image: 'gloves_leather'\n        },\n        // Helm\n        SteelHelm: {\n            Name: 'steel helm',\n            Type: 'helm',\n            Image: 'steel_helm' // rename helm_01.png\n        },\n        KnightHelm: {\n            Name: 'knight helm',\n            Type: 'helm',\n            Image: 'helm_knight'\n        },\n        // Food\n        Leaf: {\n            Level: 1,\n            Name: 'leaf',\n            Type: 'food',\n            image: 'food_leaf',\n            RestoreStamina: 2,\n            Action: 'ConsumeFood',\n            Description:\n                \"There's probably more nutritious food that this leaf.\",\n            Weight: 0.1\n        },\n        Apple: {\n            Level: 1,\n            Name: 'apple',\n            Type: 'food',\n            image: 'food_apple',\n            RestoreStamina: 3,\n            Action: 'ConsumeFood',\n            Description: 'A delicious apple.',\n            Weight: 0.3\n        },\n        Berries: {\n            Level: 1,\n            Name: 'berries',\n            Type: 'food',\n            image: 'food_berries',\n            RestoreStamina: 3,\n            Action: 'ConsumeFood',\n            Description: 'Some sort of juicy fruit.',\n            Weight: 0.2\n        },\n        Grapes: {\n            Level: 1,\n            Name: 'grapes',\n            Type: 'food',\n            image: 'food_grapes',\n            RestoreStamina: 3,\n            Action: 'ConsumeFood',\n            Description: 'Nothing special about these grapes.',\n            Weight: 0.4\n        },\n        Bread: {\n            Level: 1,\n            Name: 'bread',\n            Type: 'food',\n            image: 'food_bread',\n            RestoreStamina: 5,\n            Action: 'ConsumeFood',\n            Description: \"Probably freshly baked. Where's the cheese?\",\n            Weight: 0.5\n        },\n        Chicken: {\n            Level: 1,\n            Name: 'chicken',\n            Type: 'food',\n            image: 'food_chicken',\n            RestoreStamina: 7,\n            Action: 'ConsumeFood',\n            Description: 'Would be even better in a soup.',\n            Weight: 0.4\n        },\n        Sausage: {\n            Level: 1,\n            Name: 'sausage',\n            Type: 'food',\n            image: 'food_sausage',\n            RestoreStamina: 7,\n            Action: 'ConsumeFood',\n            Description: 'Meat!',\n            Weight: 0.3\n        },\n\n        // Scrolls\n        // Attack\n        MagicArrowScroll: {\n            Level: 1,\n            Name: 'scroll of magic arrow',\n            Spell: 'MagicArrow',\n            ...ScrollItemTypes.AttackSpell\n        },\n        ColdTouchScroll: {\n            Name: 'scroll of cold touch',\n            Spell: 'ColdTouch',\n            ...ScrollItemTypes.AttackSpell\n        },\n        FireballScroll: {\n            Name: 'scroll of fireball',\n            Spell: 'Fireball',\n            ...ScrollItemTypes.AttackSpell\n        },\n        VampiricTouchScroll: {\n            Name: 'scroll of vampiric touch',\n            Spell: 'VampiricTouch',\n            ...ScrollItemTypes.AttackSpell\n        },\n        ChainLightningScroll: {\n            Name: 'scroll of chain lightning',\n            Spell: 'ChainLightning',\n            ...ScrollItemTypes.AttackSpell\n        },\n        CircleOfDeathScroll: {\n            Name: 'scroll of circle of death',\n            Spell: 'CircleOfDeath',\n            ...ScrollItemTypes.AttackSpell\n        },\n        MoonbeamScroll: {\n            Name: 'scroll of moonbeam',\n            Spell: 'Moonbeam',\n            ...ScrollItemTypes.AttackSpell\n        },\n        // Heal\n        FirstAidScroll: {\n            Level: 1,\n            Name: 'scroll of first aid',\n            Spell: 'FirstAid',\n            ...ScrollItemTypes.BonusSpell\n        },\n        AlertnessScroll: {\n            Name: 'scroll of alertness',\n            Spell: 'Alertness',\n            ...ScrollItemTypes.BonusSpell\n        },\n        HealWoundsScroll: {\n            Name: 'scroll of heal wounds',\n            Spell: 'HealWounds',\n            ...ScrollItemTypes.BonusSpell\n        },\n        RegenerateScroll: {\n            Name: 'scroll of regenerate',\n            Spell: 'Regenerate',\n            ...ScrollItemTypes.BonusSpell\n        },\n        // Bonus\n        TrueStrikeScroll: {\n            Name: 'scroll of true strike',\n            Spell: 'TrueStrike',\n            ...ScrollItemTypes.BonusSpell\n        },\n        BarkSkinScroll: {\n            Level: 1,\n            Name: 'scroll of bark sin',\n            Spell: 'BarkSkin',\n            ...ScrollItemTypes.BonusSpell\n        },\n        StoneSkinScroll: {\n            Name: 'scroll of stone skin',\n            Spell: 'StoneSkin',\n            ...ScrollItemTypes.BonusSpell\n        },\n        BlessScroll: {\n            Name: 'scroll of bless',\n            Spell: 'Bless',\n            ...ScrollItemTypes.BonusSpell\n        },\n        BlurScroll: {\n            Name: 'scroll of blur',\n            Spell: 'Blur',\n            ...ScrollItemTypes.BonusSpell\n        },\n        MirrorShieldScroll: {\n            Name: 'scroll of mirror shield',\n            Spell: 'MirrorShield',\n            ...ScrollItemTypes.BonusSpell\n        },\n        BerserkScroll: {\n            Name: 'scroll of berserk',\n            Spell: 'Berserk',\n            ...ScrollItemTypes.BonusSpell\n        },\n        // Motion Modifiers\n        ConfusionScroll: {\n            Name: 'scroll of confusion',\n            Spell: 'Confusion',\n            ...ScrollItemTypes.MotionModifierSpell\n        },\n        EntangleScroll: {\n            Name: 'scroll of entangle',\n            Spell: 'Entangle',\n            ...ScrollItemTypes.MotionModifierSpell\n        },\n        ShockingGraspScroll: {\n            Name: 'scroll of shocking grasp',\n            Spell: 'ShockingGrasp',\n            ...ScrollItemTypes.MotionModifierSpell\n        },\n        EarthquakeScroll: {\n            Name: 'scroll of earthquake',\n            Spell: 'Earthquake',\n            ...ScrollItemTypes.MotionModifierSpell\n        },\n        // Other\n        CreateFoodScroll: {\n            Name: 'scroll of create food',\n            Spell: 'CreateFood',\n            ...ScrollItemTypes.OtherSpell\n        },\n        DetectMonsterScroll: {\n            Name: 'scroll of detect monster',\n            Spell: 'DetectMonster',\n            ...ScrollItemTypes.OtherSpell\n        },\n        FindTrapsScroll: {\n            Name: 'scroll of find traps',\n            Spell: 'FindTraps',\n            ...ScrollItemTypes.OtherSpell\n        },\n        MistyStepScroll: {\n            Name: 'scroll of misty step',\n            Spell: 'MistyStep',\n            ...ScrollItemTypes.OtherSpell\n        },\n        InvisibilityScroll: {\n            Name: 'scroll of invisibility',\n            Spell: 'Invisibility',\n            ...ScrollItemTypes.OtherSpell\n        },\n        GlobeOfInvulnerabilityScroll: {\n            Name: 'scroll of globe of invulnerability',\n            Spell: 'GlobeOfInvulnerability',\n            ...ScrollItemTypes.OtherSpell\n        }\n    },\n\n    // Placeholder usable in campaign assets' loot containers\n    GenerateRandomItems: {\n        Level1: {\n            Level: 1,\n            random: true\n        }\n    },\n\n    // Spells\n    Spells: {\n        // Attack\n        MagicArrow: {\n            Level: 1,\n            ManaCost: 3,\n            Name: 'magic arrow',\n            Image: 'spell_magic_arrow',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 1-5\n            Damage: { Min: 1, Max: 5 },\n            Duration: 1,\n            Description:\n                'A low-level spell. A magic arrow shoots from your hand and pierces the flesh of your target.'\n        },\n        ColdTouch: {\n            Level: 3,\n            ManaCost: 7,\n            Name: 'frost bite',\n            Image: 'spell_cold_touch',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 4-8\n            Damage: { Min: 2, Max: 4 },\n            Duration: 2,\n            Description:\n                'This spell inflicts cold, lasting damage to the creature you touch.'\n        },\n        Fireball: {\n            Level: 5,\n            ManaCost: 11,\n            Name: 'fireball',\n            Image: 'spell_fireball',\n            Sound: 'spells/fireball',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 6-12\n            Damage: { Min: 6, Max: 12 },\n            Duration: 1,\n            Description: 'A burst of flame that briefly burns your enemy.'\n        },\n        VampiricTouch: {\n            Level: 8,\n            ManaCost: 16,\n            Name: 'vampiric touch',\n            Image: 'spell_vampiric_touch',\n            Sound: 'spells/vampiric_touch',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 4-10\n            Damage: { Min: 4, Max: 10 },\n            // Cumulated Health Restored Range: 4-10\n            Vampiric: true,\n            Duration: 1,\n            Description:\n                'This spell sucks a little bit of life from your target and transfers it to the caster.'\n        },\n        ChainLightning: {\n            Level: 12,\n            ManaCost: 26,\n            Name: 'chain lightning',\n            Image: 'spell_chain_lightning',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 3-45 (1-15 * 3)\n            Damage: { Min: 1, Max: 15 },\n            Duration: 1,\n            Target: SpellTargets.Adjacent,\n            MaxTargets: 3,\n            Description:\n                'A lightning bolt hits a cluster of creatures that stand next to each other.'\n        },\n        CircleOfDeath: {\n            Level: 16,\n            ManaCost: 59,\n            Name: 'circle of death',\n            Image: 'spell_circle_of_death',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 40-80 (5-10 * 8)\n            Damage: { Min: 5, Max: 10 },\n            Duration: 1,\n            Target: SpellTargets.Surrounding,\n            Description:\n                'A wave of necrotic energy emanates from the caster and inflicts damage to all the enemy nearby.'\n        },\n        Moonbeam: {\n            Level: 18,\n            ManaCost: 79,\n            Name: 'moonbeam',\n            Image: 'spell_moonbeam',\n            Type: SpellTypes.Attack,\n            // Cumulated Damage Range: 30-120 (6-24 * 5)\n            Damage: { Min: 3, Max: 12 },\n            Duration: 2,\n            Target: SpellTargets.Surrounding,\n            MaxTargets: 5,\n            Description:\n                'Beautiful rays of light magically appear and target the foes surrounding you.'\n        },\n\n        // Heal\n        FirstAid: {\n            Level: 1,\n            ManaCost: 4,\n            Name: 'first aid',\n            Image: 'spell_first_aid',\n            Type: SpellTypes.Heal,\n            // Cumulated Health Restored Range: 4-9\n            Heal: {\n                Property: 'Health',\n                Min: 4,\n                Max: 9\n            },\n            Duration: 1,\n            Description: 'Slightly improves your health.'\n        },\n        Alertness: {\n            Level: 3,\n            ManaCost: 6,\n            Name: 'alertness',\n            Image: 'spell_alertness',\n            Type: SpellTypes.Heal,\n            // Cumulated Stamina Restored Range: 24-48\n            Heal: {\n                Property: 'Stamina',\n                Min: 8,\n                Max: 16\n            },\n            Duration: 3,\n            Description: 'Relieves some of your fatigue.'\n        },\n        HealWounds: {\n            Level: 6,\n            ManaCost: 8,\n            Name: 'heal wounds',\n            Image: 'spell_heal_wounds',\n            Type: SpellTypes.Heal,\n            // Cumulated Health Restored Range: 6-16\n            Heal: {\n                Property: 'Health',\n                Min: 6,\n                Max: 16\n            },\n            Duration: 1,\n            Description: 'Resorbs the most superficial injuries.'\n        },\n        Regenerate: {\n            Level: 11,\n            ManaCost: 19,\n            Name: 'regenerate',\n            Image: 'spell_regenerate',\n            Type: SpellTypes.Heal,\n            // Cumulated Health Restored Range: 18-33\n            Heal: {\n                Property: 'Health',\n                Min: 6,\n                Max: 11\n            },\n            Duration: 3,\n            Description: 'A powerful spell that heals you gradually.'\n        },\n\n        // Bonus\n        TrueStrike: {\n            Level: 4,\n            ManaCost: 7,\n            Name: 'true strike',\n            Image: 'spell_true_strike',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Damage',\n                Type: 'Fixed',\n                Fixed: 2\n            },\n            Duration: 5,\n            Description:\n                'Your attacks temporarily inflict a little bit more damage.'\n        },\n        BarkSkin: {\n            Level: 1,\n            ManaCost: 11,\n            Name: 'bark skin',\n            Image: 'spell_bark_skin',\n            Sound: 'spells/bark_skin',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Armor',\n                Type: 'Percentage',\n                Percentage: 15\n            },\n            Duration: 10,\n            Description:\n                'Your skin gets a wood-like quality that makes you more resistant to attacks for a while.'\n        },\n        StoneSkin: {\n            Level: 3,\n            ManaCost: 19,\n            Name: 'stone skin',\n            Image: 'spell_stone_skin',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Armor',\n                Type: 'Percentage',\n                Percentage: 40\n            },\n            Duration: 15,\n            Description:\n                'This spell turns the outer layer of your body into stone, making it harder to hit you for some time.'\n        },\n        Bless: {\n            Level: 2,\n            ManaCost: 13,\n            Name: 'bless',\n            Image: 'spell_bless',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Damage',\n                Type: 'Max'\n            },\n            Duration: 8,\n            Description:\n                'This mystical spell momentarily helps you inflict the most damage to your foes.'\n        },\n        Blur: {\n            Level: 6,\n            ManaCost: 20,\n            Name: 'blur',\n            Image: 'spell_blur',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Damage',\n                Type: 'Min'\n            },\n            Target: SpellTargets.Facing,\n            Duration: 6\n        },\n        MirrorShield: {\n            Level: 10,\n            ManaCost: 36,\n            Name: 'mirror shield',\n            Image: 'spell_mirror_shield',\n            Type: SpellTypes.Bonus,\n            Damage: {\n                Type: 'Percentage',\n                Percentage: 20\n            },\n            Target: SpellTargets.Surrounding,\n            Duration: 5\n        },\n        Berserk: {\n            Level: 15,\n            ManaCost: 41,\n            Name: 'berserk',\n            Image: 'spell_berserk',\n            Type: SpellTypes.Bonus,\n            Boost: {\n                Property: 'Strength',\n                Type: 'Absolute',\n                Amount: 10\n            },\n            Duration: 5\n        },\n\n        // Motion Modifiers\n        Confusion: {\n            Level: 5,\n            ManaCost: 17,\n            Name: 'confusion',\n            Image: 'spell_confusion',\n            Type: SpellTypes.Motion,\n            Effect: 'Random',\n            Duration: 3\n        },\n        Entangle: {\n            Level: 9,\n            ManaCost: 18,\n            Name: 'entangle',\n            Image: 'spell_entangle',\n            Type: SpellTypes.Motion,\n            Effect: 'Immobilize',\n            Duration: 5\n        },\n        ShockingGrasp: {\n            Level: 13,\n            ManaCost: 25,\n            Name: 'shocking grasp',\n            Image: 'spell_shocking_grasp',\n            Type: SpellTypes.Motion,\n            Effect: 'Immobilize',\n            Damage: { Min: 3, max: 5 },\n            Duration: 2\n        },\n        Earthquake: {\n            Level: 16,\n            ManaCost: 69,\n            Name: 'earthquake',\n            Image: 'spell_earthquake',\n            Type: SpellTypes.Motion,\n            Effect: 'Immobilize',\n            Target: SpellTargets.Surrounding,\n            Duration: 3\n        },\n\n        // Other\n        CreateFood: {\n            Level: 3,\n            ManaCost: 9,\n            Name: 'create food',\n            Image: 'spell_create_food',\n            Effect: 'CreateFood'\n        },\n        DetectMonster: {\n            Level: 4,\n            ManaCost: 12,\n            Name: 'detect monster',\n            Image: 'spell_detect_monster',\n            Effect: 'DetectMonster'\n        },\n        FindTraps: {\n            Level: 7,\n            ManaCost: 14,\n            Name: 'Find traps',\n            Image: 'spell_find_traps',\n            Effect: 'FindTraps'\n        },\n        MistyStep: {\n            Level: 11,\n            ManaCost: 23,\n            Name: 'misty step',\n            Image: 'spell_misty_step',\n            Sound: 'spells/misty_step',\n            Effect: 'MistyStep'\n        },\n        Invisibility: {\n            Level: 14,\n            ManaCost: 78,\n            Name: 'invisibility',\n            Image: 'spell_invisibility',\n            Effect: 'Invisibility',\n            Duration: 12\n        },\n        GlobeOfInvulnerability: {\n            Level: 17,\n            ManaCost: 89,\n            Name: 'globe of invulnerability',\n            Image: 'spell_globe_of_invulnerability',\n            Effect: 'Invulnerability',\n            Duration: 5\n        }\n    },\n\n    Bestiary: {\n        // Forest\n        WinterWolf: {},\n        Hyena: {},\n        PoisonousSnake: {},\n        Boar: {},\n        BlackBear: {},\n        SwarmOfWasps: {},\n        Kobold: {},\n        Gnoll: {},\n        Dryad: {},\n\n        // Subterranean\n        Bullywug: {},\n        Lizard: {},\n        GiantRat: {},\n        EvilSpider: {},\n        Troglodyte: {},\n        DeepRothe: {},\n\n        // Undead\n        Zombie: {},\n        Skeleton: {},\n        Ghoul: {},\n        HellHound: {},\n        Mummy: {\n            Name: 'mummy',\n            Level: 1,\n            Health: 14,\n            Damage: { Min: 2, Max: 5 }\n        },\n        Banshee: {},\n        LostSoul: {},\n        Vampire: {},\n        BoneDevil: {},\n        Lich: {},\n        PitFiend: {},\n\n        // Humanoids\n        Bandit: {},\n        TribalWarrior: {},\n        Assassin: {},\n\n        // Green Skins\n        Goblin: {\n            Name: 'goblin',\n            Type: 'Green Skin',\n            Level: 1,\n            XP: 15,\n            Health: 12,\n            Damage: { Min: 1, Max: 4 }\n        },\n        Hobgoblin: {\n            Name: 'hobgoblin',\n            Type: 'Green Skin',\n            Level: 1,\n            XP: 20,\n            Health: 11,\n            Damage: { Min: 2, Max: 6 }\n        },\n        Orc: {\n            Name: 'orc',\n            Type: 'Green Skin',\n            Level: 1,\n            XP: 20,\n            Health: 30,\n            Damage: { Min: 4, Max: 7 }\n        },\n        Troll: {},\n        Dretch: {},\n\n        // Giants\n        HalfOgre: {},\n        Ogre: {},\n        Cyclops: {},\n        Golem: {},\n        StoneGiant: {},\n\n        // Magic\n        Acolyte: {},\n        Sprite: {},\n        Satyr: {},\n        Elemental: {},\n        Djinn: {},\n\n        // Hybrids\n        Harpy: {},\n        Centaur: {},\n        Manticore: {},\n        Minotaur: {},\n\n        // Fun\n        Flumph: {},\n        AnimatedTable: {}\n    }\n};\n\nexport default WorldAssets;\n","import WorldAssets from './WorldAssets.js';\n\nconst Debug = true;\nconst SoundDebug = false;\nconst Cheats = false;\n\nconst MobileScreenBreakpoint = 400;\nconst TabletScreenBreakpoint = 769;\n\nconst MobileScreen = function () {\n    return window.matchMedia('(max-width: ' + MobileScreenBreakpoint + 'px)')\n        .matches;\n};\nconst TabletScreen = function () {\n    return window.matchMedia('(max-width: ' + TabletScreenBreakpoint + 'px)')\n        .matches;\n};\n\nexport const Utilities = {\n    // builds\n    UserOS: window.navigator.userAgent.indexOf('Mac') > -1 ? 'Mac' : 'Win',\n    DevBuild: {\n        Mac: 'file:///Users/owner/Sites/dungeon/dev/index.html',\n        Win: 'file:///C:/Users/gurca/Documents/Projects/dungeon/dev/index.html'\n    },\n    StableBuild: {\n        Mac: 'file:///Users/owner/Sites/dungeon/stable/index.html',\n        Win:\n            'file:///C:/Users/gurca/Documents/Projects/dungeon/stable/index.html'\n    },\n\n    // debug\n    Debug,\n    DebugCreateCharacter: false,\n    SoundDebug,\n    DebugVolume: 0,\n    // cheats\n    Cheats: {\n        ShowFullMap: Cheats || false,\n        NoClip: Cheats || false,\n        GodMode: Cheats || false,\n        CastAlwaysSucceeds: Cheats || false\n    },\n\n    // responsiveness\n    ScreenSize: {\n        MobileScreen,\n        TabletScreen\n    },\n    ScreenBreakpoints: {\n        MobileScreen: MobileScreenBreakpoint,\n        TabletScreen: TabletScreenBreakpoint\n    },\n\n    // max\n    MaxEventLogEntries: 5,\n    ResponsiveMaxEventLogEntries: 3,\n    MaxSoundFilesPerFolder: 10,\n    // default\n    StartMaxItems: 5,\n    DefaultSoundVolume: 0.3,\n    // TODO: The value below should be calculated from the WorldAssets' list of spells instead of being hardcoded.\n    MaxSpellLevel: 18,\n    NumberOfSpells: Object.keys(WorldAssets.Spells).length,\n    // Item types that can be equipped by the player\n    Equipable: [\n        'weapon',\n        'shield',\n        'helmet',\n        'necklace',\n        'ring',\n        'armor',\n        'boots',\n        'projectile'\n    ],\n\n    // determines how many elements fit on the map\n    WallMapVisibleRange: {\n        x: 10,\n        y: 7\n    },\n    WallMapVisibleRangeMobileScreen: {\n        x: 7,\n        y: 7\n    },\n\n    // internal symbols used for map objects\n    MapObjects: {\n        Wall: 'X',\n        Door: 'D',\n        LootContainer: 'L',\n        Undiscovered: 'U',\n        Empty: ' '\n    },\n\n    // used to move objects in a specific direction within a 3x3 square (absolute coordinates)\n    Directions: {\n        North: {\n            x: 1,\n            y: 0\n        },\n        South: {\n            x: 1,\n            y: 2\n        },\n        West: {\n            x: 0,\n            y: 1\n        },\n        East: {\n            x: 2,\n            y: 1\n        }\n    },\n\n    // used to move objects based on the object's current position (relative coordinates)\n    DirectionsOffset: {\n        North: {\n            x: 0,\n            y: -1\n        },\n        South: {\n            x: 0,\n            y: 1\n        },\n        West: {\n            x: -1,\n            y: 0\n        },\n        East: {\n            x: 1,\n            y: 0\n        }\n    }\n};\n\nexport default Utilities;\n","import Store from './Store';\nimport Gameplay from '../GameplayAssets';\nimport Utilities from '../Utilities';\n\nconst { Door, Empty } = Utilities.MapObjects;\n\nconst dispatch = Store.dispatch;\n\nconst mapStateToProps = (state, ownProps) => {\n    const IndefiniteArticle = (word, capitalize) => {\n        if (word) {\n            const Vowels = ['a', 'e', 'i', 'u', 'o'];\n\n            if (isNaN(word) && Vowels.includes(word[0].toLowerCase())) {\n                if (capitalize) {\n                    return 'An';\n                } else {\n                    return 'an';\n                }\n            } else {\n                if (capitalize) {\n                    return 'A';\n                } else {\n                    return 'a';\n                }\n            }\n        } else {\n            return '';\n        }\n    };\n\n    const ScrollToTop = ElementId => {\n        if (document.getElementById(ElementId)) {\n            let HtmlElement = document.getElementById(ElementId);\n            HtmlElement.scrollTop = 0;\n        }\n    };\n\n    const UpdateText = ({ x, y }) => {\n        let currentText = state.Story.Text;\n        let currentTextImage = state.Story.Image;\n        let StoryTexts = [...state.Texts];\n\n        let matchTextAccessPoint = false;\n\n        if (StoryTexts) {\n            StoryTexts.map((text, index) => {\n                if (text.Used) return null;\n                return !text.accessPoints\n                    ? null\n                    : text.accessPoints.filter(accessPoint => {\n                          if (accessPoint.x === x && accessPoint.y === y) {\n                              matchTextAccessPoint = true;\n                              currentText = text.text;\n                              currentTextImage = text.image || null;\n                              StoryTexts[index].Used = true;\n                              return true;\n                          } else {\n                              return false;\n                          }\n                      });\n            });\n\n            if (currentText !== state.Story.Text) {\n                ScrollToTop('Story');\n            }\n\n            dispatch({\n                type: 'UPDATE_STORY',\n                Story: { Text: currentText, Image: currentTextImage }\n            });\n        }\n\n        return matchTextAccessPoint;\n    };\n\n    const MoveObject = (originalCoordinates, Direction) => {\n        // grab the object's current position\n        let targetCoordinates = {\n            x: originalCoordinates.x,\n            y: originalCoordinates.y\n        };\n\n        // calculate target coordinates\n        if (Direction === 'West') {\n            targetCoordinates.x -= 1;\n        }\n        if (Direction === 'East') {\n            targetCoordinates.x += 1;\n        }\n        if (Direction === 'North') {\n            targetCoordinates.y -= 1;\n        }\n        if (Direction === 'South') {\n            targetCoordinates.y += 1;\n        }\n\n        return targetCoordinates;\n    };\n\n    const CheckLockedDoors = ({ x, y }) => {\n        let LockedDoors = Object.assign([], state.LockedDoors);\n\n        if (LockedDoors) {\n            let matchLockedDoor = LockedDoors.filter(object => {\n                return object.x === x && object.y === y && !object.Unlocked;\n            });\n\n            return {\n                Locked: matchLockedDoor.length > 0,\n                Object: matchLockedDoor.length > 0 ? matchLockedDoor[0] : null\n            };\n        }\n\n        return {\n            Locked: false,\n            Object: null\n        };\n    };\n\n    const CheckLootContainers = ({ x, y }) => {\n        let LootContainers = [...state.Loot];\n\n        if (LootContainers) {\n            let matchLootContainer = LootContainers.filter(object => {\n                if (object.items) {\n                    object.items = object.items\n                        .map(item => {\n                            return this.GenerateRandomLoot(item);\n                        })\n                        .filter(item => {\n                            return item !== null;\n                        });\n                }\n                return object.x === x && object.y === y;\n            });\n\n            matchLootContainer = matchLootContainer.map(loot => {\n                loot.eventType = 'loot';\n                return loot;\n            });\n\n            return matchLootContainer;\n        }\n\n        return [];\n    };\n\n    const DetectCollision = ({ x, y }) => {\n        let WallMap = { ...state.WallMap };\n        let MonsterMap = { ...state.MonsterMap };\n        let NoClip = { ...state.NoClip };\n\n        if (NoClip) {\n            return true;\n        }\n\n        // can not get out of the map boundaries\n        if (y < 0 || x < 0 || y >= WallMap.length || x >= WallMap[y].length) {\n            return false;\n        }\n\n        // target is a monster\n        if (MonsterMap[y][x] !== Empty) {\n            return false;\n        }\n\n        // target is empty or non-blocking\n        if (WallMap[y][x] === Empty) {\n            return true;\n        }\n\n        // target is a door\n        if (WallMap[y][x] === Door) {\n            // check if the door is locked\n            let Door = CheckLockedDoors({ x, y });\n            if (Door.Locked) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    const UpdateDiscoveryMap = ({ x, y }) => {\n        let DiscoveryMap = [...state.Maps.DiscoveryMap];\n\n        let NewDiscoveryMap = DiscoveryMap.map((HorizontalLine, MapY) => {\n            return HorizontalLine.map((MapObject, MapX) => {\n                if (\n                    MapY >= y - 1 &&\n                    MapY <= y + 1 &&\n                    MapX >= x - 1 &&\n                    MapX <= x + 1\n                ) {\n                    return Empty;\n                } else {\n                    return MapObject;\n                }\n            });\n        });\n\n        return NewDiscoveryMap;\n    };\n\n    const MoveMonsters = PlayerNewCoordinates => {\n        let Monsters = [...state.Monsters];\n        let Player = { ...state.Player };\n\n        if (Monsters) {\n            let MovingMonsters = Monsters.filter(Monster => {\n                return (\n                    !Monster.Dead &&\n                    (Monster.ChasePlayer || !Monster.Stationary)\n                );\n            });\n\n            MovingMonsters.map(Monster => {\n                if (Monster.ChasePlayer) {\n                    return this.ChasePlayer(\n                        Monster,\n                        PlayerNewCoordinates || { x: Player.x, y: Player.y }\n                    );\n                } else {\n                    return this.Patrol(Monster);\n                }\n            });\n        }\n    };\n\n    const WakeUpMonster = ({ x, y }) => {\n        let Monsters = [...state.Monsters];\n        let PlaySound = false;\n\n        if (Monsters) {\n            let MonsterList = Monsters.map(Monster => {\n                if (\n                    Monster.x >= x - 1 &&\n                    Monster.x <= x + 1 &&\n                    Monster.y >= y - 1 &&\n                    Monster.y <= y + 1 &&\n                    !Monster.ChasePlayer\n                ) {\n                    PlaySound = true;\n\n                    Monster.ChasePlayer = true;\n                    Monster.Stationary = false;\n                    this.SetText(\n                        IndefiniteArticle(Monster.Name, true) +\n                            ' ' +\n                            Monster.Name +\n                            Gameplay.PartialMessages.MonsterNoticed\n                    );\n                }\n                return Monster;\n            });\n\n            dispatch({ type: 'UPDATE_MONSTERS', MonsterList });\n            // this.setState({Monsters: MonsterList})\n\n            if (PlaySound) {\n                this.PlaySound('player_noticed');\n            }\n        }\n    };\n\n    return {\n        ...state,\n        ...ownProps,\n        Styles: { ...state.Styles }\n    };\n};\n\nexport default mapStateToProps;\n","import WorldAssets from './WorldAssets.js';\n\nexport const CampaignAssets = {\n    // Let the player create their character at the beginning of the campaign\n    CreateCharacter: true,\n\n    // Player start\n    Player: {\n        x: 10,\n        y: 14,\n        Facing: 'East',\n        Health: 19,\n        Name: 'Leto',\n        Gear: {\n            // top\n            Head: null,\n            Neck: null,\n            // middle\n            Chest: null,\n            LeftHand: WorldAssets.Items.Sword,\n            RightHand: null,\n            LeftFinger: null,\n            RightFinger: null,\n            // bottom\n            Feet: null,\n            // back\n            Quiver: null\n        }\n    },\n\n    AvailableStartSpell: Object.keys(WorldAssets.Spells)\n        .map(Key => {\n            return WorldAssets.Spells[Key];\n        })\n        .filter(Spell => {\n            return Spell.Level === 1;\n        }),\n    Backpack: {\n        maxItems: 10,\n        ItemCount: { Max: 10 },\n        Items: [\n            { ...WorldAssets.Items.ManaPotion },\n            { ...WorldAssets.Items.HealthPotion },\n            { ...WorldAssets.Items.StaminaPotion },\n            { ...WorldAssets.Items.ManaPotion },\n            { ...WorldAssets.Items.HealthPotion },\n            { ...WorldAssets.Items.StaminaPotion }\n\n            /*\n            {...WorldAssets.Items.ManaPotion},\n            {...WorldAssets.Items.ManaPotion},\n            {...WorldAssets.Items.ManaPotion},\n            */\n\n            /*\n            {...WorldAssets.Items.HealthPotion},\n            {...WorldAssets.Items.HealthPotion},\n            {...WorldAssets.Items.HealthPotion},\n            {...WorldAssets.Items.HealthPotion},\n            {...WorldAssets.Items.StaminaPotion},\n            WorldAssets.Items.AmuletOfMagic,\n            WorldAssets.Items.SkullAmulet,\n            WorldAssets.Items.Sword,\n            WorldAssets.Items.SimpleStaff,\n            WorldAssets.Items.MagicArrowScroll,\n            WorldAssets.Items.HealWoundsScroll,\n            WorldAssets.Items.EntangleScroll,\n            WorldAssets.Items.DetectMonsterScroll,\n            {...WorldAssets.Items.Apple},\n            */\n        ]\n    },\n\n    Maps: {},\n\n    LootContainers: [\n        {\n            x: 10,\n            y: 13,\n            Name: 'skeleton',\n            items: [\n                // WorldAssets.UniqueItems.IronKey,\n                { ...WorldAssets.Items.HealthPotion },\n                { ...WorldAssets.Items.ManaPotion },\n                { ...WorldAssets.Items.ManaPotion }\n            ]\n        },\n        {\n            x: 17,\n            y: 9,\n            Name: 'dead body',\n            items: [\n                { ...WorldAssets.Items.Apple },\n                { ...WorldAssets.Items.Bread }\n            ]\n        },\n        {\n            x: 16,\n            y: 15,\n            Name: 'small bag',\n            items: [\n                { ...WorldAssets.Items.Rock },\n                { ...WorldAssets.Items.StaminaPotion }\n            ]\n        },\n        {\n            x: 11,\n            y: 20,\n            Name: 'chest',\n            items: [\n                { ...WorldAssets.Items.HealthPotion },\n                { ...WorldAssets.Items.ManaPotion },\n                { ...WorldAssets.Items.Chicken },\n                { ...WorldAssets.Items.Bow }\n            ]\n        }\n    ],\n\n    // LockedDoors\n\n    Monsters: [\n        /*{...WorldAssets.Bestiary.Orc,\n            x: 12,\n            y: 13,\n            Name: \"cell keeper1\",\n            Damage: {Min: 1, Max: 4},\n            Stationary: true,\n        },*/\n        {\n            ...WorldAssets.Bestiary.Orc,\n            x: 12,\n            y: 14,\n            Name: 'cell keeper',\n            Stationary: true\n        },\n        /*{...WorldAssets.Bestiary.Orc,\n            x: 12,\n            y: 15,\n            Name: \"cell keeper3\",\n            Damage: {Min: 1, Max: 4},\n            Stationary: true,\n        },*/\n        {\n            ...WorldAssets.Bestiary.Goblin,\n            x: 14,\n            y: 7,\n            Damage: { Min: 5, Max: 10 }\n        },\n        {\n            ...WorldAssets.Bestiary.Orc,\n            x: 15,\n            y: 21,\n            Health: 70,\n            Damage: { Min: 15, Max: 20 }\n        }\n    ],\n\n    // This text will be displayed when the player starts the map\n    StartText: {\n        text: `You slowly wake up. Ouch! Your head hurts...\n\n            Where are you?\n            \n            You try to examine your surroundings, but your eyes can't see a thing. It's too dark. Night time? There's not a star in the sky.\n            \n            A terrible stench makes you belch. What the hell is this putrid smell?! You must be in some sort of small enclosed space--a basement, without any window.\n            \n            You become aware of the fact that you are lying down. You raise your left arm and touch your head. Something hot above your left eyebrow--must be blood. Probably a bad wound.\n            \n            With much effort, you manage to get in an upright position and find a vertical wall behind you to support your back. Little by little, you slide up the wall and, finally, stand up.`\n    },\n\n    Text: [\n        {\n            accessPoints: [{ x: 10, y: 13, SingleTile: true }],\n            image: 'bones',\n            text: `As you take a few steps ahead of you, you stumble on something on the ground.\n\n                What the heck?\n\n                You bend towards the ground with caution. When your fingers can reach what's down there, you feel something porous and dry...`\n        },\n        {\n            accessPoints: [\n                { x: 11, y: 13 },\n                { x: 11, y: 14 },\n                { x: 11, y: 15 }\n            ],\n            text: `You're still trying to get your bearings but the darkness is too thick and too still.\n\n                Suddenly, you hear something. The sound resembles the jingle of a bunch of keys. Silence again. Then, a huge clang. You turn you head in the direction of the loud noise. A slit of bright light appears a few feet away. The tiny opening slowly becomes big and wide. The sound of rusty hinges turning on themselves, a deep and interminable complaint, makes you grind your teeth. Blinded by the intense brightness, you can only see a vague, dark shape in the middle of a rectangle of light.\n                \n                A guttural voice says 'Come with me.' You can hear a discernible accent. As your eyes start to catch sight of what's in front of you, you recognize the stout silhouette of a small orc. On his belt, a massive key ring.\n\n                Outside the cell, you hear torches crackling.\n\n                You can feel the orc staring at you. He lets a couple of menacing breaths out.\n\n                After some long seconds, you position your body towards the door, and take a step forward. The orc turns to let you out of this dingy, confined room.\n\n                Before the cellkeeper has time to set a safe distance between you and him, you run towards him and hit the creature in the face!\n                `\n        },\n        {\n            accessPoints: [{ x: 14, y: 14 }],\n            text: `Free at last! Run for your life!\n                `\n        }\n    ],\n\n    WallMap: [\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'D',\n            ' ',\n            'D',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'D',\n            ' ',\n            'D',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'D',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            'X',\n            'X',\n            'X',\n            'X',\n            'X',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ],\n        [\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' ',\n            ' '\n        ]\n    ]\n};\n\nexport default CampaignAssets;\n","export const Functions = {\n    IndefiniteArticle(word, capitalize) {\n        if (word) {\n            const Vowels = ['a', 'e', 'i', 'u', 'o'];\n\n            if (isNaN(word) && Vowels.includes(word[0].toLowerCase())) {\n                if (capitalize) {\n                    return 'An';\n                } else {\n                    return 'an';\n                }\n            } else {\n                if (capitalize) {\n                    return 'A';\n                } else {\n                    return 'a';\n                }\n            }\n        } else {\n            return '';\n        }\n    },\n\n    RandomIntegerFromRange(min, max) {\n        return (\n            Math.floor(\n                Math.random() * (Math.floor(max) - Math.floor(min) + 1)\n            ) + Math.floor(min)\n        );\n    },\n\n    RandomFloatFromRange(min, max) {\n        return Math.random() * (max - min + 1) + min;\n    }\n};\n\nexport default Functions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\n\n// a\nexport class URL extends Component {\n    render() {\n        return (\n            <a\n                href={this.props.href}\n                onMouseLeave={this.props.onMouseLeave}\n                onMouseMove={this.props.onMouseMove}\n                style={this.props.style}\n                target={this.props.target}\n                title={this.props.title}\n                children={this.props.children}\n            />\n        );\n    }\n}\n\n// br\nexport class LineBreak extends Component {\n    render() {\n        return <br />;\n    }\n}\n\n// span (React Native compatibility)\nexport class Text extends Component {\n    render() {\n        return <span {...this.props} />;\n    }\n}\n\n// div (React Native compatibility)\nexport class View extends Component {\n    render() {\n        return <div {...this.props} />;\n    }\n}\n\n// div\nexport class Block extends Component {\n    render() {\n        return <div {...this.props} />;\n    }\n}\n\n// img\nexport class Image extends Component {\n    render() {\n        return (\n            <img\n                alt={this.props.alt || this.props.title || ''}\n                {...this.props}\n            />\n        );\n    }\n}\n\n// h3\nclass Heading extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return <h3 style={Styles.H3} children={this.props.children} />;\n    }\n}\nexport const HeadingContainer = connect(mapStateToProps)(Heading);\n\n// h2\nclass PageSubtitle extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return <h2 style={Styles.H2} children={this.props.children} />;\n    }\n}\nexport const PageSubtitleContainer = connect(mapStateToProps)(PageSubtitle);\n\n// h1\nclass PageTitle extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return <h1 style={Styles.H1} children={this.props.children} />;\n    }\n}\nexport const PageTitleContainer = connect(mapStateToProps)(PageTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport {\n    Image,\n    View,\n    Text,\n    URL,\n    PageSubtitleContainer as PageSubtitle,\n    PageTitleContainer as PageTitle\n} from './Web';\nimport Utilities from './../Utilities';\n\nconst authorEmail = 'gurcan.yves@gmail.com';\nconst contactTemplate = 'mailto:' + authorEmail + '?subject=Dungeon!';\nconst repository = 'https://github.com/yvesgurcan/dungeon';\n\nexport class Graphics extends Component {\n    render() {\n        if (this.props.image === null) return null;\n        else {\n            return <Image title={this.props.title} {...this.props} />;\n        }\n    }\n}\n\nexport class ClearFloat extends Component {\n    render() {\n        return <View style={{ clear: 'both' }} />;\n    }\n}\n\nexport class Version extends Component {\n    render() {\n        return <View>{this.props.children}</View>;\n    }\n}\n\nclass GitHub extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return (\n            <Graphics\n                draggable={false}\n                src=\"./graphics/misc/Octocat.png\"\n                style={Styles.GitHubLogo}\n                title=\"GitHub repository\"\n            />\n        );\n    }\n}\nexport const GitHubContainer = connect(mapStateToProps)(GitHub);\n\nclass Link extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    NormalStyle = () => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: Styles.Link });\n    };\n    HoverStyle = () => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: Styles.LinkHover });\n    };\n    render() {\n        let { Styles, dispatch, ...LinkProps } = { ...this.props };\n        return (\n            <URL\n                onMouseMove={this.HoverStyle}\n                onMouseLeave={this.NormalStyle}\n                style={this.state.style || Styles.Link}\n                {...LinkProps}\n            />\n        );\n    }\n}\nexport const LinkContainer = connect(mapStateToProps)(Link);\n\nclass Contact extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return (\n            <View style={Styles.Contact}>\n                <Text>\n                    <Text>written by&nbsp;</Text>\n                    <Text>\n                        <LinkContainer\n                            href={contactTemplate}\n                            title={authorEmail}\n                            target=\"_blank\"\n                        >\n                            Yves Gurcan\n                        </LinkContainer>\n                        <LinkContainer href={repository} target=\"_blank\">\n                            <GitHubContainer />\n                        </LinkContainer>\n                    </Text>\n                </Text>\n            </View>\n        );\n    }\n}\nexport const ContactContainer = connect(mapStateToProps)(Contact);\n\nclass Header extends Component {\n    componentWillMount() {\n        console.log('dev mode');\n        console.log('dev build url', Utilities.DevBuild[Utilities.UserOS]);\n        console.log(\n            'stable build url',\n            Utilities.StableBuild[Utilities.UserOS]\n        );\n    }\n\n    // content is static\n    shouldComponentUpdate(nextProps) {\n        if (\n            nextProps.CreateCharacter !== this.props.CreateCharacter ||\n            nextProps.MobileScreen !== this.props.MobileScreen ||\n            nextProps.TabletScreen !== this.props.TabletScreen\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View style={Styles.Header}>\n                <PageTitle>Dungeon!</PageTitle>\n                <PageSubtitle>an adventure game in React</PageSubtitle>\n                <Version>\n                    {window.location.href.includes('localhost') ? (\n                        <Text>v{process.env.REACT_APP_VERSION} (dev mode)</Text>\n                    ) : process.env.REACT_APP_RELEASE === 'dev' ? (\n                        <Text>\n                            v{process.env.REACT_APP_VERSION}{' '}\n                            {process.env.REACT_APP_RELEASE}\n                            {process.env.REACT_APP_BUILD_TIME ? (\n                                <Text> {process.env.REACT_APP_BUILD_TIME}</Text>\n                            ) : null}\n                        </Text>\n                    ) : (\n                        <Text>\n                            v{process.env.REACT_APP_VERSION}{' '}\n                            {process.env.REACT_APP_RELEASE}\n                        </Text>\n                    )}\n                </Version>\n            </View>\n        );\n    }\n}\nexport const HeaderContainer = connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './Web';\nimport { Graphics } from './Misc';\nimport Utilities from './../Utilities';\nimport update from 'immutability-helper'; // experimental\n\nconst itemPath = './graphics/items/';\nconst imgExt = '.png';\n\nclass ItemImage extends Component {\n    render() {\n        let Styles = { ...this.props.Styles };\n        return (\n            <Text>\n                <Graphics\n                    draggable={this.props.draggable}\n                    src={\n                        this.props.image\n                            ? itemPath + this.props.image + imgExt\n                            : null\n                    }\n                    style={Styles.ItemImage}\n                />\n            </Text>\n        );\n    }\n}\n\nclass ItemSingleAction extends Component {\n    constructor(props) {\n        super(props);\n        let Styles = { ...this.props.Styles };\n        this.state = { style: Styles.ItemAction };\n    }\n\n    HoverStyle = () => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: Styles.ItemActionHover });\n    };\n\n    NormalStyle = () => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: Styles.ItemAction });\n    };\n\n    UseItem = () => {\n        this.props.onClick(this.props.ItemAction);\n    };\n\n    render() {\n        return (\n            <View\n                style={this.state.style}\n                onMouseMove={this.HoverStyle}\n                onMouseLeave={this.NormalStyle}\n                onClick={this.UseItem}\n            >\n                {this.props.ItemAction.Name}\n            </View>\n        );\n    }\n}\n\nclass ItemImageBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            HideItemDescription: true,\n            HideItemActions: true,\n            Id: Math.floor(Math.random() * 99999999999)\n        };\n    }\n\n    componentDidMount() {\n        this.Mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.Mounted = false;\n    }\n\n    RegisterTouch = () => {\n        // there is no item\n        let Item = { ...this.props.item };\n        if (!Object.getOwnPropertyNames(Item).length) return null;\n\n        this.setState({ TouchEvent: true });\n    };\n\n    // right click\n    ToggleItemActions = input => {\n        // there is no item\n        let Item = { ...this.props.item };\n        let { Slot } = { ...this.props };\n        if (!Object.getOwnPropertyNames(Item).length && !Slot) return null;\n\n        let grabInput = { ...input };\n        input.preventDefault();\n\n        // this item does not have an action menu\n        if (this.props.NoActionMenu) {\n            // show the item description instead\n            if (this.state.HideItemDescription) {\n                this.ShowItemDescription(grabInput);\n            }\n            // hide the item description if it is already displayed\n            else {\n                this.HideItemDescription();\n            }\n            return false;\n        }\n\n        // get the coordinates where the action menu will be displayed\n        let { pageX, pageY } = { ...grabInput };\n\n        this.setState(\n            {\n                // toggle the action menu\n                HideItemActions: !this.state.HideItemActions,\n                // hide the item description that may have appeared when hovering\n                HideItemDescription: true,\n                // block hover events so that the description does not re-appear until the user has moved out of the element\n                PreventHoverEvent: true,\n                x: pageX + 5,\n                y: pageY + 5\n            },\n            function () {\n                // attach event listeners to hide the menu when the user clicks away\n                document.addEventListener('click', this.HideItemActions, false);\n                document.addEventListener(\n                    'contextmenu',\n                    this.HideItemActions,\n                    false\n                );\n            }\n        );\n    };\n\n    // right click -- event listener\n    HideItemActions = () => {\n        if (!this.Mounted) return false;\n\n        if (this.state.DescriptionAsAction) {\n            // add item description event listener\n            document.addEventListener('click', this.HideItemDescription, false);\n            document.addEventListener(\n                'contextmenu',\n                this.HideItemDescription,\n                false\n            );\n            this.setState({\n                // toggle the block on this event listener\n                DescriptionAsAction: false,\n                // let the item description event listeners remove themselves once they executed\n                CleanupDescriptionEventListener: true\n            });\n            // do not execute the rest of the code to keep preventing hover events\n            return false;\n        }\n\n        this.setState({\n            // hide the action menu\n            HideItemActions: true,\n            // release the block on hover events so that when the user moves back to the item, the description will appear again\n            PreventHoverEvent: false\n        });\n\n        // get rid of the event listeners\n        document.removeEventListener('click', this.HideItemActions, false);\n        document.removeEventListener(\n            'contextmenu',\n            this.HideItemActions,\n            false\n        );\n    };\n\n    // action menu click\n    ShowItemDescription = input => {\n        // there is no item\n        let Item = { ...this.props.item };\n        let { Slot } = { ...this.props };\n        if (!Object.getOwnPropertyNames(Item).length && !Slot) return null;\n\n        // grab coordinates\n        let { pageX, pageY } = { ...input };\n\n        // the item description was called from the action menu\n        if (input === null) {\n            pageX = this.state.x - 5;\n            pageY = this.state.y - 5;\n            this.setState({ DescriptionAsAction: true });\n        }\n\n        this.setState({\n            // hide the action menu\n            HideItemActions: true,\n            // show the description\n            HideItemDescription: false,\n            // block the hover event\n            PreventHoverEvent: true,\n            x: pageX + 5,\n            y: pageY + 5\n        });\n\n        // add listeners for the item description if there is no action menu so that when the user clicks away it hides the description\n        if (this.props.NoActionMenu) {\n            document.addEventListener('click', this.HideItemDescription, false);\n            document.addEventListener(\n                'contextmenu',\n                this.HideItemDescription,\n                false\n            );\n            return false;\n        }\n\n        // add listeners so that when the user clicks away it hides the action menu\n        document.addEventListener('click', this.HideItemActions, false);\n        document.addEventListener('contextmenu', this.HideItemActions, false);\n    };\n\n    // no action menu -- event listener\n    HideItemDescription = () => {\n        if (!this.Mounted) return false;\n\n        this.setState({\n            // hide the description\n            HideItemDescription: true,\n            // release the block on hover events\n            PreventHoverEvent: false\n        });\n\n        // remove item description listeners\n        if (\n            this.props.NoActionMenu ||\n            this.state.CleanupDescriptionEventListener\n        ) {\n            document.removeEventListener(\n                'click',\n                this.HideItemDescription,\n                false\n            );\n            document.removeEventListener(\n                'contextmenu',\n                this.HideItemDescription,\n                false\n            );\n\n            // toggle the clean up of event listeners corresponding to the item description showing as an action\n            if (this.state.CleanupDescriptionEventListener) {\n                this.setState({ CleanupDescriptionEventListener: false });\n            }\n        }\n    };\n\n    // hover\n    ShowItemDescriptionOnHover = input => {\n        // there is no item\n        let Item = { ...this.props.item };\n        let { Slot } = { ...this.props };\n        if (!Object.getOwnPropertyNames(Item).length && !Slot) return null;\n\n        // do not show description on hover for touch screens\n        if (this.state.TouchEvent) return false;\n\n        if (\n            // hover events are not blocked\n            !this.state.PreventHoverEvent &&\n            // the action menu is hidden\n            this.state.HideItemActions &&\n            // the item description is hidden\n            this.state.HideItemDescription\n        ) {\n            // the user is hovering the item\n            this.setState({ HoveredOut: false });\n\n            // grab coordinates\n            let { pageX, pageY } = { ...input };\n\n            // wait before showing the item description\n            setTimeout(\n                function () {\n                    if (\n                        // the user is still hovering the item\n                        !this.state.HoveredOut &&\n                        // the action menu is still hidden\n                        this.state.HideItemActions &&\n                        // the item description is still hidden\n                        this.state.HideItemDescription\n                    ) {\n                        if (!this.Mounted) return false;\n\n                        // display description\n                        this.setState({\n                            HideItemDescription: false,\n                            x: pageX + 5,\n                            y: pageY + 5\n                        });\n                    }\n                }.bind(this),\n                600\n            );\n        }\n    };\n\n    HideItemDescriptionOnHover = () => {\n        // hover events are not blocked\n        if (!this.state.PreventHoverEvent) {\n            this.setState({\n                // hide item description\n                HideItemDescription: true,\n                // the user is not interested in this item anymore\n                HoveredOut: true\n            });\n        }\n    };\n\n    ShowHoverForItemAfterClick = input => {\n        if (this.state.ResetHover) {\n            this.ShowItemDescriptionOnHover(input);\n            this.setState({ ResetHover: false });\n        }\n    };\n\n    // item description\n    ItemDescription = () => {\n        let Item = { ...this.props.item };\n        let { Slot, Styles } = { ...this.props };\n        if (!Object.getOwnPropertyNames(Item).length && !Slot) return null;\n\n        let Description = (\n            <View\n                hidden={this.state.HideItemDescription}\n                style={{\n                    ...Styles.ItemDescription,\n                    left: this.state.x,\n                    top: this.state.y\n                }}\n            >\n                <View style={Styles.ItemDescriptionName}>\n                    {Slot ? Slot + ': ' + (Item.Name || 'Empty') : Item.Name}\n                </View>\n                <View\n                    style={Styles.ItemDescriptionContent}\n                    hidden={!Item.Description}\n                >\n                    {Item.Description}\n                </View>\n            </View>\n        );\n        return Description;\n    };\n\n    // action menu\n    ItemActions = () => {\n        let Item = { ...this.props.item };\n        let { Slot, Styles } = { ...this.props };\n        if (!Object.getOwnPropertyNames(Item).length && !Slot) return null;\n        let Action = (\n            <View\n                hidden={this.state.HideItemActions}\n                style={{\n                    ...Styles.ItemActions,\n                    left: this.state.x,\n                    top: this.state.y\n                }}\n            >\n                <View style={Styles.ItemDescriptionName}>\n                    {Slot ? Slot + ': ' + (Item.Name || 'Empty') : Item.Name}\n                </View>\n                {this.AvailableActions().map(ItemAction => {\n                    return (\n                        <ItemSingleAction\n                            key={ItemAction.Name}\n                            onClick={this.UseItem}\n                            ItemAction={ItemAction}\n                        />\n                    );\n                })}\n            </View>\n        );\n        return Action;\n    };\n\n    // discriminate actions that are available for this item\n    AvailableActions = () => {\n        let Item = { ...this.props.Item };\n        let Equipped = this.props.Equipped;\n        let Loot = this.props.Loot;\n\n        if (Item) {\n            let Type = Item.Type;\n\n            let AvailableActions = [\n                {\n                    Name: 'Description',\n                    onClick: 'ShowItemDescription',\n                    BuiltInComponent: true\n                }\n            ];\n\n            if (Loot) {\n                AvailableActions.push({\n                    Name: 'Take',\n                    onClick: 'TakeSingleLoot',\n                    MainAction: true\n                });\n            }\n\n            if (Type === 'potion') {\n                AvailableActions.push({\n                    Name: 'Drink',\n                    onClick: 'DrinkPotion',\n                    MainAction: !Loot\n                });\n            }\n\n            if (Type === 'food') {\n                AvailableActions.push({\n                    Name: 'Eat',\n                    onClick: 'ConsumeFood',\n                    MainAction: !Loot\n                });\n            }\n\n            if (Type === 'scroll') {\n                AvailableActions.push({\n                    Name: 'Cast Spell',\n                    onClick: 'UseScroll',\n                    MainAction: !Loot\n                });\n            }\n\n            if (!Equipped && Utilities.Equipable.indexOf(Type) > -1) {\n                AvailableActions.push({ Name: 'Equip', onClick: 'EquipItem' });\n            }\n\n            if (Equipped) {\n                AvailableActions.push({\n                    Name: 'Unequip',\n                    onClick: 'UnequipItem'\n                });\n            }\n\n            if (!Loot) {\n                AvailableActions.push({ Name: 'Drop', onClick: 'DropItem' });\n            }\n\n            return AvailableActions;\n        }\n\n        return [];\n    };\n\n    // item action selected from action menu\n    UseItem = Action => {\n        if (Action.onClick === 'ShowItemDescription') {\n            this.ShowItemDescription(null);\n            return false;\n        }\n\n        this.setState({ Clicked: true });\n        setTimeout(\n            function () {\n                this.setState({ Clicked: false, ResetHover: true });\n                if (Action.MainAction) {\n                    this.props.onClick(this.props.item);\n                    return false;\n                }\n                this.props.UseItem(this.props.item, Action.onClick);\n            }.bind(this),\n            50\n        );\n    };\n\n    // direct click on item image\n    onClick = () => {\n        let Item = { ...this.props.item };\n        if (!Object.getOwnPropertyNames(Item).length) return null;\n\n        console.log({ Item }, this.props);\n\n        // TODO: experimenting with reducers.....\n        // copy the prop to prevent mutating it\n        let Player = update(this.props.Player, { $merge: {} });\n        // do mutation of the copied prop\n        /*\n        Player = update(Player, {\n            $merge: {\n                Health: {\n                    ...Player.Health,\n                    Current: 2\n                }\n            }\n        });\n        */\n\n        console.log(this.props.Player, Player);\n        // put the new object in the state\n        this.props.dispatch({\n            type: 'USE_ITEM',\n            Item: this.props.Player.Backpack.Items[0]\n        });\n\n        if (!this.props.onClick) {\n            console.warn('This feature is not ready yet :)');\n            return null;\n        }\n\n        this.setState({ Clicked: true });\n        setTimeout(\n            function () {\n                this.setState({ Clicked: false, ResetHover: true });\n                this.props.onClick(this.props.item);\n                this.HideItemActions();\n                this.HideItemDescription();\n            }.bind(this),\n            50\n        );\n    };\n\n    render() {\n        let Styles = { ...this.props.Styles };\n        return (\n            <View\n                id={this.state.Id}\n                style={Styles.ItemImageBlock}\n                onContextMenu={this.ToggleItemActions}\n                onMouseEnter={this.ShowItemDescriptionOnHover}\n                onMouseLeave={this.HideItemDescriptionOnHover}\n                onMouseMove={this.ShowHoverForItemAfterClick}\n                onTouchStart={this.RegisterTouch}\n            >\n                {this.ItemDescription()}\n                {this.ItemActions()}\n                <View>\n                    <View\n                        hidden={!this.state.Clicked}\n                        style={\n                            this.props.Loot\n                                ? {\n                                      ...Styles.ItemImageBlockClick,\n                                      top: document.getElementById(\n                                          this.state.Id\n                                      )\n                                          ? document\n                                                .getElementById(this.state.Id)\n                                                .getBoundingClientRect().y + 1\n                                          : null,\n                                      left: document.getElementById(\n                                          this.state.Id\n                                      )\n                                          ? document\n                                                .getElementById(this.state.Id)\n                                                .getBoundingClientRect().x + 1\n                                          : null\n                                  }\n                                : {\n                                      ...Styles.ItemImageBlockClick,\n                                      top: document.getElementById(\n                                          this.state.Id\n                                      )\n                                          ? document\n                                                .getElementById(this.state.Id)\n                                                .getBoundingClientRect().y + 1\n                                          : null,\n                                      left: document.getElementById(\n                                          this.state.Id\n                                      )\n                                          ? document\n                                                .getElementById(this.state.Id)\n                                                .getBoundingClientRect().x +\n                                            1 -\n                                            document.getElementById(\n                                                this.state.Id\n                                            ).scrollLeft\n                                          : null\n                                  }\n                        }\n                    />\n                    <View onClick={this.onClick}>\n                        <ItemImage {...this} {...this.props} />\n                    </View>\n                    <View\n                        style={Styles.ItemImageBlockNumber}\n                        hidden={!this.props.showIndex}\n                    >\n                        {this.props.index}\n                    </View>\n                </View>\n            </View>\n        );\n    }\n}\nexport const ItemImageBlockContainer = connect(mapStateToProps)(ItemImageBlock);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View } from './Web';\n\nclass ActionButton extends Component {\n    constructor(props) {\n        super(props);\n\n        let { SmallPadding, StayClicked, Clicked, Styles } = { ...this.props };\n\n        if (StayClicked && Clicked) {\n            this.state = {\n                style: SmallPadding\n                    ? Styles.ActionButtonHoverSmallPadding\n                    : Styles.ActionButtonHover\n            };\n        } else {\n            this.state = {\n                style: SmallPadding\n                    ? Styles.ActionButtonSmallPadding\n                    : Styles.ActionButton\n            };\n        }\n    }\n\n    componentWillReceiveProps(NextProps) {\n        let { StayClicked, Clicked, SmallPadding } = { ...NextProps };\n        let CurrentlyClicked = { ...this.props.Clicked };\n        let CurrentlySmallPadding = { ...this.props.SmallPadding };\n        let { Styles } = { ...this.props };\n\n        if (StayClicked && CurrentlyClicked && !Clicked) {\n            let { Styles } = { ...this.props };\n            this.setState({\n                style: SmallPadding\n                    ? Styles.ActionButtonSmallPadding\n                    : Styles.ActionButton\n            });\n        }\n\n        if (!StayClicked && SmallPadding !== CurrentlySmallPadding) {\n            this.setState({\n                style: SmallPadding\n                    ? Styles.ActionButtonSmallPadding\n                    : Styles.ActionButton\n            });\n        }\n    }\n\n    NormalStyle = () => {\n        let { SmallPadding, Styles } = { ...this.props };\n        this.setState({\n            style: SmallPadding\n                ? Styles.ActionButtonSmallPadding\n                : Styles.ActionButton\n        });\n    };\n\n    HoverStyle = () => {\n        let { SmallPadding, Styles } = { ...this.props };\n        this.setState({\n            style: SmallPadding\n                ? Styles.ActionButtonHoverSmallPadding\n                : Styles.ActionButtonHover\n        });\n    };\n\n    onClick = () => {\n        let { SmallPadding, Styles } = { ...this.props };\n        this.setState({\n            style: SmallPadding\n                ? Styles.ActionButtonClickSmallPadding\n                : Styles.ActionButtonClick\n        });\n\n        let that = this;\n        setTimeout(function () {\n            if (\n                that.state.style === Styles.ActionButtonClick ||\n                that.state.style === Styles.ActionButtonClickSmallPadding\n            ) {\n                that.setState({\n                    style: SmallPadding\n                        ? Styles.ActionButtonHoverSmallPadding\n                        : Styles.ActionButtonHover\n                });\n            }\n        }, 50);\n\n        if (!this.props.onClick) {\n            console.warn('This feature is not ready yet :)');\n            return null;\n        }\n\n        this.props.onClick();\n    };\n\n    render() {\n        let { Clicked, StayClicked } = { ...this.props };\n\n        return (\n            <View\n                hidden={this.props.hidden}\n                onClick={this.onClick}\n                onMouseMove={this.HoverStyle}\n                onMouseLeave={Clicked && StayClicked ? null : this.NormalStyle}\n                style={\n                    this.props.hidden ? { display: 'none' } : this.state.style\n                }\n            >\n                {this.props.children}\n            </View>\n        );\n    }\n}\nexport const ActionButtonContainer = connect(mapStateToProps)(ActionButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { Text } from './Web';\n\nclass Arrow extends Component {\n    constructor(props) {\n        super(props);\n        let { Styles } = { ...this.props };\n        this.state = { style: Styles.ArrowBlock };\n    }\n    NormalStyle = () => {\n        let { Styles } = { ...this.props };\n        this.setState({ style: Styles.ArrowBlock });\n    };\n    HoverStyle = () => {\n        let { Styles } = { ...this.props };\n        this.setState({ style: Styles.ArrowBlockHover });\n    };\n    onClick = () => {\n        let { Styles } = { ...this.props };\n        this.props.onClick(this.props.arrow);\n        this.setState({ style: Styles.ArrowBlockClick });\n        setTimeout(\n            function () {\n                if (this.state.style === Styles.ArrowBlockClick) {\n                    this.setState({ style: Styles.ArrowBlockHover });\n                }\n            }.bind(this),\n            50\n        );\n    };\n    render() {\n        return (\n            <Text\n                onClick={this.onClick}\n                onMouseMove={this.HoverStyle}\n                onMouseLeave={this.NormalStyle}\n                style={\n                    this.props.arrowStyle &&\n                    this.props.arrowStyle[this.props.arrow]\n                        ? this.props.arrowStyle[this.props.arrow]\n                        : null || this.state.style\n                }\n            >\n                {this.props.children}\n            </Text>\n        );\n    }\n}\nexport const ArrowContainer = connect(mapStateToProps)(Arrow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport Utilities from '../Utilities';\nimport { View } from './Web';\n\nlet Debug =\n    process.env.REACT_APP_RELEASE === 'stable' ? false : Utilities.Debug;\n\nclass HoverToolTip extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { HideToolTip: true };\n    }\n\n    componentDidMount() {\n        this.Mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.Mounted = false;\n    }\n\n    shouldComponentUpdate(NextProps, NextState) {\n        if (\n            NextState.HideToolTip !== this.state.HideToolTip ||\n            NextProps.children !== this.props.children\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    RegisterTouch = () => {\n        this.setState({ TouchEvent: true });\n    };\n\n    // on click\n    ShowToolTipOnClick = input => {\n        // do not show a tooltip on click\n        if (this.props.DisabledOnClick) {\n            this.HideToolTipOnClick();\n            input.preventDefault();\n            return false;\n        }\n\n        // grab coordinates\n        let { pageX, pageY } = { ...input };\n\n        input.preventDefault();\n\n        this.setState({\n            // show the tooltip\n            HideToolTip: false,\n            // block the hover event\n            PreventHoverEvent: true,\n            x: pageX + 5,\n            y: pageY + 5\n        });\n\n        // add event listeners\n        document.addEventListener('click', this.HideToolTipOnClick, false);\n        document.addEventListener(\n            'contextmenu',\n            this.HideToolTipOnClick,\n            false\n        );\n    };\n\n    HideToolTipOnClick = () => {\n        if (!this.Mounted) return false;\n\n        this.setState({\n            // hide the tooltip\n            HideToolTip: true,\n            // release the block on hover events\n            PreventHoverEvent: false\n        });\n\n        // remove event listeners\n        document.removeEventListener('click', this.HideToolTipOnClick, false);\n        document.removeEventListener(\n            'contextmenu',\n            this.HideToolTipOnClick,\n            false\n        );\n    };\n\n    // hover\n    ShowToolTipOnHover = input => {\n        // do not show description on hover for touch screens\n        if (this.state.TouchEvent) return false;\n\n        if (\n            // hover events are not blocked\n            !this.state.PreventHoverEvent &&\n            // the tooltip is hidden\n            this.state.HideToolTip\n        ) {\n            // the user is hovering the item\n            this.setState({ HoveredOut: false });\n\n            // grab coordinates\n            let { pageX, pageY } = { ...input };\n\n            // wait before showing the tooltip\n            setTimeout(\n                function () {\n                    if (\n                        // the user is still hovering the stats\n                        !this.state.HoveredOut &&\n                        // the tooltip is still hidden\n                        this.state.HideToolTip\n                    ) {\n                        if (!this.Mounted) return false;\n\n                        // display tooltip\n                        this.setState({\n                            HideToolTip: false,\n                            x: pageX + 5,\n                            y: pageY + 5\n                        });\n                    }\n                }.bind(this),\n                600\n            );\n        }\n    };\n\n    HideToolTipOnHover = () => {\n        // hover events are not blocked\n        if (!this.state.PreventHoverEvent) {\n            this.setState({\n                // hide tooltip\n                HideToolTip: true,\n                // the user is not interested in this stat\n                HoveredOut: true\n            });\n        }\n    };\n\n    ShowHoverAfterClick = input => {\n        this.ShowToolTipOnHover(input);\n    };\n\n    // stat tooltip\n    ToolTip = () => {\n        let { Styles } = { ...this.props };\n        let Tip = (\n            <View\n                hidden={this.state.HideToolTip}\n                style={\n                    this.props.FlexibleWidth\n                        ? {\n                              ...Styles.ToolTipFlexibleWidth,\n                              left: this.state.x,\n                              top: this.state.y\n                          }\n                        : {\n                              ...Styles.ToolTip,\n                              left: this.state.x,\n                              top: this.state.y\n                          }\n                }\n            >\n                <View>{this.props.ToolTip}</View>\n            </View>\n        );\n        return Tip;\n    };\n\n    render() {\n        if (!this.props.ToolTip || this.props.ToolTip === '') {\n            if (!Debug || (Debug && !this.props.ToolTip)) {\n                return (\n                    <View style={this.props.style}>{this.props.children}</View>\n                );\n            }\n        }\n        return (\n            <View\n                style={this.props.style}\n                onClick={this.ShowToolTipOnClick}\n                onKeyUp={this.ShowToolTipOnClick}\n                onContextMenu={this.ShowToolTipOnClick}\n                onMouseEnter={this.ShowToolTipOnHover}\n                onMouseLeave={this.HideToolTipOnHover}\n                onMouseMove={this.ShowHoverAfterClick}\n                onTouchStart={this.RegisterTouch}\n            >\n                {this.ToolTip()}\n                {this.props.children}\n            </View>\n        );\n    }\n}\nexport const ToolTipContainer = connect(mapStateToProps)(HoverToolTip);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\n\nclass TextEdit extends Component {\n    constructor(props) {\n        super(props);\n        let Styles = { ...this.props.Styles };\n        this.state = { style: this.props.style || Styles.TextEdit };\n    }\n    onKeyPress = keypress => {\n        if (keypress.key === 'Enter') {\n            keypress.target.blur();\n        }\n    };\n    onFocus = () => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: this.props.styleFocus || Styles.TextEditFocus });\n    };\n    onBlur = input => {\n        let Styles = { ...this.props.Styles };\n        this.setState({ style: this.props.style || Styles.TextEdit });\n        if (this.props.onBlur) {\n            this.props.onBlur(input.target);\n        }\n    };\n    onChange(input) {\n        this.props.onChange(input.target);\n    }\n    render() {\n        return (\n            <input\n                hidden={this.props.hidden}\n                name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value || ''}\n                style={this.state.style}\n                maxLength={this.props.maxLength}\n                onKeyPress={this.onKeyPress}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={input => this.onChange(input)}\n            />\n        );\n    }\n}\nexport const TextEditContainer = connect(mapStateToProps)(TextEdit);\n\nclass TextArea extends Component {\n    onClick = input => {\n        this.props.onClick(input.target);\n    };\n    onChange = input => {\n        this.props.onChange(input.target);\n    };\n    render() {\n        return (\n            <textarea\n                readOnly={this.props.readOnly}\n                style={this.props.style}\n                onChange={this.onChange}\n                onClick={this.onClick}\n                value={this.props.value}\n            />\n        );\n    }\n}\nexport const TextAreaContainer = connect(mapStateToProps)(TextArea);\n","import React, { Component } from 'react';\n\nimport World from '../WorldAssets';\nimport Campaign from '../LegendsOfTheCatacombs';\nimport Gameplay from '../GameplayAssets';\n\n// Components\nimport {\n    Text,\n    View,\n    Block,\n    HeadingContainer as Heading\n} from '../components/Web';\nimport { ItemImageBlockContainer as ItemImage } from '../components/ItemImage';\nimport { ActionButtonContainer as Button } from '../components/Button';\nimport { ArrowContainer as Arrow } from '../components/Arrow';\nimport { ToolTipContainer as ToolTip } from '../components/ToolTip';\nimport { TextEditContainer as TextEdit } from '../components/Input';\nimport {\n    ContactContainer as Contact,\n    HeaderContainer as Header\n} from '../components/Misc';\n\nclass CreateCharacterHeader extends Component {\n    render() {\n        return (\n            <View style={this.props.Styles.CharacterHeader}>\n                <Heading>Create Your Character</Heading>\n            </View>\n        );\n    }\n}\n\nclass CreateCharacterContainer extends Component {\n    render() {\n        return <View style={this.props.Styles.CreateCharacterContainer}></View>;\n    }\n}\n\nclass CreateCharacterName extends Component {\n    render() {\n        // let {Player} = this.props\n        let Player = { ...this.props.Player };\n        return (\n            <View style={this.props.Styles.CharacterCreateName}>\n                <Block style={this.props.Styles.PropertyLabelForInput}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.CharacterName}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Name:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyFieldForInput}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.CharacterName}\n                        style={this.props.Styles.Inline}\n                    >\n                        <TextEdit\n                            style={this.props.Styles.TextEditUnderline}\n                            styleFocus={\n                                this.props.Styles.TextEditUnderlineFocus\n                            }\n                            name=\"Name\"\n                            placeholder=\"Enter your name.\"\n                            value={Player.Name}\n                            maxLength={13}\n                            onChange={this.props.SavePlayerName}\n                        />\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Health}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Health:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Health}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>{Player.MaxHealth}</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Mana}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Mana:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Mana}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>{Player.MaxMana}</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Stamina}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Stamina:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Vitals.Stamina}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>{Player.MaxStamina}</Text>\n                    </ToolTip>\n                </Block>\n            </View>\n        );\n    }\n}\n\nclass CreateCharacterAbilities extends Component {\n    render() {\n        // let {Player} = this.props\n        let Player = Object.assign({}, this.props.Player);\n        return (\n            <View style={this.props.Styles.CharacterCreateView}>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Abilities.Strength}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Strength:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Text>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Abilities.Strength}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Strength -\n                                (Player.Race.AbilityBoost.Strength || 0)}\n                        </ToolTip>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.AbilityBonus}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Race.AbilityBoost.Strength\n                                ? ' +' + Player.Race.AbilityBoost.Strength\n                                : null}\n                        </ToolTip>\n                    </Text>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Abilities.Dexterity}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Dexterity:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Text>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Abilities.Dexterity}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Dexterity -\n                                (Player.Race.AbilityBoost.Dexterity || 0)}\n                        </ToolTip>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.AbilityBonus}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Race.AbilityBoost.Dexterity\n                                ? ' +' + Player.Race.AbilityBoost.Dexterity\n                                : null}\n                        </ToolTip>\n                    </Text>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Abilities.Constitution}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Constitution:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Text>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Abilities.Constitution}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Constitution -\n                                (Player.Race.AbilityBoost.Constitution || 0)}\n                        </ToolTip>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.AbilityBonus}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Race.AbilityBoost.Constitution\n                                ? ' +' + Player.Race.AbilityBoost.Constitution\n                                : null}\n                        </ToolTip>\n                    </Text>\n                </Block>\n                <Block style={this.props.Styles.PropertyLabel}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Abilities.Intelligence}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Intelligence:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Text>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Abilities.Intelligence}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Intelligence -\n                                (Player.Race.AbilityBoost.Intelligence || 0)}\n                        </ToolTip>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.AbilityBonus}\n                            style={this.props.Styles.Inline}\n                        >\n                            {Player.Race.AbilityBoost.Intelligence\n                                ? ' +' + Player.Race.AbilityBoost.Intelligence\n                                : null}\n                        </ToolTip>\n                    </Text>\n                </Block>\n                <Block />\n                <Block style={this.props.Styles.RollAbilities}>\n                    <ToolTip\n                        DisabledOnClick\n                        ToolTip={Gameplay.Help.Buttons.Reroll}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Button onClick={this.props.GeneratePlayerStats}>\n                            Reroll\n                        </Button>\n                    </ToolTip>\n                </Block>\n                <Block />\n            </View>\n        );\n    }\n}\n\nclass CreateCharacterBackground extends Component {\n    SelectRace = Input => {\n        let Player = { ...this.props.Player };\n        let Races = World.Races;\n        let RaceName = '';\n        let index = 0;\n\n        Object.keys(Races).filter((RaceObjectName, i) => {\n            if (RaceObjectName === Player.Race.Id) {\n                index = i;\n                return true;\n            }\n            return false;\n        });\n\n        if (Input === 'Left') {\n            Player.Race =\n                Races[\n                    Object.keys(Races).filter((RaceObjectName, i) => {\n                        if (\n                            (index === 0 &&\n                                i === Object.keys(Races).length - 1) ||\n                            i === index - 1\n                        ) {\n                            RaceName = RaceObjectName;\n                            return true;\n                        }\n                        return false;\n                    })[0]\n                ];\n        } else {\n            Player.Race =\n                Races[\n                    Object.keys(Races).filter((RaceObjectName, i) => {\n                        if (\n                            (index + 2 > Object.keys(Races).length &&\n                                i === 0) ||\n                            i === index + 1\n                        ) {\n                            RaceName = RaceObjectName;\n                            return true;\n                        }\n                        return false;\n                    })[0]\n                ];\n        }\n        this.props.SetRace({ ...Player.Race, Id: RaceName });\n    };\n\n    SelectClass = Input => {\n        let Player = { ...this.props.Player };\n        let Classes = World.Classes;\n        let ClassName = '';\n        let index = 0;\n\n        Object.keys(Classes).filter((ClassObjectName, i) => {\n            if (ClassObjectName === Player.Class.Id) {\n                index = i;\n                return true;\n            }\n            return false;\n        });\n\n        if (Input === 'Left') {\n            Player.Class =\n                Classes[\n                    Object.keys(Classes).filter((ClassObjectName, i) => {\n                        if (\n                            (index === 0 &&\n                                i === Object.keys(Classes).length - 1) ||\n                            i === index - 1\n                        ) {\n                            ClassName = ClassObjectName;\n                            return true;\n                        }\n                        return false;\n                    })[0]\n                ];\n        } else {\n            Player.Class =\n                Classes[\n                    Object.keys(Classes).filter((ClassObjectName, i) => {\n                        if (\n                            (index + 2 > Object.keys(Classes).length &&\n                                i === 0) ||\n                            i === index + 1\n                        ) {\n                            ClassName = ClassObjectName;\n                            return true;\n                        }\n                        return false;\n                    })[0]\n                ];\n        }\n        this.props.SetClass({ ...Player.Class, Id: ClassName });\n    };\n\n    SelectFirstSpell = Input => {\n        let Player = { ...this.props.Player };\n        let Spells = Campaign.AvailableStartSpell;\n        let index = 0;\n\n        Spells.filter((Spell, i) => {\n            if (Spell === Player.SpellBook.Spells[0]) {\n                index = i;\n                return true;\n            }\n            return false;\n        });\n\n        if (Input === 'Left') {\n            if (index - 1 < 0) {\n                Player.SpellBook.Spells[0] = Spells[Spells.length - 1];\n            } else {\n                Player.SpellBook.Spells[0] = Spells[index - 1];\n            }\n        } else {\n            if (index + 1 > Spells.length - 1) {\n                Player.SpellBook.Spells[0] = Spells[0];\n            } else {\n                Player.SpellBook.Spells[0] = Spells[index + 1];\n            }\n        }\n\n        this.props.SetFirstSpell(Player.SpellBook);\n    };\n\n    render() {\n        let Player = { ...this.props.Player };\n\n        let FirstSpell = null;\n        if (Player.SpellBook && Player.SpellBook.Spells) {\n            FirstSpell = { ...Player.SpellBook.Spells[0] };\n        }\n\n        return (\n            <View style={this.props.Styles.CharacterCreateBackground}>\n                <Block\n                    style={{\n                        ...this.props.Styles.PropertyLabel,\n                        paddingTop: '8px'\n                    }}\n                >\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Race}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Race:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Block style={this.props.Styles.FlexBoxContainer}>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Race}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Arrow\n                                {...this.props}\n                                onClick={this.SelectRace}\n                                arrow=\"Left\"\n                            >\n                                ←\n                            </Arrow>\n                        </ToolTip>\n\n                        <Block\n                            style={{\n                                flexGrow: '1',\n                                flexBasis: 'auto',\n                                textAlign: 'center',\n                                margin: 'auto'\n                            }}\n                        >\n                            <ToolTip\n                                DisabledOnClick\n                                FlexibleWidth\n                                ToolTip={Gameplay.Help.Race}\n                                style={this.props.Styles.Inline}\n                            >\n                                <Text>{Player.Race.Name}</Text>\n                            </ToolTip>\n                        </Block>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Race}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Arrow\n                                {...this.props}\n                                onClick={this.SelectRace}\n                                arrow=\"Right\"\n                            >\n                                →\n                            </Arrow>\n                        </ToolTip>\n                    </Block>\n                </Block>\n                <Block\n                    style={{\n                        ...this.props.Styles.PropertyLabel,\n                        paddingTop: '8px'\n                    }}\n                >\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Class}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Class:</Text>\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.PropertyField}>\n                    <Block style={this.props.Styles.FlexBoxContainer}>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Class}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Arrow\n                                {...this.props}\n                                onClick={this.SelectClass}\n                                arrow=\"Left\"\n                            >\n                                ←\n                            </Arrow>\n                        </ToolTip>\n                        <Block\n                            style={{\n                                flexGrow: '1',\n                                flexBasis: 'auto',\n                                textAlign: 'center',\n                                margin: 'auto'\n                            }}\n                        >\n                            <Text>\n                                <ToolTip\n                                    DisabledOnClick\n                                    FlexibleWidth\n                                    ToolTip={Gameplay.Help.Class}\n                                    style={this.props.Styles.Inline}\n                                >\n                                    {Player.Class.Name}\n                                </ToolTip>\n                            </Text>\n                        </Block>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Class}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Arrow\n                                {...this.props}\n                                onClick={this.SelectClass}\n                                arrow=\"Right\"\n                            >\n                                →\n                            </Arrow>\n                        </ToolTip>\n                    </Block>\n                </Block>\n                <Block\n                    style={{\n                        ...this.props.Styles.PropertyLabel,\n                        paddingTop: '10px'\n                    }}\n                    hidden={\n                        !Player.Class.Spellcaster ||\n                        !Campaign.AvailableStartSpell\n                    }\n                >\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.FirstSpell}\n                        style={this.props.Styles.Inline}\n                    >\n                        <Text>Spell:</Text>\n                    </ToolTip>\n                </Block>\n                <Block\n                    style={this.props.Styles.PropertyField}\n                    hidden={\n                        !Player.Class.Spellcaster ||\n                        !Campaign.AvailableStartSpell\n                    }\n                >\n                    <Block style={this.props.Styles.FlexBoxContainer}>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Spell}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Block style={{ marginTop: '3px' }}>\n                                <Arrow\n                                    {...this.props}\n                                    onClick={this.SelectFirstSpell}\n                                    arrow=\"Left\"\n                                >\n                                    ←\n                                </Arrow>\n                            </Block>\n                        </ToolTip>\n                        <Block\n                            style={{\n                                flexGrow: '1',\n                                flexBasis: 'auto',\n                                marginLeft: '8px'\n                            }}\n                        >\n                            <ItemImage\n                                draggable={false}\n                                image={(FirstSpell && FirstSpell.Image) || null}\n                                name={(FirstSpell && FirstSpell.Name) || null}\n                                item={FirstSpell}\n                                NoActionMenu\n                                onClick={null}\n                            />\n                        </Block>\n                        <ToolTip\n                            DisabledOnClick\n                            FlexibleWidth\n                            ToolTip={Gameplay.Help.Arrows.Spell}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Block style={{ marginTop: '3px' }}>\n                                <Arrow\n                                    {...this.props}\n                                    onClick={this.SelectFirstSpell}\n                                    arrow=\"Right\"\n                                >\n                                    →\n                                </Arrow>\n                            </Block>\n                        </ToolTip>\n                    </Block>\n                </Block>\n            </View>\n        );\n    }\n}\n\nclass CreateCharacterDescription extends Component {\n    render() {\n        let Player = { ...this.props.Player };\n        return (\n            <View style={this.props.Styles.CreateCharacterDescription}>\n                <Block style={this.props.Styles.Paragraph}>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Race}\n                        style={this.props.Styles.Inline}\n                    >\n                        {Player.Race.Description}\n                    </ToolTip>\n                </Block>\n                <Block style={this.props.Styles.Paragraph}>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Race}\n                        style={this.props.Styles.Inline}\n                    >\n                        {Player.Class.Description}\n                    </ToolTip>\n                </Block>\n            </View>\n        );\n    }\n}\n\nclass StartGame extends Component {\n    render() {\n        return (\n            <View style={this.props.Styles.StartGame}>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.ResumeGame}\n                    style={this.props.Styles.Inline}\n                >\n                    <Button\n                        onClick={this.props.ResumeGame}\n                        hidden={!this.props.GameInBackground}\n                    >\n                        Resume Game\n                    </Button>\n                </ToolTip>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.PlayGame}\n                    style={this.props.Styles.Inline}\n                >\n                    <Button onClick={this.props.StartPlaying}>\n                        Let's play\n                    </Button>\n                </ToolTip>\n            </View>\n        );\n    }\n}\n\nexport default props => {\n    return (\n        <View style={props.Styles.CreatePlayer}>\n            {/* row 1 */}\n            <Header />\n            {/* row 2 */}\n            <Contact />\n            {/* container */}\n            <CreateCharacterContainer {...props} />\n            {/* row 3 */}\n            <CreateCharacterHeader {...props} />\n            {/* row 4 */}\n            <CreateCharacterName {...props} />\n            <CreateCharacterAbilities {...props} />\n            <CreateCharacterBackground {...props} />\n            <CreateCharacterDescription {...props} />\n            {/* row 6 */}\n            <StartGame {...props} />\n        </View>\n    );\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View } from './Web';\n\nclass TopBackgroundImage extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return <View style={Styles.TopGameBackgroundImage} />;\n    }\n}\nexport const TopBackgroundImageContainer = connect(mapStateToProps)(\n    TopBackgroundImage\n);\n\nclass BottomBackgroundImage extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return <View style={Styles.BottomGameBackgroundImage} />;\n    }\n}\nexport const BottomBackgroundImageContainer = connect(mapStateToProps)(\n    BottomBackgroundImage\n);\n\nclass GameStateBackgroundImage extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return <View style={Styles.GameStateBackgroundImage} />;\n    }\n}\nexport const GameStateBackgroundImageContainer = connect(mapStateToProps)(\n    GameStateBackgroundImage\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './../components/Web';\nimport { ActionButtonContainer as Button } from './../components/Button';\nimport { TextEditContainer as TextEdit } from './../components/Input';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport Gameplay from './../GameplayAssets';\n\nclass ClearLog extends Component {\n    render() {\n        let { Styles, Responsiveness } = { ...this.props };\n        return (\n            <View style={Styles.ClearLog}>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.ClearLog}\n                    style={Styles.Inline}\n                >\n                    <Button\n                        SmallPadding={Responsiveness.MobileScreen}\n                        onClick={this.props.ClearLog}\n                    >\n                        {Responsiveness.MobileScreen ? (\n                            <Text>X</Text>\n                        ) : (\n                            <Text>Clear Log</Text>\n                        )}\n                    </Button>\n                </ToolTip>\n            </View>\n        );\n    }\n}\nexport const ClearLogContainer = connect(mapStateToProps)(ClearLog);\n\nclass EventLog extends Component {\n    onClick = input => {\n        let HtmlElement = document.getElementById('EventLog');\n        let SeparatingLine = HtmlElement.clientHeight / 2;\n        let Direction = 1;\n        if (\n            input.clientY - HtmlElement.getBoundingClientRect().y <\n            SeparatingLine\n        ) {\n            Direction = -1;\n        }\n\n        // event log does not scroll, or user has reached the bottom of the scroll\n        if (\n            HtmlElement.scrollHeight <=\n                HtmlElement.getBoundingClientRect().height ||\n            (Direction === 1 &&\n                Math.floor(HtmlElement.scrollTop) ===\n                    Math.floor(\n                        HtmlElement.scrollHeight -\n                            HtmlElement.getBoundingClientRect().height\n                    ))\n        ) {\n            this.props.DisplayCustomLogEntryInput(input);\n        } else {\n            this.props.Scroll('EventLog', Direction);\n        }\n    };\n\n    render() {\n        let { Styles } = { ...this.props };\n        let EventLog = Object.assign([], this.props.EventLog);\n        return (\n            <View style={Styles.EventLog} onClick={this.onClick}>\n                <View id=\"EventLog\" style={Styles.EventLogContainer}>\n                    <View>\n                        {!EventLog\n                            ? null\n                            : EventLog.map((LogEntry, Index) => {\n                                  return <View key={Index}>{LogEntry}</View>;\n                              })}\n                    </View>\n                    <View style={Styles.CustomLogEntryInputContainer}>\n                        <TextEdit\n                            style={{\n                                ...Styles.TextEdit,\n                                width:\n                                    'calc(100% - ' +\n                                    Styles.TextEdit.padding.replace('px', '') *\n                                        2 +\n                                    'px)'\n                            }}\n                            styleFocus={{\n                                ...Styles.TextEditFocus,\n                                width:\n                                    'calc(100% - ' +\n                                    Styles.TextEdit.padding.replace('px', '') *\n                                        2 +\n                                    'px)'\n                            }}\n                            hidden={!this.props.EnterCustomLogEntry}\n                            name=\"CustomLogEntry\"\n                            value={this.props.CustomLogEntry}\n                            placeholder=\"You can add an entry to your log here.\"\n                            onChange={this.props.StoreCustomLogEntryInput}\n                            onBlur={this.props.SaveCustomLogEntryInput}\n                        />\n                    </View>\n                </View>\n            </View>\n        );\n    }\n}\nexport const EventLogContainer = connect(mapStateToProps)(EventLog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { Text, View, LineBreak, Image } from './../components/Web';\n\nconst storyPath = './graphics/story/';\nconst imgExt = '.png';\n\nclass Story extends Component {\n    render() {\n        let { Styles, Story } = { ...this.props };\n        return (\n            <View\n                style={Styles.Story}\n                hidden={Story.Text.length > 0 && Story.Text === ''}\n            >\n                <View style={Styles.Paragraph}>\n                    {!Story.Text\n                        ? null\n                        : typeof Story.Text.split !== 'function'\n                        ? Story.Text\n                        : Story.Text.split('\\n').map((paragraph, index) => {\n                              return (\n                                  <Text key={index}>\n                                      {paragraph}\n                                      <LineBreak />\n                                  </Text>\n                              );\n                          })}\n                </View>\n                <View hidden={!Story.Image}>\n                    <Image\n                        draggable={false}\n                        src={storyPath + Story.Image + imgExt}\n                        style={Styles.Paragraph}\n                    />\n                </View>\n            </View>\n        );\n    }\n}\nexport const StoryContainer = connect(mapStateToProps)(Story);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { Text, View } from './../components/Web';\nimport Utilities from './../Utilities';\n\nconst { North, South, West, East } = Utilities.Directions;\nconst { Wall, Door, LootContainer, Empty } = Utilities.MapObjects;\nlet WallMapVisibleRange = { ...Utilities.WallMapVisibleRange };\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    DrawMap = () => {\n        // let {WallMap, WallMapRevealed, Player} = this.props\n        let WallMap = [...this.props.Maps.WallMap];\n        let WallMapRevealed = [...this.props.Maps.WallMapRevealed];\n        let { Player, Styles } = { ...this.props };\n\n        return WallMapRevealed.map((HorizontalLine, y) => {\n            // make sure that the map object is in the max/min Y sight\n            if (\n                Player.y + WallMapVisibleRange.y >= y &&\n                Player.y - WallMapVisibleRange.y <= y\n            ) {\n                return (\n                    <View key={y} style={Styles.MapRow}>\n                        {HorizontalLine.map((MapObjectRevealed, x) => {\n                            let MapObject = WallMap[y][x];\n                            // make sure that the map object is in the max/min X sight\n                            if (\n                                Player.x + WallMapVisibleRange.x >= x &&\n                                Player.x - WallMapVisibleRange.x <= x\n                            ) {\n                                return (\n                                    <Text\n                                        key={x}\n                                        style={Styles.MapObject}\n                                        title={[x, y].join(',')}\n                                    >\n                                        {this.DrawMonster({ x, y }) ||\n                                            this.DrawMapObject(\n                                                MapObject,\n                                                MapObjectRevealed,\n                                                x,\n                                                y\n                                            )}\n                                    </Text>\n                                );\n                            }\n                            // out of sight X\n                            else {\n                                return <Text key={x}>{Empty}</Text>;\n                            }\n                        })}\n                    </View>\n                );\n            }\n            // out of sight Y\n            else {\n                return <View key={y}>{Empty}</View>;\n            }\n        });\n    };\n\n    DrawMonster = ({ x, y }) => {\n        let MonsterMap = [...this.props.Maps.MonsterMap];\n        let ShowFullMap = this.props.ShowFullMap;\n        let { Player, Styles } = { ...this.props };\n\n        if (\n            ShowFullMap ||\n            (x >= Player.x - 1 &&\n                x <= Player.x + 1 &&\n                y >= Player.y - 1 &&\n                y <= Player.y + 1)\n        ) {\n            if (MonsterMap[y][x] !== Empty) {\n                if (x === Player.x && y === Player.y) {\n                    return null;\n                }\n                return <View style={Styles.Monster} />;\n            }\n        }\n        return null;\n    };\n\n    DrawMapObject = (MapObject, MapObjectRevealed, x, y) => {\n        let ShowFullMap = this.props.ShowFullMap;\n        let WallMap = [...this.props.Maps.WallMap];\n        let WallMapRevealed = [...this.props.Maps.WallMapRevealed];\n        let DiscoveryMap = [...this.props.Maps.DiscoveryMap];\n        let LootMap = [...this.props.Maps.LootMap];\n        let { Player, Styles } = { ...this.props };\n\n        // player marker\n        if (x === Player.x && y === Player.y) {\n            return <View id=\"you-are-here\" style={Styles.Player} />;\n        } else {\n            // area has already been discovered\n            if (MapObjectRevealed === MapObject || ShowFullMap) {\n                if (MapObject === Wall || MapObject === Door) {\n                    // grab neighboring objects (if vertically out of range, assume that what is outside is walls)\n                    let topRow =\n                        y - 1 >= 0\n                            ? WallMap[y - 1].slice(x - 1, x + 2)\n                            : [Wall, Wall, Wall];\n                    let middleRow = WallMap[y].slice(x - 1, x + 2);\n                    let bottomRow =\n                        y + 1 < WallMap.length\n                            ? WallMap[y + 1].slice(x - 1, x + 2)\n                            : [Wall, Wall, Wall];\n\n                    // if horizontally out of range, assume that what is outside is nothing\n                    if (x === 0) {\n                        topRow = [\n                            Empty,\n                            WallMap[y - 1][x],\n                            WallMap[y - 1][x + 1]\n                        ];\n                        middleRow = [Empty, WallMap[y][x], WallMap[y][x + 1]];\n                        bottomRow = [\n                            Empty,\n                            WallMap[y + 1][x],\n                            WallMap[y + 1][x + 1]\n                        ];\n                    } else if (x === WallMap[y].length - 1) {\n                        topRow = [\n                            WallMap[y - 1][x - 1],\n                            WallMap[y - 1][x],\n                            Empty\n                        ];\n                        middleRow = [\n                            WallMap[y - 1][x - 1],\n                            WallMap[y][x],\n                            Empty\n                        ];\n                        bottomRow = [\n                            WallMap[y - 1][x - 1],\n                            WallMap[y + 1][x],\n                            Empty\n                        ];\n                    }\n\n                    let MapObjectInContext = [topRow, middleRow, bottomRow];\n\n                    // it's a wall\n                    if (MapObject === Wall) {\n                        return this.DrawWall(MapObjectInContext, MapObject);\n                    }\n                    // it's a door\n                    if (MapObject === Door) {\n                        return this.DrawDoor(MapObjectInContext, MapObject);\n                        // <View style={{textAlign: \"center\"}}>{MapObject}</View>\n                    }\n                }\n                // this is a loot container and it is part of the map that has been explored\n                else if (\n                    LootMap[y][x] === LootContainer &&\n                    (DiscoveryMap[y][x] === Empty || ShowFullMap)\n                ) {\n                    return <View style={Styles.Loot} />;\n                }\n\n                // it's something else\n                return <View style={{ textAlign: 'center' }}>{MapObject}</View>;\n            }\n\n            // this area was newly discovered\n            else {\n                // reveal new walls or doors\n                if (\n                    this.DetectWallInVicinityOfActor(x, y, Player.x, Player.y)\n                ) {\n                    WallMapRevealed[y][x] = WallMap[y][x];\n\n                    if (MapObject === Wall || MapObject === Door) {\n                        // grab neighboring objects (if vertically out of range, assume that what is outside is walls)\n                        let topRow =\n                            y - 1 >= 0\n                                ? WallMap[y - 1].slice(x - 1, x + 2)\n                                : [Wall, Wall, Wall];\n                        let middleRow = WallMap[y].slice(x - 1, x + 2);\n                        let bottomRow =\n                            y + 1 < WallMap.length\n                                ? WallMap[y + 1].slice(x - 1, x + 2)\n                                : [Wall, Wall, Wall];\n\n                        // if horizontally out of range, assume that what is outside is nothing\n                        if (x === 0) {\n                            topRow = [\n                                Empty,\n                                WallMap[y - 1][x],\n                                WallMap[y - 1][x + 1]\n                            ];\n                            middleRow = [\n                                Empty,\n                                WallMap[y][x],\n                                WallMap[y][x + 1]\n                            ];\n                            bottomRow = [\n                                Empty,\n                                WallMap[y + 1][x],\n                                WallMap[y + 1][x + 1]\n                            ];\n                        } else if (x === WallMap[y].length - 1) {\n                            topRow = [\n                                WallMap[y - 1][x - 1],\n                                WallMap[y - 1][x],\n                                Empty\n                            ];\n                            middleRow = [\n                                WallMap[y - 1][x - 1],\n                                WallMap[y][x],\n                                Empty\n                            ];\n                            bottomRow = [\n                                WallMap[y - 1][x - 1],\n                                WallMap[y + 1][x],\n                                Empty\n                            ];\n                        }\n\n                        let MapObjectInContext = [topRow, middleRow, bottomRow];\n\n                        // it's a wall\n                        if (MapObject === Wall) {\n                            return this.DrawWall(MapObjectInContext, MapObject);\n                        }\n                        // it's a door\n                        if (MapObject === Door) {\n                            return this.DrawDoor(MapObjectInContext, MapObject);\n                        }\n                    }\n\n                    // it's something else\n                    return WallMap[y][x];\n                }\n\n                // still hidden area\n                else {\n                    return Empty;\n                }\n            }\n        }\n    };\n\n    DrawWall = (MapObjectInContext, MapObject) => {\n        let { Styles } = { ...this.props };\n\n        let EmptySurrounding = 0;\n\n        MapObjectInContext.map(Row => {\n            Row.map(MapObj => {\n                if (MapObj === Empty) {\n                    EmptySurrounding++;\n                }\n                return null;\n            });\n            return null;\n        });\n\n        // Pillar\n        if (EmptySurrounding === 8) {\n            return <View style={Styles.Wall.Pillar} />;\n        }\n        // Completely surrounded by walls\n        else if (EmptySurrounding === 0) {\n            return Empty;\n        }\n        // 4 surrounding walls (odd-shaped walls)\n        // North, West, East, and NorthWest\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door) &&\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door) &&\n            (MapObjectInContext[North.y][East.x] === Wall ||\n                MapObjectInContext[North.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Wall.NorthWestEastAndNorthWest} />;\n        }\n        // North, South, East, and SouthEast\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door) &&\n            (MapObjectInContext[South.y][East.x] === Wall ||\n                MapObjectInContext[South.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Wall.NorthSouthEastAndSouthEast} />;\n        }\n        // 3 surrounding walls (T-shaped walls)\n        // North, South and East\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door)\n        ) {\n            return (\n                <View style={Styles.Wall.TShapedWallNSE}>\n                    <View style={Styles.Wall.NorthSouthAndEast} />\n                </View>\n            );\n        }\n        // North, South and West\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door) &&\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door)\n        ) {\n            return (\n                <View style={Styles.Wall.TShapedWallNSW}>\n                    <View style={Styles.Wall.NorthSouthAndWest} />\n                </View>\n            );\n        }\n        // 2 surrounding walls (continuous walls)\n        // North and East\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Wall.NorthToEast} />;\n        }\n        // South and West\n        else if (\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door) &&\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door)\n        ) {\n            return <View style={Styles.Wall.SouthToWest} />;\n        }\n        // South and East\n        else if (\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Wall.SouthToEast} />;\n        }\n        // North and West\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door)\n        ) {\n            return <View style={Styles.Wall.NorthToWest} />;\n        }\n        // North and South\n        else if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door)\n        ) {\n            return <View style={Styles.Wall.NorthToSouth} />;\n        }\n        // West and East\n        else if (\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Wall.WestToEast} />;\n        } else {\n            return MapObject;\n        }\n    };\n\n    DrawDoor = (MapObjectInContext, MapObject) => {\n        let { Styles } = { ...this.props };\n\n        if (\n            (MapObjectInContext[North.y][North.x] === Wall ||\n                MapObjectInContext[North.y][North.x] === Door) &&\n            (MapObjectInContext[South.y][South.x] === Wall ||\n                MapObjectInContext[South.y][South.x] === Door)\n        ) {\n            return <View style={Styles.Door.NorthToSouth} />;\n        } else if (\n            (MapObjectInContext[West.y][West.x] === Wall ||\n                MapObjectInContext[West.y][West.x] === Door) &&\n            (MapObjectInContext[East.y][East.x] === Wall ||\n                MapObjectInContext[East.y][East.x] === Door)\n        ) {\n            return <View style={Styles.Door.WestToEast} />;\n        }\n\n        return MapObject;\n    };\n\n    DetectWallInVicinityOfActor = (wallX, wallY, actorX, actorY) => {\n        if (\n            // detect horizontal objects\n            (wallX === actorX &&\n                (wallY === actorY + 1 || wallY === actorY - 1)) ||\n            // detect veretical objects\n            (wallY === actorY &&\n                (wallX === actorX + 1 || wallX === actorX - 1)) ||\n            // detect diagonal objects\n            ((wallY === actorY + 1 || wallY === actorY - 1) &&\n                (wallX === actorX + 1 || wallX === actorX - 1))\n        ) {\n            return true;\n        }\n        return false;\n    };\n\n    onClick = input => {\n        input.preventDefault();\n\n        let Click = { x: input.clientX, y: input.clientY };\n\n        let PlayerMarker = document\n            .getElementById('you-are-here')\n            .getBoundingClientRect();\n\n        let Direction = { x: null, y: null };\n\n        if (Click.x - PlayerMarker.width / 2 > PlayerMarker.x) {\n            Direction.x = 'East';\n        } else if (Click.x - PlayerMarker.width / 2 <= PlayerMarker.x) {\n            Direction.x = 'West';\n        }\n\n        if (Click.y - PlayerMarker.height / 2 > PlayerMarker.y) {\n            Direction.y = 'South';\n        } else if (Click.y - PlayerMarker.height / 2 <= PlayerMarker.y) {\n            Direction.y = 'North';\n        }\n\n        let Offset = {\n            x: Click.x - PlayerMarker.x - PlayerMarker.width / 2,\n            y: Click.y - PlayerMarker.y - PlayerMarker.height / 2\n        };\n\n        let DecisiveDirection;\n\n        if (Direction.y === 'North') {\n            // player has clicked in a triangle area above the marker\n            if (Offset.x <= 0 && Offset.x > Offset.y) {\n                DecisiveDirection = Direction.y;\n            }\n            if (Offset.x > 0 && Offset.x < Offset.y * -1) {\n                DecisiveDirection = Direction.y;\n            }\n        }\n\n        if (Direction.y === 'South') {\n            // player has clicked in a triangle area below the marker\n            if (Offset.x <= 0 && Offset.x * -1 < Offset.y) {\n                DecisiveDirection = Direction.y;\n            }\n            if (Offset.x > 0 && Offset.x < Offset.y) {\n                DecisiveDirection = Direction.y;\n            }\n        }\n\n        if (Direction.x === 'West') {\n            // player has clicked in a triangle area on the left of the marker\n            if (Offset.y <= 0 && Offset.x < Offset.y) {\n                DecisiveDirection = Direction.x;\n            }\n            if (Offset.y > 0 && Offset.x * -1 > Offset.y) {\n                DecisiveDirection = Direction.x;\n            }\n        }\n\n        if (Direction.x === 'East') {\n            // player has clicked in a triangle area on the left of the marker\n            if (Offset.y <= 0 && Offset.x > Offset.y * -1) {\n                DecisiveDirection = Direction.x;\n            }\n            if (Offset.y > 0 && Offset.x > Offset.y) {\n                DecisiveDirection = Direction.x;\n            }\n        }\n\n        if (typeof DecisiveDirection !== undefined) {\n            this.props.MovePlayer(DecisiveDirection);\n            if (DecisiveDirection === 'North') {\n                this.props.onClickArrow('ArrowUp');\n            }\n            if (DecisiveDirection === 'South') {\n                this.props.onClickArrow('ArrowDown');\n            }\n            if (DecisiveDirection === 'West') {\n                this.props.onClickArrow('ArrowLeft');\n            }\n            if (DecisiveDirection === 'East') {\n                this.props.onClickArrow('ArrowRight');\n            }\n        }\n    };\n\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View\n                style={Styles.Map}\n                onClick={this.onClick}\n                onMouseDown={this.onMouseDown}\n            >\n                {this.DrawMap()}\n            </View>\n        );\n    }\n}\nexport const MapContainer = connect(mapStateToProps)(Map);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './../components/Web';\nimport { ItemImageBlockContainer as ItemImage } from './../components/ItemImage';\n\nclass Gear extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View\n                style={Styles.Accessories}\n                hidden={\n                    this.props.MobileScreen ? this.props.HideInventory : false\n                }\n            ></View>\n        );\n    }\n}\nexport const GearContainer = connect(mapStateToProps)(Gear);\n\nclass WeaponReady extends Component {\n    render() {\n        let { Styles, Item, Slot } = { ...this.props };\n        if (!Item) {\n            return (\n                <View style={Styles.ReadyItem}>\n                    <ItemImage image={null} Slot={Slot} NoActionMenu />\n                </View>\n            );\n        } else {\n            return (\n                <View style={Styles.ReadyItem}>\n                    <ItemImage\n                        onClick={this.onClick}\n                        image={(Item && Item.image) || null}\n                        Slot={Slot}\n                        item={Item}\n                        Equipped\n                        {...this.props}\n                    />\n                </View>\n            );\n        }\n    }\n}\nconst WeaponReadyContainer = connect(mapStateToProps)(WeaponReady);\n\nclass WeaponReadyBlock extends Component {\n    render() {\n        let Gear = { ...this.props.Player.Gear };\n        return (\n            <View>\n                <WeaponReadyContainer Slot=\"Left hand\" Item={Gear.LeftHand} />\n                <WeaponReadyContainer Slot=\"Right hand\" Item={Gear.RightHand} />\n            </View>\n        );\n    }\n}\nexport const WeaponReadyBlockContainer = connect(mapStateToProps)(\n    WeaponReadyBlock\n);\n\nclass PlayerNameAndWeapons extends Component {\n    render() {\n        let { Player, Styles } = { ...this.props };\n        return (\n            <View style={Styles.PlayerStats0}>\n                <View>\n                    <Text>{Player.Name}</Text>\n                </View>\n                <View style={Styles.ReadyItemBlock}>\n                    <WeaponReadyBlockContainer />\n                </View>\n            </View>\n        );\n    }\n}\nexport const PlayerNameAndWeaponsContainer = connect(mapStateToProps)(\n    PlayerNameAndWeapons\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport { View } from './../components/Web';\nimport Gameplay from './../GameplayAssets';\n\nclass StatBar extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View>\n                <ToolTip\n                    FlexibleWidth\n                    ToolTip={\n                        <View>\n                            <View>\n                                {this.props.Metric}:{' '}\n                                {this.props.ratio ||\n                                    this.props.current + '/' + this.props.max}\n                            </View>\n                            <View>{this.props.Description}</View>\n                        </View>\n                    }\n                >\n                    {this.props.ShowLabel ? this.props.Metric : null}\n                    <View style={Styles.StatBar}>\n                        <View style={this.props.style} />\n                    </View>\n                </ToolTip>\n            </View>\n        );\n    }\n}\nconst StatBarContainer = connect(mapStateToProps)(StatBar);\n\nclass HealthBar extends Component {\n    render() {\n        let { Player, Styles } = { ...this.props };\n        let style = {\n            ...Styles.HealthBar,\n            width: Math.min(100, (Player.Health / Player.MaxHealth) * 100) + '%'\n        };\n        return (\n            <View>\n                <StatBarContainer\n                    Metric=\"Health\"\n                    ShowLabel\n                    style={style}\n                    max={Player.MaxHealth}\n                    current={Player.Health}\n                    Description={Gameplay.Help.Vitals.Health}\n                />\n            </View>\n        );\n    }\n}\nexport const HealthBarContainer = connect(mapStateToProps)(HealthBar);\n\nclass ManaBar extends Component {\n    render() {\n        let { Player, Styles } = { ...this.props };\n        let style = {\n            ...Styles.ManaBar,\n            width: Math.min(100, (Player.Mana / Player.MaxMana) * 100) + '%'\n        };\n        return (\n            <View>\n                <StatBarContainer\n                    Metric=\"Mana\"\n                    ShowLabel\n                    style={style}\n                    max={Player.MaxMana}\n                    current={Player.Mana}\n                />\n            </View>\n        );\n    }\n}\nexport const ManaBarContainer = connect(mapStateToProps)(ManaBar);\n\nclass StaminaBar extends Component {\n    render() {\n        let { Player, Styles } = { ...this.props };\n        let style = {\n            ...Styles.StaminaBar,\n            width:\n                Math.min(\n                    100,\n                    Math.ceil((Player.Stamina / Player.MaxStamina) * 100)\n                ) + '%'\n        };\n        return (\n            <View>\n                <StatBarContainer\n                    Metric=\"Stamina\"\n                    ShowLabel\n                    style={style}\n                    ratio={style.width}\n                />\n            </View>\n        );\n    }\n}\nexport const StaminaBarContainer = connect(mapStateToProps)(StaminaBar);\n\nclass PlayerVitals extends Component {\n    render() {\n        let { Styles, Player } = { ...this.props };\n        return (\n            <View style={Styles.PlayerVitals}>\n                <View style={Styles.PlayerStat}>\n                    <HealthBarContainer />\n                </View>\n                <View\n                    style={Styles.PlayerStat}\n                    hidden={!Player.Class || !Player.Class.Spellcaster}\n                >\n                    <ManaBarContainer />\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <StaminaBarContainer />\n                </View>\n            </View>\n        );\n    }\n}\nexport const PlayerVitalsContainer = connect(mapStateToProps)(PlayerVitals);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View } from './../components/Web';\nimport { ArrowContainer as Arrow } from './../components/Arrow';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport Gameplay from './../GameplayAssets';\n\nclass GoNorth extends Component {\n    MovePlayer = () => {\n        let { MovePlayer } = this.props;\n        MovePlayer('North');\n    };\n    render() {\n        return (\n            <Arrow {...this.props} onClick={this.MovePlayer} arrow=\"ArrowUp\">\n                ↑\n            </Arrow>\n        );\n    }\n}\n\nclass GoWest extends Component {\n    MovePlayer = () => {\n        let { MovePlayer } = this.props;\n        MovePlayer('West');\n    };\n    render() {\n        return (\n            <Arrow {...this.props} onClick={this.MovePlayer} arrow=\"ArrowLeft\">\n                ←\n            </Arrow>\n        );\n    }\n}\n\nclass GoEast extends Component {\n    MovePlayer = () => {\n        let { MovePlayer } = this.props;\n        MovePlayer('East');\n    };\n    render() {\n        return (\n            <Arrow {...this.props} onClick={this.MovePlayer} arrow=\"ArrowRight\">\n                →\n            </Arrow>\n        );\n    }\n}\nclass GoSouth extends Component {\n    MovePlayer = () => {\n        let { MovePlayer } = this.props;\n        MovePlayer('South');\n    };\n    render() {\n        return (\n            <Arrow {...this.props} onClick={this.MovePlayer} arrow=\"ArrowDown\">\n                ↓\n            </Arrow>\n        );\n    }\n}\n\nclass Arrows extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View style={Styles.ArrowContainer}>\n                <View style={Styles.ArrowRow}>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Arrows.North}\n                        style={Styles.Inline}\n                    >\n                        <GoNorth {...this.props} />\n                    </ToolTip>\n                </View>\n                <View style={Styles.ArrowRow}>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Arrows.West}\n                        style={Styles.Inline}\n                    >\n                        <GoWest {...this.props} />\n                    </ToolTip>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Arrows.East}\n                        style={Styles.Inline}\n                    >\n                        <GoEast {...this.props} />\n                    </ToolTip>\n                </View>\n                <View style={Styles.ArrowRow}>\n                    <ToolTip\n                        DisabledOnClick\n                        FlexibleWidth\n                        ToolTip={Gameplay.Help.Arrows.South}\n                        style={Styles.Inline}\n                    >\n                        <GoSouth {...this.props} />\n                    </ToolTip>\n                </View>\n            </View>\n        );\n    }\n}\nexport const DirectionalArrows = connect(mapStateToProps)(Arrows);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './../components/Web';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport Gameplay from './../GameplayAssets';\n\nclass PlayerLevelAndArmor extends Component {\n    render() {\n        let { Player, Styles, MobileScreen, TabletScreen } = { ...this.props };\n        return (\n            <View\n                style={\n                    MobileScreen || TabletScreen\n                        ? Styles.PlayerStats2Block1\n                        : Styles.PlayerStats3\n                }\n                hidden={this.props.MobileScreen ? this.props.HideStats : false}\n            >\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={\n                            Player.Class.Spellcaster\n                                ? Gameplay.Help.LevelSpellcaster\n                                : Gameplay.Help.LevelNotSpellcaster\n                        }\n                        style={Styles.Inline}\n                    >\n                        <Text>\n                            {MobileScreen ? (\n                                <Text>LVL</Text>\n                            ) : (\n                                <Text>Level</Text>\n                            )}\n                            :{' '}\n                        </Text>\n                        <Text>{Player.Level}</Text>\n                    </ToolTip>\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <ToolTip ToolTip={Gameplay.Help.XP} style={Styles.Inline}>\n                        <Text>XP: </Text>\n                        <Text>{Player.XP}</Text>\n                    </ToolTip>\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.ArmorClass}\n                        style={Styles.Inline}\n                    >\n                        <Text>AC: </Text>\n                        <Text>{Player.ArmorClass}</Text>\n                    </ToolTip>\n                </View>\n            </View>\n        );\n    }\n}\nexport const PlayerLevelAndArmorContainer = connect(mapStateToProps)(\n    PlayerLevelAndArmor\n);\n\nclass PlayerAbilities extends Component {\n    render() {\n        let { Player, Styles, MobileScreen, TabletScreen } = { ...this.props };\n        return (\n            <View\n                style={\n                    MobileScreen || TabletScreen\n                        ? Styles.PlayerStats2Block2\n                        : Styles.PlayerAttributesStacked\n                }\n                hidden={this.props.MobileScreen ? this.props.HideStats : false}\n            >\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.Abilities.Strength}\n                        style={Styles.Inline}\n                    >\n                        <Text>\n                            {MobileScreen ? (\n                                <Text>STR</Text>\n                            ) : (\n                                <Text>Strength</Text>\n                            )}\n                            :{' '}\n                        </Text>\n                        <Text>{Player.Strength}</Text>\n                    </ToolTip>\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.Abilities.Constitution}\n                        style={Styles.Inline}\n                    >\n                        <Text>\n                            {MobileScreen ? (\n                                <Text>CON</Text>\n                            ) : (\n                                <Text>Constitution</Text>\n                            )}\n                            :{' '}\n                        </Text>\n                        <Text>{Player.Constitution}</Text>\n                    </ToolTip>\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.Abilities.Dexterity}\n                        style={Styles.Inline}\n                    >\n                        <Text>\n                            {MobileScreen ? (\n                                <Text>DEX</Text>\n                            ) : (\n                                <Text>Dexterity</Text>\n                            )}\n                            :{' '}\n                        </Text>\n                        <Text>{Player.Dexterity}</Text>\n                    </ToolTip>\n                </View>\n                <View style={Styles.PlayerStat}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.Abilities.Intelligence}\n                        style={Styles.Inline}\n                    >\n                        <Text>\n                            {MobileScreen ? (\n                                <Text>INT</Text>\n                            ) : (\n                                <Text>Intelligence</Text>\n                            )}\n                            :{' '}\n                        </Text>\n                        <Text>{Player.Intelligence}</Text>\n                    </ToolTip>\n                </View>\n            </View>\n        );\n    }\n}\nexport const PlayerAbilitiesContainer = connect(mapStateToProps)(\n    PlayerAbilities\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './../components/Web';\nimport { ClearFloat } from './../components/Misc';\nimport { ItemImageBlockContainer as ItemImage } from './../components/ItemImage';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport Gameplay from './../GameplayAssets';\n\nclass Inventory extends Component {\n    DisplayInventory = () => {\n        let { Player } = { ...this.props };\n\n        let list = [];\n\n        for (let i = 0; i < Player.Backpack.maxItems; i++) {\n            if (\n                Player.Backpack.Items &&\n                Player.Backpack.Items[i] !== undefined\n            ) {\n                list.push(Player.Backpack.Items[i]);\n            } else {\n                list.push(null);\n            }\n        }\n\n        let inventory = list.map((item, index) => {\n            return (\n                <ItemImage\n                    draggable={true}\n                    key={index}\n                    index={\n                        item && item.image\n                            ? 'B' +\n                              (index <= 99\n                                  ? ('0' + Number(index + 1)).slice(-2)\n                                  : index)\n                            : null\n                    }\n                    showIndex\n                    image={(item && item.image) || null}\n                    name={(item && item.Name) || null}\n                    item={item}\n                    onClick={this.props.UseItem}\n                    {...this.props}\n                />\n            );\n        });\n\n        return inventory;\n    };\n\n    render() {\n        let { Player, Styles } = { ...this.props };\n        return (\n            <View\n                style={Styles.Inventory}\n                hidden={\n                    this.props.MobileScreen ? this.props.HideInventory : false\n                }\n            >\n                <View\n                    style={Styles.InventoryLabel}\n                    hidden={this.props.MobileScreen}\n                >\n                    <ToolTip\n                        ToolTip={Gameplay.Help.Backpack}\n                        style={Styles.Inline}\n                    >\n                        Backpack\n                    </ToolTip>\n                </View>\n                {this.DisplayInventory()}\n                <ClearFloat />\n                <Text style={Styles.InventoryWeightLabel}>\n                    <ToolTip\n                        ToolTip={Gameplay.Help.BackpackWeight}\n                        style={Styles.Inline}\n                    >\n                        Weight:{' '}\n                        {Number(Player.Backpack.Weight.Current).toFixed(2)}\n                    </ToolTip>{' '}\n                    /{' '}\n                    <ToolTip\n                        ToolTip={Gameplay.Help.BackpackMaxWeight}\n                        style={Styles.Inline}\n                    >\n                        {Player.Backpack.Weight.Max} lbs\n                    </ToolTip>\n                </Text>\n            </View>\n        );\n    }\n}\nexport const InventoryContainer = connect(mapStateToProps)(Inventory);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport { ItemImageBlockContainer as ItemImage } from './../components/ItemImage';\nimport { View } from './../components/Web';\nimport Utilities from './../Utilities';\nimport Gameplay from './../GameplayAssets';\n\nclass SpellBook extends Component {\n    DisplaySpellBook = () => {\n        // let {Player} = this.props\n        let Player = { ...this.props.Player };\n        let Spells = Player.SpellBook ? Player.SpellBook.Spells : [];\n\n        let SpellSlots = [];\n\n        for (let i = 0; i < Utilities.NumberOfSpells; i++) {\n            if (!Spells || Spells.length <= i) {\n                SpellSlots.push(<ItemImage key={i} />);\n            } else {\n                SpellSlots.push(\n                    <ItemImage\n                        draggable={false}\n                        key={i}\n                        index={i <= 99 ? ('0' + Number(i + 1)).slice(-2) : i}\n                        showIndex\n                        image={(Spells[i] && Spells[i].Image) || null}\n                        name={(Spells[i] && Spells[i].Name) || null}\n                        item={Spells[i]}\n                        NoActionMenu\n                        onClick={this.props.CastSpell}\n                    />\n                );\n            }\n        }\n\n        return SpellSlots;\n    };\n\n    render() {\n        let { Styles, Player } = { ...this.props };\n\n        if (\n            !Player.Class.Spellcaster ||\n            !Player.SpellBook ||\n            Player.SpellBook.MaxSpells === 0\n        ) {\n            return null;\n        }\n        return (\n            <View\n                style={Styles.SpellBook}\n                hidden={\n                    this.props.MobileScreen ? this.props.HideSpellBook : false\n                }\n            >\n                <View\n                    style={Styles.SpellBookLabel}\n                    hidden={this.props.MobileScreen}\n                >\n                    <ToolTip\n                        ToolTip={Gameplay.Help.SpellBook}\n                        style={Styles.Inline}\n                    >\n                        Spellbook\n                    </ToolTip>\n                </View>\n                {this.DisplaySpellBook()}\n            </View>\n        );\n    }\n}\nexport const SpellBookContainer = connect(mapStateToProps)(SpellBook);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View } from './../components/Web';\nimport { ActionButtonContainer as Button } from './../components/Button';\nimport { ToolTipContainer as ToolTip } from './../components/ToolTip';\nimport { TextAreaContainer as TextArea } from './../components/Input';\nimport Gameplay from './../GameplayAssets';\n\nclass BottomControls extends Component {\n    render() {\n        let { Styles } = { ...this.props };\n        return <View style={Styles.BottomControls} />;\n    }\n}\nexport const BottomControlsContainer = connect(mapStateToProps)(BottomControls);\n\n/* game state manipulations (save/load) */\nclass GameStateOptions extends Component {\n    ToggleSaveGameStateBox = () => {\n        this.props.ToggleGameStateBox('Save');\n    };\n\n    ToggleLoadGameStateBox = () => {\n        this.props.ToggleGameStateBox('Load');\n    };\n\n    ToggleCancelGameStateBox = () => {\n        this.props.ToggleGameStateBox('Cancel');\n    };\n\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View style={Styles.GameState}>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.NewGame}\n                    style={Styles.Inline}\n                >\n                    <Button onClick={this.props.ShowCharacterScreen}>\n                        New Game\n                    </Button>\n                </ToolTip>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.SaveGame}\n                    style={Styles.Inline}\n                >\n                    <Button onClick={this.ToggleSaveGameStateBox}>\n                        Save Game\n                    </Button>\n                </ToolTip>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.LoadGame}\n                    style={Styles.Inline}\n                >\n                    <Button onClick={this.ToggleLoadGameStateBox}>\n                        Load Game\n                    </Button>\n                </ToolTip>\n                <Button\n                    onClick={this.ToggleCancelGameStateBox}\n                    hidden={!this.props.ShowGameStateBox}\n                >\n                    Close\n                </Button>\n            </View>\n        );\n    }\n}\nexport const GameStateOptionsContainer = connect(mapStateToProps)(\n    GameStateOptions\n);\n\nclass GameStateBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            IncludeStaticAssets: false,\n            GameState: this.GenerateSaveGameState(\n                { ...this.props.state },\n                false\n            )\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.ShowGameStateBox === true) {\n            if (\n                !this.props.EditableGameStateBox &&\n                nextProps.EditableGameStateBox\n            ) {\n                this.props.UpdateGameStateToLoad('');\n                this.setState({ GameState: '' });\n            } else if (\n                !nextProps.EditableGameStateBox &&\n                nextProps.state !== this.props.state\n            ) {\n                this.setState({\n                    GameState: this.GenerateSaveGameState({\n                        ...nextProps.state\n                    })\n                });\n            }\n        }\n    }\n\n    GenerateSaveGameState = (GameState, IncludeStaticAssets = null) => {\n        if (IncludeStaticAssets === null) {\n            IncludeStaticAssets = this.state.IncludeStaticAssets;\n        }\n\n        delete GameState.Keystrokes;\n        delete GameState.ShowGameStateBox;\n        delete GameState.EditableGameStateBox;\n        delete GameState.MobileScreen;\n        delete GameState.TabletScreen;\n        delete GameState.LoadGameError;\n        delete GameState.GameStateToLoad;\n        delete GameState.CreateCharacter;\n        delete GameState.RandomItems;\n\n        // remove debug state\n        delete GameState.ShowFullMap;\n        delete GameState.NoClip;\n        delete GameState.GodMode;\n        delete GameState.CastAlwaysSucceeds;\n\n        if (!IncludeStaticAssets) {\n            GameState = this.StripStaticAssets(GameState);\n        }\n\n        let DisplayState = JSON.stringify(GameState, null, `\\t`);\n\n        return DisplayState;\n    };\n\n    StripStaticAssets = GameState => {\n        // does nothing\n\n        return GameState;\n    };\n\n    ToggleSaveStaticAsset = () => {\n        let GameState = { ...this.props.state };\n        let IncludeStaticAssets = !this.state.IncludeStaticAssets;\n\n        this.setState({\n            GameState: this.GenerateSaveGameState(\n                GameState,\n                IncludeStaticAssets\n            ),\n            IncludeStaticAssets: IncludeStaticAssets\n        });\n    };\n\n    onChange = input => {\n        if (this.props.EditableGameStateBox) {\n            this.props.UpdateGameStateToLoad(input.value);\n            this.setState({ GameState: input.value });\n        }\n    };\n\n    onClick = input => {\n        if (!this.props.EditableGameStateBox) {\n            input.select();\n        }\n    };\n\n    render() {\n        let { Styles } = { ...this.props };\n        return (\n            <View\n                style={Styles.GameStateBoxContainer}\n                hidden={!this.props.ShowGameStateBox}\n            >\n                <View hidden={!this.props.EditableGameStateBox}>\n                    {this.props.LoadGameError}\n                </View>\n                <View hidden={this.props.EditableGameStateBox}>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.state.IncludeStaticAssets}\n                        onChange={this.ToggleSaveStaticAsset}\n                    />{' '}\n                    include static assets\n                </View>\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={\n                        this.props.EditableGameStateBox\n                            ? Gameplay.Help.GameStateBox.LoadGame\n                            : Gameplay.Help.GameStateBox.SaveGame\n                    }\n                    style={Styles.Inline}\n                >\n                    <TextArea\n                        readOnly={!this.props.EditableGameStateBox}\n                        style={{ ...Styles.GameStateBox }}\n                        onChange={this.onChange}\n                        onClick={this.onClick}\n                        value={this.state.GameState}\n                    />\n                </ToolTip>\n            </View>\n        );\n    }\n}\nexport const GameStateBoxContainer = connect(mapStateToProps)(GameStateBox);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { View, Text } from './Web';\nimport { ToolTipContainer as ToolTip } from './ToolTip';\n\nclass Slider extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Dragging: false,\n            Id: Math.floor(Math.random() * 99999999999)\n        };\n    }\n\n    onClick = input => {\n        input.preventDefault();\n\n        let State = { ...this.state };\n\n        let { style } = this.props;\n        let SliderWidth = style.width.replace('px', '');\n\n        this.props.onClick(\n            ((document.getElementById(this.state.Id).getBoundingClientRect().x -\n                input.clientX) /\n                SliderWidth) *\n                -1\n        );\n\n        delete State.x;\n        delete State.y;\n        State.Dragging = false;\n\n        this.setState(State);\n    };\n\n    onMouseDown = input => {\n        input.preventDefault();\n\n        if (!this.state.Dragging) {\n            this.setState({\n                Dragging: true,\n                x: input.clientX,\n                y: input.clientY\n            });\n        }\n\n        var that = this;\n        document.addEventListener('mouseup', that.onMouseUp);\n    };\n\n    onMouseUp = input => {\n        input.preventDefault();\n\n        let State = { ...this.state };\n\n        let {\n            style,\n            Percentage,\n            CurrentValue,\n            MaxValue,\n            MinValue\n        } = this.props;\n        let SliderWidth = style.width.replace('px', '');\n        let Ratio = Percentage\n            ? CurrentValue\n            : (CurrentValue - MinValue) / (MaxValue - MinValue);\n\n        this.props.onClick(\n            ((State.x - SliderWidth * Ratio - input.clientX) / SliderWidth) * -1\n        );\n\n        delete State.x;\n        delete State.y;\n        State.Dragging = false;\n\n        this.setState(State);\n\n        document.removeEventListener('mouseup', this.onMouseUp);\n    };\n\n    render() {\n        let {\n            Styles,\n            style,\n            Percentage,\n            CurrentValue,\n            MaxValue,\n            MinValue\n        } = this.props;\n        let SliderWidth = style.width.replace('px', '');\n        let CursorWidth =\n            Number(Styles.SliderCursor.width.replace('px', '')) +\n            Number(Styles.SliderCursor.border.replace(/[^0-9]/g, '') * 2);\n        let Ratio = Percentage\n            ? null\n            : (CurrentValue - MinValue) / (MaxValue - MinValue);\n        return (\n            <View style={style}>\n                <ToolTip\n                    FlexibleWidth\n                    DisabledOnClick\n                    ToolTip={\n                        <View>\n                            <View>\n                                {this.props.Metric ? (\n                                    <Text>{this.props.Metric}: </Text>\n                                ) : null}\n                                {this.props.Percentage\n                                    ? CurrentValue * 100 + '%'\n                                    : CurrentValue}\n                            </View>\n                            <View>{this.props.Description}</View>\n                        </View>\n                    }\n                >\n                    <View\n                        id={this.state.Id}\n                        onClick={this.onClick}\n                        onMouseDown={this.onMouseDown}\n                    >\n                        <View style={Styles.SliderTrack} />\n                        <View style={Styles.SliderInside} />\n                        <View\n                            style={{\n                                ...Styles.SliderCursor,\n                                left:\n                                    (SliderWidth - CursorWidth * 2) *\n                                        (Ratio || CurrentValue) +\n                                    CursorWidth / 2 +\n                                    'px'\n                            }}\n                        />\n                    </View>\n                </ToolTip>\n            </View>\n        );\n    }\n}\nexport const SliderContainer = connect(mapStateToProps)(Slider);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStateToProps from '../store/mapStateToProps';\nimport { SliderContainer as Slider } from './../components/Slider';\nimport { View } from './../components/Web';\nimport Gameplay from './../GameplayAssets';\n\nclass Volume extends Component {\n    onClick = NewValueRatio => {\n        this.props.dispatch({ type: 'UPDATE_VOLUME', Volume: NewValueRatio });\n    };\n\n    render() {\n        let Styles = { ...this.props.Styles };\n        let style = { ...Styles.Slider, ...Styles.VolumeSlider };\n        return (\n            <View style={Styles.VolumeControl}>\n                <View style={Styles.VolumeLabel}>Sound:</View>\n                <Slider\n                    Metric=\"Volume\"\n                    Description={Gameplay.Help.Sound}\n                    Percentage\n                    CurrentValue={this.props.Sound.Volume}\n                    onClick={this.onClick}\n                    style={style}\n                />\n            </View>\n        );\n    }\n}\nexport const VolumeContainer = connect(mapStateToProps)(Volume);\n","import React, { Component } from 'react';\n\nimport Gameplay from '../GameplayAssets';\nimport Utilities from '../Utilities';\n\nimport Functions from '../Functions';\n\n// Components\nimport { Text, View, Block } from '../components/Web';\nimport { ItemImageBlockContainer as ItemImage } from '../components/ItemImage';\nimport { ActionButtonContainer as Button } from '../components/Button';\nimport { ToolTipContainer as ToolTip } from '../components/ToolTip';\nimport {\n    ClearFloat,\n    ContactContainer as Contact,\n    HeaderContainer as Header\n} from '../components/Misc';\nimport {\n    TopBackgroundImageContainer as TopBackgroundImage,\n    BottomBackgroundImageContainer as BottomBackgroundImage,\n    GameStateBackgroundImageContainer as GameStateBackgroundImage\n} from '../components/BackgroundImages';\n\n// Containers\nimport {\n    EventLogContainer as EventLog,\n    ClearLogContainer as ClearLog\n} from '../containers/EventLog';\n\nimport { StoryContainer as Story } from '../containers/Story';\n\nimport { MapContainer as Map } from '../containers/Map';\n\nimport {\n    GearContainer as Gear,\n    PlayerNameAndWeaponsContainer as PlayerNameAndWeapons\n} from '../containers/GearAndWeapons';\n\nimport { PlayerVitalsContainer as PlayerVitals } from '../containers/PlayerVitals';\n\nimport { DirectionalArrows } from '../containers/DirectionalArrows';\n\nimport {\n    PlayerAbilitiesContainer as PlayerAbilities,\n    PlayerLevelAndArmorContainer as PlayerLevelAndArmor\n} from '../containers/Abilities';\n\nimport { InventoryContainer as Inventory } from '../containers/Inventory';\n\nimport { SpellBookContainer as SpellBook } from '../containers/SpellBook';\n\nimport {\n    BottomControlsContainer,\n    GameStateOptionsContainer as GameStateOptions,\n    GameStateBoxContainer as GameStateBox\n} from '../containers/SaveAndLoad';\n\nimport { VolumeContainer as Volume } from '../containers/Volume';\n\n/* utility */\n\nlet Debug =\n    process.env.REACT_APP_RELEASE === 'stable' ? false : Utilities.Debug;\n\n/* player actions */\n\nclass Rest extends Component {\n    render() {\n        return (\n            <View\n                style={this.props.Styles.Rest}\n                hidden={this.props.MobileScreen ? this.props.HideStats : false}\n            >\n                <ToolTip\n                    DisabledOnClick\n                    ToolTip={Gameplay.Help.Buttons.Rest}\n                    style={this.props.Styles.Inline}\n                >\n                    <Button>\n                        <View style={this.props.Styles.RestButton}>Rest</View>\n                    </Button>\n                </ToolTip>\n            </View>\n        );\n    }\n}\n\nclass ResponsiveTabSelector extends Component {\n    shouldComponentUpdate(NextProps) {\n        if (\n            NextProps.MobileScreen !== this.props.MobileScreen ||\n            NextProps.TabletScreen !== this.props.TabletScreen ||\n            NextProps.HideStats !== this.props.HideStats ||\n            NextProps.HideInventory !== this.props.HideInventory ||\n            NextProps.HideSpellBook !== this.props.HideSpellBook\n        ) {\n            if (Debug) console.log('re-render: mobile screen tab selector');\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <View\n                style={this.props.Styles.TabSelector}\n                hidden={!this.props.MobileScreen}\n            >\n                <View style={this.props.Styles.FlexBoxContainer}>\n                    <View style={this.props.Styles.TabButton}>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Stats}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Button\n                                StayClicked\n                                Clicked={!this.props.HideStats}\n                                onClick={this.props.ShowStats}\n                            >\n                                Stats\n                            </Button>\n                        </ToolTip>\n                    </View>\n                    <View style={this.props.Styles.TabButton}>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Backpack}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Button\n                                SmallPadding\n                                StayClicked\n                                Clicked={!this.props.HideInventory}\n                                onClick={this.props.ShowInventory}\n                            >\n                                Backpack\n                            </Button>\n                        </ToolTip>\n                    </View>\n                    <View style={this.props.Styles.TabButton}>\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.SpellBook}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Button\n                                SmallPadding\n                                StayClicked\n                                Clicked={!this.props.HideSpellBook}\n                                onClick={this.props.ShowSpellBook}\n                                hidden={!this.props.Player.Class.Spellcaster}\n                            >\n                                Spells\n                            </Button>\n                        </ToolTip>\n                    </View>\n                </View>\n            </View>\n        );\n    }\n}\n\nclass RepsonsiveStatsContainer extends Component {\n    render() {\n        return (\n            <View\n                style={this.props.Styles.ResponsiveStatsContainer}\n                hidden={!this.props.MobileScreen}\n            ></View>\n        );\n    }\n}\n\n/* player controls */\n\nclass Controls extends Component {\n    render() {\n        return (\n            <View style={this.props.Styles.ControlBlock}>\n                {this.props.children}\n            </View>\n        );\n    }\n}\n\n/* story and events */\n\n// single loot item\nclass Loot extends Component {\n    onClick = () => {\n        this.props.TakeSingleLoot(this.props.index, this.props.lootContainerId);\n    };\n\n    render() {\n        // let {item} = this.props\n        let item = { ...this.props.item };\n\n        return (\n            <ItemImage\n                onClick={this.onClick}\n                image={(item && item.image) || null}\n                name={(item && item.Name) || null}\n                item={item}\n                Loot\n                {...this.props}\n            />\n        );\n    }\n}\n\n// the loot found by the player\nclass LootList extends Component {\n    render() {\n        return (\n            <View>\n                <Block>\n                    {this.props.items &&\n                        this.props.items.map((item, index) => {\n                            return (\n                                <Loot\n                                    key={index}\n                                    index={index}\n                                    item={item}\n                                    lootContainerId={this.props.lootContainerId}\n                                    TakeSingleLoot={this.props.TakeSingleLoot}\n                                />\n                            );\n                        })}\n                </Block>\n            </View>\n        );\n    }\n}\n\n// some text that describes an event that has just occurred (\"you found a chest\")\nclass Event extends Component {\n    // no need to re-render event if it has not changed and the player has not taken the loot yet\n    shouldComponentUpdate(nextProps) {\n        if (\n            nextProps.MobileScreen !== this.props.MobileScreen ||\n            nextProps.TabletScreen !== this.props.TabletScreen ||\n            nextProps.currentEvent !== this.props.currentEvent ||\n            nextProps.Player !== this.props.Player\n        ) {\n            if (Debug) console.log('re-render: event');\n            return true;\n        }\n        return false;\n    }\n\n    GenerateEventText = () => {\n        // let {currentEvent, Player} = this.props\n        let currentEvent = Object.assign([], this.props.currentEvent);\n        let Player = Object.assign({}, this.props.Player);\n\n        let loot = false;\n        let lootIsEmpty = true;\n        let lootCount = 0;\n\n        let eventText = currentEvent.map((event, index) => {\n            if (event.eventType === 'loot') {\n                loot = true;\n\n                if (event.items.length === 0) {\n                    if (!Player.Stationary) {\n                        event.Name =\n                            'empty ' + event.Name.replace('empty ', '');\n                    }\n                } else {\n                    lootIsEmpty = false;\n                }\n\n                if (Player.Stationary && event.items.length === 0) {\n                    return (\n                        <Text key={index}>\n                            <Text>The </Text>\n                            <Text>{event.Name.replace('empty', '')}</Text>\n                            <Text> is empty.</Text>\n                            <ClearFloat />\n                        </Text>\n                    );\n                } else {\n                    lootCount += event.items.length;\n                    return (\n                        <Text key={index}>\n                            <Text>You found </Text>\n                            <Text>\n                                {Functions.IndefiniteArticle(event.Name)}\n                            </Text>\n                            <Text> </Text>\n                            <Text>{event.Name}</Text>\n                            <Text>.</Text>\n                            <LootList\n                                items={event.items}\n                                lootContainerId={event.Id}\n                                {...this.props}\n                            />\n                            <ClearFloat />\n                        </Text>\n                    );\n                }\n            } else {\n                console.warn('Unknown type of event.', event);\n            }\n            return null;\n        });\n\n        if (loot && !lootIsEmpty) {\n            if (lootCount === 1) {\n                eventText.push(\n                    <Block key=\"Take\">\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Buttons.Take}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Button onClick={this.props.TakeAllLoot}>\n                                Take\n                            </Button>\n                        </ToolTip>\n                    </Block>\n                );\n            } else {\n                eventText.push(\n                    <Block key=\"TakeAll\">\n                        <ToolTip\n                            DisabledOnClick\n                            ToolTip={Gameplay.Help.Buttons.Take}\n                            style={this.props.Styles.Inline}\n                        >\n                            <Button onClick={this.props.TakeAllLoot}>\n                                Take All\n                            </Button>\n                        </ToolTip>\n                    </Block>\n                );\n            }\n        }\n\n        return eventText;\n    };\n\n    render() {\n        return (\n            <View style={this.props.Styles.Event}>\n                {this.GenerateEventText()}\n            </View>\n        );\n    }\n}\n\nclass StoryBlock extends Component {\n    onClick = input => {\n        let HtmlElement = document.getElementById('Story');\n        let SeparatingLine = (HtmlElement.clientHeight / 10) * 4;\n        let Direction = 1;\n        if (\n            input.clientY - HtmlElement.getBoundingClientRect().y <\n            SeparatingLine\n        ) {\n            Direction = -1;\n        }\n        this.props.Scroll('Story', Direction);\n    };\n\n    render() {\n        return (\n            <View style={this.props.Styles.StoryBlock}>\n                <Block\n                    id=\"Story\"\n                    style={this.props.Styles.StoryContainer}\n                    onClick={this.onClick}\n                >\n                    {this.props.children}\n                </Block>\n            </View>\n        );\n    }\n}\n\nexport default props => {\n    return (\n        <View style={props.Styles.Game}>\n            {/* row 1 */}\n            <Header />\n            {/* row 2 */}\n            <Contact />\n            <TopBackgroundImage />\n            <EventLog {...props} />\n            <ClearLog {...props} />\n            {/* row 3 */}\n            <StoryBlock {...props}>\n                <Story />\n                <Event {...props} />\n            </StoryBlock>\n            <Map {...props} />\n            {/* row 4 */}\n            <BottomBackgroundImage />\n            <Controls {...props} />\n            <PlayerNameAndWeapons />\n            <PlayerVitals />\n            <DirectionalArrows {...props} />\n            <ResponsiveTabSelector {...props} />\n            <RepsonsiveStatsContainer {...props} />\n            <Rest {...props} />\n            <PlayerLevelAndArmor />\n            <PlayerAbilities />\n            <Inventory />\n            <SpellBook {...props} />\n            <Gear />\n            <BottomControlsContainer />\n            <GameStateBackgroundImage />\n            <GameStateOptions {...props} />\n            <GameStateBox {...props} />\n            <Volume />\n        </View>\n    );\n};\n","import React, { Component } from 'react';\nimport { Provider, connect } from 'react-redux';\nimport mapStateToProps from './store/mapStateToProps';\nimport Store from './store/Store';\n\nimport World from './WorldAssets';\nimport Campaign from './LegendsOfTheCatacombs';\nimport Gameplay from './GameplayAssets';\nimport Utilities from './Utilities';\n\nimport Functions from './Functions';\n\nimport CreateCharacter from './views/CreateCharacter';\nimport Play from './views/Play';\n\n/* utility */\n\nlet Debug =\n    process.env.REACT_APP_RELEASE === 'stable' ? false : Utilities.Debug;\nlet SoundDebug =\n    process.env.REACT_APP_RELEASE === 'stable' ? false : Utilities.SoundDebug;\n\nconst { Wall, Door, LootContainer, Undiscovered, Empty } = Utilities.MapObjects;\nlet WallMapVisibleRange = { ...Utilities.WallMapVisibleRange };\n\nlet MobileScreen = Utilities.ScreenSize.MobileScreen();\nlet TabletScreen = Utilities.ScreenSize.TabletScreen();\n\nlet NextAvailableId = {\n    Monsters: 0,\n    LootContainers: 0,\n    Items: 0\n};\n\nlet Styles = null;\n\nclass Game extends Component {\n    /* CSS */\n\n    CalculateStyles = () => {\n        MobileScreen = Utilities.ScreenSize.MobileScreen();\n        TabletScreen = Utilities.ScreenSize.TabletScreen();\n\n        if (\n            MobileScreen !== this.props.MobileScreen ||\n            TabletScreen !== this.props.TabletScreen\n        ) {\n            WallMapVisibleRange = MobileScreen\n                ? Utilities.WallMapVisibleRangeMobileScreen\n                : Utilities.WallMapVisibleRange;\n\n            /* presets */\n\n            // grid columns\n            const FirstColumn = 1;\n            const LastColumn = 10;\n\n            // grid rows\n            const StoryRowHeight = 245;\n\n            // various\n            const px = 'px';\n\n            const HUDPadding = 8;\n            const HUDBlockPadding = HUDPadding + px;\n            const HUDBlockPadding2 = HUDPadding / 2.5 + px;\n            const HUDBorder = '1px solid black';\n            const HUDStatBarHeight = '10px';\n\n            const ButtonNormalBackground =\n                'linear-gradient(135deg, #ccc 35%, #ddd 70%, #eee 100%)';\n            const ButtonHoverBackground =\n                'linear-gradient(135deg, #aaa 35%, #ccc 70%, #ccc 100%)';\n            const ButtonClickBackground =\n                'linear-gradient(135deg, #777 35%, #999 70%, #999 100%)';\n\n            // map\n            // tile size (might want to keep these)\n            const WallBoxWidth = 15;\n            const WallBoxHeight = 15;\n\n            // css borders of walls\n            const BorderThickness = 1.5;\n            const BorderColor = 'black';\n            const WallLine = BorderThickness + 'px solid ' + BorderColor;\n            const MapBackgroundColor = 'white';\n\n            // css drawing of pillars\n            const PillarBoxWidth = WallBoxWidth - 5;\n            const PillarBoxHeight = WallBoxHeight - 5;\n\n            // css drawing of walls\n            const WallBoxWidthWithBorder = WallBoxWidth - BorderThickness;\n            const WallBoxHeightWithBorder = WallBoxHeight - BorderThickness;\n            const WallBoxWidthCentered = WallBoxWidthWithBorder / 2;\n            const WallBoxHeightCentered = WallBoxHeightWithBorder / 2;\n\n            // css drawing of doors\n            const DoorLine =\n                Math.max(1, BorderThickness - BorderThickness / 2) +\n                'px solid ' +\n                BorderColor;\n            const DoorColor = 'lightsteelblue';\n            const DoorLongSize = 7;\n            const DoorBoxLongSizeCentered = DoorLongSize - 3;\n\n            /* responsiveness */\n\n            // grid rows\n            let TitleRow = 1;\n            let ContactRow = 2;\n            let MessageRow = 3;\n            let MainRow = 4;\n            let MapRow = MainRow;\n            let ControlRow = 5;\n            let ControlRow2 = 5;\n            let ControlRow3 = null;\n            let InventoryRow = 6;\n            let SpellBookRow = 7;\n            let AccessoriesStartRow = 6;\n            let AccessoriesStopRow = 8;\n            let BottomControlsRow = 9;\n            let VolumeRow = 9;\n            let GameStateRow = 10;\n\n            if (MobileScreen) {\n                TitleRow = 1;\n                ContactRow = 2;\n                MessageRow = 3;\n                MainRow = 4;\n                MapRow = 5;\n                ControlRow = 6;\n                ControlRow2 = 7;\n                ControlRow3 = 8;\n                InventoryRow = 9;\n                SpellBookRow = 10;\n                AccessoriesStartRow = 11;\n                AccessoriesStopRow = 12;\n                BottomControlsRow = 13;\n                VolumeRow = 14;\n                GameStateRow = 15;\n            }\n\n            // grid columns\n            let StoryStartColumn = FirstColumn;\n            let StoryEndColumn = 6;\n            let MapStartColumn = StoryEndColumn;\n            let MapEndColumn = LastColumn;\n\n            let ContactColumnStart = 5;\n            let ContactColumnStop = LastColumn;\n\n            let PlayerWeaponStartColumn = FirstColumn;\n            let PlayerWeaponStopColumn = 2;\n            let PlayerVitalsStartColumn = PlayerWeaponStopColumn;\n            let PlayerVitalsStopColumn = 3;\n            let DirectionalArrowStartColumn = PlayerVitalsStopColumn;\n            let DirectionalArrowStopColumn = 4;\n            let PlayerActionStartColumn = DirectionalArrowStopColumn;\n            let PlayerActionStopColumn = 6;\n\n            let PlayerStat2StartColumn = PlayerActionStopColumn;\n            let PlayerStat2StopColumn = 7;\n\n            let PlayerAttributesStartColumn = PlayerStat2StopColumn;\n            let PlayerAttributesBlockSeparation = PlayerAttributesStartColumn;\n            let PlayerAttributesStopColumn = LastColumn;\n\n            let InventoryStartColumn = FirstColumn;\n            let InventoryStopColumn = 7;\n\n            let SpellBookStartColumn = FirstColumn;\n            let SpellBookStopColumn = 7;\n\n            let AccessoriesStartColumn = 7;\n            let AccessoriesStopColumn = LastColumn;\n\n            if (MobileScreen) {\n                StoryStartColumn = FirstColumn;\n                StoryEndColumn = LastColumn;\n                MapStartColumn = FirstColumn;\n                MapEndColumn = LastColumn;\n\n                ContactColumnStart = FirstColumn;\n                ContactColumnStop = LastColumn;\n\n                PlayerWeaponStartColumn = FirstColumn;\n                PlayerWeaponStopColumn = 4;\n                PlayerVitalsStartColumn = PlayerWeaponStopColumn;\n                PlayerVitalsStopColumn = 7;\n                DirectionalArrowStartColumn = PlayerVitalsStopColumn;\n                DirectionalArrowStopColumn = 9;\n\n                PlayerActionStartColumn = FirstColumn;\n                PlayerActionStopColumn = 4;\n                PlayerAttributesStartColumn = PlayerActionStopColumn;\n                PlayerAttributesStopColumn = 4;\n                PlayerAttributesBlockSeparation = 7;\n                PlayerAttributesStopColumn = LastColumn;\n\n                InventoryStartColumn = FirstColumn;\n                InventoryStopColumn = LastColumn;\n\n                SpellBookStartColumn = FirstColumn;\n                SpellBookStopColumn = LastColumn;\n\n                AccessoriesStartColumn = FirstColumn;\n                AccessoriesStopColumn = LastColumn;\n            } else if (TabletScreen) {\n                PlayerVitalsStartColumn = PlayerWeaponStopColumn;\n                PlayerVitalsStopColumn = 4;\n                DirectionalArrowStartColumn = PlayerVitalsStopColumn;\n                DirectionalArrowStopColumn = 5;\n                PlayerActionStartColumn = DirectionalArrowStopColumn;\n                PlayerActionStopColumn = 6;\n                PlayerAttributesStartColumn = PlayerActionStopColumn;\n                PlayerAttributesBlockSeparation = 7;\n                PlayerAttributesStopColumn = LastColumn;\n            }\n\n            /* style object */\n\n            Styles = {\n                Hidden: {\n                    display: 'none'\n                },\n                // debug\n                Placeholder: {\n                    background: 'red',\n                    width: WallBoxWidth + px,\n                    height: WallBoxHeight + px\n                },\n                // multi-use\n                Paragraph: {\n                    display: 'block',\n                    paddingBottom: '13px'\n                },\n                FlexBoxContainer: {\n                    display: 'flex',\n                    justifyContent: 'center'\n                },\n                Inline: {\n                    display: 'inline'\n                },\n                // input fields\n                // default style\n                TextEdit: {\n                    border: 'none',\n                    padding: '5px',\n                    fontFamily: 'inherit',\n                    fontSize: 'inherit',\n                    width: '120px',\n                    background: 'transparent'\n                },\n                TextEditFocus: {\n                    border: 'none',\n                    padding: '5px',\n                    outline: 'none',\n                    fontFamily: 'inherit',\n                    fontSize: 'inherit',\n                    width: '120px',\n                    background: 'transparent'\n                },\n                // underline when focused\n                TextEditUnderline: {\n                    border: 'none',\n                    padding: '5px',\n                    fontFamily: 'inherit',\n                    fontSize: 'inherit',\n                    width: '120px',\n                    background: 'transparent'\n                },\n                TextEditUnderlineFocus: {\n                    border: 'none',\n                    padding: '5px',\n                    outline: 'none',\n                    fontFamily: 'inherit',\n                    fontSize: 'inherit',\n                    width: '120px',\n                    background: 'transparent',\n                    textDecoration: 'underline'\n                },\n                // Create Player Grid\n                CreatePlayer: {\n                    margin: '0 auto',\n                    width: MobileScreen\n                        ? '300px'\n                        : TabletScreen\n                        ? '675px'\n                        : '810px',\n                    userSelect: 'none',\n                    cursor: 'pointer',\n                    display: 'grid',\n                    gridTemplateColumns: MobileScreen\n                        ? // column1-10\n                          'repeat(9, 34.4px)'\n                        : TabletScreen\n                        ? // column1-10\n                          'repeat(9, 75px)'\n                        : // column1-10\n                          'repeat(9, 90px)',\n                    gridTemplateRows: 'auto auto auto'\n                },\n                CharacterHeader: {\n                    padding: HUDPadding,\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: 3\n                },\n                // Character Name and Vitals\n                CharacterCreateName: {\n                    padding: HUDPadding,\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: MobileScreen ? LastColumn : 4,\n                    gridRowStart: 4,\n                    display: 'grid',\n                    // subgrid\n                    gridTemplateRows: '23px 23px 23px 23px',\n                    gridTemplateColumns: MobileScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 31px)'\n                        : TabletScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 74.3px)'\n                        : // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 88.6px)'\n                },\n                CreateCharacterContainer: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: 3,\n                    gridRowEnd: 9,\n                    backgroundImage: 'url(graphics/hud/parchment.jpg)'\n                },\n                // Character Ability Scores\n                CharacterCreateView: {\n                    padding: HUDPadding,\n                    gridColumnStart: MobileScreen ? FirstColumn : 4,\n                    gridColumnEnd: MobileScreen ? LastColumn : 7,\n                    gridRowStart: MobileScreen ? 5 : 4,\n                    display: 'grid',\n                    // subgrid\n                    gridTemplateRows: '23px 23px 23px 23px',\n                    gridTemplateColumns: MobileScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 31px)'\n                        : TabletScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 74.3px)'\n                        : // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 88.6px)'\n                },\n                // Character Race and Class\n                CharacterCreateBackground: {\n                    padding: HUDPadding,\n                    gridColumnStart: MobileScreen ? FirstColumn : 6,\n                    gridColumnEnd: 10,\n                    gridRowStart: MobileScreen ? 6 : 4,\n                    display: 'grid',\n                    // subgrid\n                    gridTemplateRows: '32px 32px 32px',\n                    gridTemplateColumns: MobileScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 31px)'\n                        : TabletScreen\n                        ? // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 74.3px)'\n                        : // column1\n                          '100px ' +\n                          '130px ' +\n                          // column2-10\n                          'repeat(8, 88.6px)'\n                },\n                CreateCharacterDescription: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: MobileScreen ? 7 : 5,\n                    padding: HUDPadding,\n                    paddingTop: '20px',\n                    minHeight: '100px'\n                },\n                StartGame: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: 8,\n                    padding: HUDPadding,\n                    textAlign: 'right'\n                },\n                // Create Character: Label/Value Pairs\n                PropertyLabel: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: FirstColumn,\n                    padding: '2.5px',\n                    textAlign: 'right',\n                    marginRight: '10px'\n                },\n                PropertyLabelForInput: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: FirstColumn,\n                    paddingTop: '5px',\n                    textAlign: 'right',\n                    marginRight: '10px'\n                },\n                PropertyField: {\n                    gridColumnStart: 2,\n                    gridColumnEnd: 2,\n                    padding: '2.5px'\n                },\n                PropertyFieldForInput: {\n                    gridColumnStart: 2,\n                    gridColumnEnd: 2\n                },\n                RollAbilities: {\n                    gridColumnStart: 2\n                },\n                // In-Game Grid\n                Game: {\n                    margin: '0 auto',\n                    width: MobileScreen\n                        ? '270px'\n                        : TabletScreen\n                        ? '650px'\n                        : '790px',\n                    userSelect: 'none',\n                    cursor: 'pointer',\n                    display: 'grid',\n                    gridTemplateColumns: MobileScreen\n                        ? // column1-10\n                          'repeat(10, 29px)'\n                        : TabletScreen\n                        ? // column1\n                          '110px ' +\n                          // column2-4\n                          '40px ' +\n                          '50px ' +\n                          '70px ' +\n                          '70px ' +\n                          // column5\n                          '120px ' +\n                          // column 6\n                          '35px ' +\n                          // column7-10\n                          'repeat(3, 89px)'\n                        : // column1\n                          '110px ' +\n                          // column2-6\n                          'repeat(4, 91px) ' +\n                          // column7\n                          '132px ' +\n                          // column 8\n                          '30px ' +\n                          // column9-10\n                          'repeat(2, 86px)',\n                    gridTemplateRows: this.state.CreateCharacter\n                        ? null\n                        : // title (row1)\n                          'auto ' +\n                          // contact (row2)\n                          'auto ' +\n                          // event log (row3)\n                          'auto' +\n                          // story/map (row4)\n                          (this.state.CreateCharacter\n                              ? 'auto'\n                              : StoryRowHeight + px) +\n                          ' ' +\n                          // story (row5)\n                          (MobileScreen\n                              ? (StoryRowHeight * 1) / 2 + px + ' '\n                              : '') +\n                          // controls (row6a)\n                          'auto ' +\n                          // controls2 (row6b)\n                          (MobileScreen ? 'auto ' : '') +\n                          // controls3 (row6c)\n                          (MobileScreen ? 'auto ' : '') +\n                          // inventory (row7)\n                          'auto ' +\n                          // spell book (row8)\n                          'auto '\n                },\n                // page title\n                Header: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: TitleRow,\n                    textAlign: 'center',\n                    fontFamily: 'UnifrakturMaguntia, cursive',\n                    color: 'white'\n                },\n                H1: {\n                    margin: '0px',\n                    fontStyle: 'italic'\n                },\n                H2: {\n                    margin: '0px'\n                },\n                H3: {\n                    margin: '0px'\n                },\n                H4: {\n                    margin: '0px'\n                },\n                // links\n                Link: {\n                    color: 'inherit'\n                },\n                LinkHover: {\n                    color: 'inherit',\n                    textDecoration: 'none'\n                },\n                // Contact info\n                Contact: {\n                    gridColumnStart: ContactColumnStart,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: ContactRow,\n                    fontFamily: 'Indie Flower, cursive',\n                    textAlign: MobileScreen ? 'center' : 'right',\n                    paddingLeft: MobileScreen ? '30px' : null,\n                    color: 'white'\n                },\n                GitHubLogo: {\n                    height: '30px',\n                    verticalAlign: 'middle',\n                    marginLeft: '5px',\n                    backgroundColor: 'white',\n                    borderRadius: '25px'\n                },\n                // Game Background images\n                TopGameBackgroundImage: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: MessageRow,\n                    gridRowEnd: MapRow + 1,\n                    backgroundImage: 'url(graphics/hud/parchment.jpg)'\n                },\n                BottomGameBackgroundImage: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: ControlRow,\n                    gridRowEnd: VolumeRow + 1,\n                    backgroundImage: 'url(graphics/hud/metal.jpg)'\n                },\n                GameStateBackgroundImage: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: GameStateRow,\n                    backgroundImage: 'url(graphics/hud/parchment.jpg)'\n                },\n                // Top-screen Messages\n                EventLog: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: ContactColumnStop,\n                    gridRowStart: MessageRow,\n                    fontFamily: 'Indie Flower, cursive',\n                    fontWeight: 'bold',\n                    border: HUDBorder,\n                    padding: HUDBlockPadding,\n                    height:\n                        Number(\n                            18.5 *\n                                (MobileScreen\n                                    ? Utilities.ResponsiveMaxEventLogEntries\n                                    : Utilities.MaxEventLogEntries)\n                        ) + px\n                },\n                EventLogContainer: {\n                    maxHeight:\n                        Number(\n                            18.5 *\n                                (MobileScreen\n                                    ? Utilities.ResponsiveMaxEventLogEntries\n                                    : Utilities.MaxEventLogEntries)\n                        ) + px,\n                    overflow: 'auto',\n                    scrollBehavior: 'smooth'\n                },\n                CustomLogEntryInputContainer: {\n                    marginLeft: '42.5px'\n                },\n                ClearLog: {\n                    gridColumnStart: LastColumn - 2,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: MessageRow,\n                    textAlign: 'right',\n                    padding: HUDBlockPadding,\n                    paddingRight: '25px',\n                    zIndex: '1000',\n                    height: '18px'\n                },\n                // Story\n                StoryBlock: {\n                    gridColumnStart: StoryStartColumn,\n                    gridColumnEnd: StoryEndColumn,\n                    gridRowStart: MainRow,\n                    fontFamily: 'Indie Flower, cursive',\n                    userSelect: 'text',\n                    borderRight: HUDBorder,\n                    borderLeft: HUDBorder,\n                    padding: HUDBlockPadding\n                },\n                StoryContainer: {\n                    maxHeight: MobileScreen\n                        ? null\n                        : StoryRowHeight - HUDPadding * 2 + px,\n                    height: MobileScreen\n                        ? (StoryRowHeight * 1) / 2 - HUDPadding * 2 + px\n                        : null,\n                    overflow: 'auto',\n                    scrollBehavior: 'smooth'\n                },\n                Story: {\n                    userSelect: 'text'\n                },\n\n                Event: {\n                    userSelect: 'text'\n                },\n                // Map\n                Map: {\n                    gridColumnStart: MapStartColumn,\n                    gridColumnEnd: MapEndColumn,\n                    gridRowStart: MapRow,\n                    overflow: 'hidden',\n                    padding: HUDBlockPadding,\n                    borderRight: HUDBorder,\n                    borderTop: MobileScreen ? HUDBorder : null,\n                    // otherwise, the map will be distorted\n                    minWidth: MobileScreen ? null : '300px'\n                },\n                MapRow: {\n                    height: WallBoxHeight + px\n                },\n                MapObject: {\n                    display: 'inline-block',\n                    width: WallBoxWidth + px,\n                    height: WallBoxHeight + px\n                },\n                Player: {\n                    boxSizing: 'border-box',\n                    width: WallBoxWidth + px,\n                    height: WallBoxHeight + px,\n                    background: 'purple',\n                    borderRadius: '50%'\n                },\n                Loot: {\n                    boxSizing: 'border-box',\n                    margin: '1.5px',\n                    width: WallBoxWidth - 3 + px,\n                    height: WallBoxHeight - 3 + px,\n                    background: 'orange',\n                    borderRadius: '50%'\n                },\n                Monster: {\n                    boxSizing: 'border-box',\n                    margin: '1.5px',\n                    width: WallBoxWidth - 3 + px,\n                    height: WallBoxHeight - 3 + px,\n                    background: 'red',\n                    borderRadius: '50%'\n                },\n                Wall: {\n                    Pillar: {\n                        boxSizing: 'border-box',\n                        marginTop: (WallBoxHeight - PillarBoxHeight) / 2 + px,\n                        marginRight: (WallBoxWidth - PillarBoxWidth) / 2 + px,\n                        marginBottom:\n                            (WallBoxHeight - PillarBoxHeight) / 2 + px,\n                        marginLeft: (WallBoxWidth - PillarBoxWidth) / 2 + px,\n                        width: PillarBoxWidth + px,\n                        height: PillarBoxHeight + px,\n                        background: 'black'\n                    },\n                    // Continous Walls\n                    NorthToSouth: {\n                        boxSizing: 'border-box',\n                        borderLeft: WallLine,\n                        marginLeft: WallBoxWidthCentered + px,\n                        width: BorderThickness + px,\n                        height: WallBoxHeight + px\n                    },\n                    WestToEast: {\n                        boxSizing: 'border-box',\n                        borderTop: WallLine,\n                        marginTop: WallBoxHeightCentered + px,\n                        width: WallBoxWidth + px,\n                        height: BorderThickness + px\n                    },\n                    NorthToEast: {\n                        boxSizing: 'border-box',\n                        borderLeft: WallLine,\n                        borderBottom: WallLine,\n                        marginLeft: WallBoxHeightCentered + px,\n                        width: WallBoxWidthCentered + BorderThickness + px,\n                        height: WallBoxHeightCentered + BorderThickness + px\n                    },\n                    NorthToWest: {\n                        boxSizing: 'border-box',\n                        borderRight: WallLine,\n                        borderBottom: WallLine,\n                        marginRight: WallBoxHeightCentered + px,\n                        width: WallBoxWidthCentered + BorderThickness + px,\n                        height: WallBoxHeightCentered + BorderThickness + px\n                    },\n                    SouthToEast: {\n                        boxSizing: 'border-box',\n                        borderLeft: WallLine,\n                        borderTop: WallLine,\n                        marginTop: WallBoxHeightCentered + px,\n                        marginLeft: WallBoxHeightCentered + px,\n                        width: WallBoxWidthCentered + BorderThickness + px,\n                        height: WallBoxHeightCentered + BorderThickness + px\n                    },\n                    SouthToWest: {\n                        boxSizing: 'border-box',\n                        borderRight: WallLine,\n                        borderTop: WallLine,\n                        marginTop: WallBoxHeightCentered + px,\n                        marginRight: WallBoxHeightCentered + px,\n                        width: WallBoxWidthCentered + BorderThickness + px,\n                        height: WallBoxHeightCentered + BorderThickness + px\n                    },\n                    // T-shaped walls\n                    TShapedWallNSE: {\n                        boxSizing: 'border-box',\n                        background: BorderColor,\n                        marginLeft: WallBoxHeightCentered + px\n                    },\n                    NorthSouthAndEast: {\n                        boxSizing: 'border-box',\n                        borderTop:\n                            WallBoxWidthCentered +\n                            'px solid ' +\n                            MapBackgroundColor,\n                        borderBottom:\n                            WallBoxWidthCentered +\n                            'px solid ' +\n                            MapBackgroundColor,\n                        marginLeft: BorderThickness + px,\n                        width: WallBoxWidthCentered + BorderThickness + px,\n                        height: WallBoxHeight + px,\n                        background: BorderColor\n                    },\n                    TShapedWallNSW: {\n                        boxSizing: 'border-box',\n                        background: BorderColor,\n                        marginRight: WallBoxHeightCentered + px\n                    },\n                    NorthSouthAndWest: {\n                        boxSizing: 'border-box',\n                        borderTop:\n                            WallBoxWidthCentered +\n                            'px solid ' +\n                            MapBackgroundColor,\n                        borderBottom:\n                            WallBoxWidthCentered +\n                            'px solid ' +\n                            MapBackgroundColor,\n                        width: WallBoxWidthCentered + px,\n                        height: WallBoxHeight + px,\n                        background: BorderColor\n                    }\n                },\n                Door: {\n                    NorthToSouth: {\n                        boxSizing: 'border-box',\n                        border: DoorLine,\n                        marginLeft: DoorBoxLongSizeCentered + px,\n                        width: DoorLongSize + px,\n                        height: WallBoxHeight + px,\n                        background: DoorColor\n                    },\n                    WestToEast: {\n                        boxSizing: 'border-box',\n                        border: DoorLine,\n                        marginTop: DoorBoxLongSizeCentered + px,\n                        width: WallBoxHeight + px,\n                        height: DoorLongSize + px,\n                        background: DoorColor\n                    }\n                },\n                // Various Player Controls\n                ControlBlock: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: ControlRow,\n                    gridRowEnd: ControlRow2 + 1,\n                    borderTop: HUDBorder\n                },\n                // Name and Ready Weapons\n                PlayerStats0: {\n                    gridColumnStart: PlayerWeaponStartColumn,\n                    gridColumnEnd: PlayerWeaponStopColumn,\n                    gridRowStart: ControlRow,\n                    padding: HUDBlockPadding,\n                    textAlign: 'center',\n                    color: 'white'\n                },\n                // Player Vital Stats\n                PlayerVitals: {\n                    gridColumnStart: PlayerVitalsStartColumn,\n                    gridColumnEnd: PlayerVitalsStopColumn,\n                    gridRowStart: ControlRow,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                // Directional Arrows\n                ArrowContainer: {\n                    gridColumnStart: DirectionalArrowStartColumn,\n                    gridColumnEnd: DirectionalArrowStopColumn,\n                    gridRowStart: ControlRow,\n                    textAlign: 'center',\n                    padding: HUDBlockPadding,\n                    margin: 'auto'\n                },\n                Rest: {\n                    gridColumnStart: PlayerActionStartColumn,\n                    gridColumnEnd: PlayerActionStopColumn,\n                    gridRowStart: MobileScreen ? ControlRow3 : ControlRow2,\n                    padding: HUDBlockPadding,\n                    margin: 'auto',\n                    marginTop: '25px'\n                },\n                PlayerAttributesStacked: {\n                    gridColumnStart: PlayerAttributesStartColumn,\n                    gridColumnEnd: PlayerAttributesStopColumn,\n                    gridRowStart: ControlRow2,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                TabSelector: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: ControlRow2,\n                    margin: 'auto'\n                },\n                TabButton: {\n                    flexGrow: '1',\n                    flexBasis: 'auto',\n                    textAlign: 'center',\n                    margin: 'auto'\n                },\n                ResponsiveStatsContainer: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: ControlRow3\n                },\n                PlayerStats2Block1: {\n                    gridColumnStart: PlayerAttributesStartColumn,\n                    gridColumnEnd: PlayerAttributesBlockSeparation,\n                    gridRowStart: MobileScreen ? ControlRow3 : ControlRow2,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                PlayerStats2Block2: {\n                    gridColumnStart: PlayerAttributesBlockSeparation,\n                    gridColumnEnd: PlayerAttributesStopColumn,\n                    gridRowStart: MobileScreen ? ControlRow3 : ControlRow2,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                PlayerStats3: {\n                    gridColumnStart: PlayerStat2StartColumn,\n                    gridColumnEnd: PlayerStat2StopColumn,\n                    gridRowStart: MobileScreen ? ControlRow3 : ControlRow2,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                PlayerStat: {\n                    paddingBottom: '5px'\n                },\n                // Weapons At Hand\n                ReadyItemBlock: {\n                    paddingTop: '8px',\n                    height: 'calc(100% - 18px)'\n                },\n                ReadyItem: {\n                    display: 'inline-block'\n                },\n                // Player Stat Bars\n                StatBar: {\n                    boxSizing: 'border-box',\n                    width: '100%',\n                    height: '14px',\n                    padding: '1px',\n                    border: '1px solid #555',\n                    background:\n                        'linear-gradient(135deg, dimgray 35%, gray 70%, #aaa 100%)',\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                HealthBar: {\n                    background:\n                        'linear-gradient(0deg, red 50%, lightgray 100%)',\n                    height: HUDStatBarHeight\n                },\n                ManaBar: {\n                    background:\n                        'linear-gradient(0deg, blue 50%, lightgray 100%)',\n                    height: HUDStatBarHeight\n                },\n                StaminaBar: {\n                    background:\n                        'linear-gradient(0deg, green 50%, lightgray 100%)',\n                    height: HUDStatBarHeight\n                },\n                // Directional Arrows\n                ArrowRow: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    width: '72px'\n                },\n                ArrowBlock: {\n                    display: 'inline-block',\n                    width: '32px',\n                    height: '21.5px',\n                    textAlign: 'center',\n                    border: '1px solid #333',\n                    paddingTop: '3px',\n                    margin: '1px',\n                    background: ButtonNormalBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ArrowBlockHover: {\n                    display: 'inline-block',\n                    width: '32px',\n                    height: '21.5px',\n                    textAlign: 'center',\n                    border: '1px solid #333',\n                    paddingTop: '3px',\n                    margin: '1px',\n                    background: ButtonHoverBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ArrowBlockClick: {\n                    display: 'inline-block',\n                    width: '32px',\n                    height: '21.5px',\n                    textAlign: 'center',\n                    border: '1px solid #333',\n                    paddingTop: '3px',\n                    margin: '1px',\n                    background: ButtonClickBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                // Actions\n                ActionButton: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 20px 3px 20px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonNormalBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ActionButtonSmallPadding: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 10px 3px 10px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonNormalBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ActionButtonHover: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 20px 3px 20px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonHoverBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ActionButtonHoverSmallPadding: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 10px 3px 10px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonHoverBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ActionButtonClick: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 20px 3px 20px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonClickBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ActionButtonClickSmallPadding: {\n                    fontFamily: 'MedievalSharp, cursive',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                    border: '1px solid black',\n                    padding: '3px 10px 3px 10px',\n                    margin: '1px',\n                    userSelect: 'none',\n                    background: ButtonClickBackground,\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                // Inventory\n                Inventory: {\n                    gridColumnStart: InventoryStartColumn,\n                    gridColumnEnd: InventoryStopColumn,\n                    gridRowStart: InventoryRow,\n                    padding: HUDBlockPadding2,\n                    color: 'white'\n                },\n\n                InventoryLabel: {\n                    marginBottom: HUDBlockPadding2\n                },\n                InventoryWeightLabel: {\n                    marginBottom: HUDBlockPadding2\n                },\n                // SpellBook\n                SpellBook: {\n                    gridColumnStart: SpellBookStartColumn,\n                    gridColumnEnd: SpellBookStopColumn,\n                    gridRowStart: SpellBookRow,\n                    borderLeft: HUDBorder,\n                    padding: HUDBlockPadding2,\n                    color: 'white'\n                },\n                SpellBookLabel: {\n                    marginBottom: HUDBlockPadding2\n                },\n                // Accessories\n                Accessories: {\n                    gridColumnStart: AccessoriesStartColumn,\n                    gridColumnEnd: AccessoriesStopColumn,\n                    gridRowStart: AccessoriesStartRow,\n                    gridRowEnd: AccessoriesStopRow,\n                    padding: HUDBlockPadding\n                },\n                // Game settings\n                BottomControls: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: VolumeRow,\n                    padding: HUDBlockPadding\n                },\n                GameState: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: MobileScreen ? LastColumn : 7,\n                    gridRowStart: BottomControlsRow,\n                    padding: HUDBlockPadding,\n                    textAlign: MobileScreen ? 'center' : null\n                },\n                GameStateBoxContainer: {\n                    gridColumnStart: FirstColumn,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: GameStateRow,\n                    fontFamily: 'Indie Flower, cursive',\n                    padding: HUDBlockPadding,\n                    borderTop: '1px solid black',\n                    color: 'black',\n                    fontWeight: 'bold'\n                },\n                GameStateBox: {\n                    fontFamily: 'Indie Flower, cursive',\n                    width: '100%',\n                    height: '500px',\n                    cursor: 'pointer',\n                    outline: 'none',\n                    background: 'transparent',\n                    color: 'white',\n                    border: 'none'\n                },\n                // Volume\n                VolumeControl: {\n                    gridColumnStart: MobileScreen ? FirstColumn : 7,\n                    gridColumnEnd: LastColumn,\n                    gridRowStart: VolumeRow,\n                    padding: HUDBlockPadding,\n                    color: 'white'\n                },\n                VolumeLabel: {\n                    display: 'inline-block',\n                    margin: '1px',\n                    textAlign: 'right',\n                    width: '60px'\n                },\n                VolumeSlider: {\n                    float: 'right',\n                    width: '120px'\n                },\n                // Sliders\n                Slider: {\n                    display: 'block',\n                    height: '22px'\n                },\n                SliderTrack: {\n                    position: 'relative',\n                    top: '8px',\n                    margin: 'auto',\n                    width: 'calc(100% - 4px)',\n                    height: '4px',\n                    border: '1px solid black',\n                    background:\n                        'linear-gradient(90deg, lightgray 0%, dimgray 100%)',\n                    borderRadius: '2px'\n                },\n                SliderInside: {\n                    position: 'relative',\n                    top: '4px',\n                    margin: 'auto',\n                    width: 'calc(100% - 8px)',\n                    height: '2px',\n                    background: 'linear-gradient(90deg, #999 0%, #555 100%)',\n                    borderRadius: '2px'\n                },\n                SliderCursor: {\n                    position: 'relative',\n                    top: '-7.5px',\n                    height: '19px',\n                    width: '8px',\n                    border: '1px solid black',\n                    background:\n                        'linear-gradient(135deg, dimgray 0%, lightgray 100%)',\n                    borderRadius: '4px'\n                },\n                // Item Image\n                ItemImageBlock: {\n                    height: '32px',\n                    width: '32px',\n                    border: '1px solid #666',\n                    margin: '1px',\n                    textAlign: 'center',\n                    float: 'left',\n                    background:\n                        'linear-gradient(135deg, #999 35%, #aaa 60%, lightgray 100%)',\n                    boxShadow: 'inset 0 0 10px gray'\n                },\n                ItemImageBlockClick: {\n                    position: 'fixed',\n                    height: '32px',\n                    width: '32px',\n                    background: '#333',\n                    opacity: '0.5'\n                },\n                ItemImageBlockNumber: {\n                    color: 'black',\n                    background: 'white',\n                    width: '15px',\n                    // webkitTextStroke: \"0.25px black\",\n                    fontSize: '10px',\n                    position: 'relative',\n                    top: -15,\n                    right: -16,\n                    // webkitTextStroke: \"0.5px black\",\n                    fontFamily: 'VT323, monospace'\n                },\n                ItemImage: {\n                    maxHeight: '30px',\n                    // maxWidth: \"30px\",\n                    width: '30px',\n                    padding: '1px',\n                    // placeholder style when asset is missing\n                    overflow: 'hidden',\n                    fontSize: '10px'\n                },\n                ItemDescription: {\n                    zIndex: '900',\n                    position: 'absolute',\n                    background: '#999',\n                    border: '1px solid #666',\n                    padding: '5px',\n                    maxWidth: '200px',\n                    textAlign: 'left',\n                    opacity: '0.85',\n                    color: 'white'\n                },\n                ItemDescriptionName: {\n                    fontWeight: 'bold',\n                    textTransform: 'capitalize'\n                },\n                ItemDescriptionContent: {\n                    paddingTop: '5px'\n                },\n                ItemActions: {\n                    zIndex: '800',\n                    position: 'absolute',\n                    background: '#999',\n                    border: '1px solid #666',\n                    padding: '5px',\n                    minWidth: '90px',\n                    textAlign: 'left',\n                    opacity: '0.85',\n                    color: 'white'\n                },\n                ItemAction: {\n                    paddingTop: '2.5px',\n                    paddingBottom: '2.5px',\n                    paddingLeft: '2.5px',\n                    paddingRight: '2.5px'\n                },\n                ItemActionHover: {\n                    paddingTop: '2.5px',\n                    paddingBottom: '2.5px',\n                    paddingLeft: '2.5px',\n                    paddingRight: '2.5px',\n                    background: '#777'\n                },\n                ToolTipFlexibleWidth: {\n                    zIndex: '900',\n                    position: 'absolute',\n                    background: '#999',\n                    border: '1px solid #666',\n                    padding: '5px',\n                    maxWidth: '200px',\n                    textAlign: 'left',\n                    opacity: '0.85',\n                    color: 'white',\n                    fontFamily: 'initial',\n                    fontWeight: 'normal'\n                },\n                ToolTip: {\n                    zIndex: '900',\n                    position: 'absolute',\n                    background: '#999',\n                    border: '1px solid #666',\n                    padding: '5px',\n                    width: '200px',\n                    textAlign: 'left',\n                    opacity: '0.85',\n                    color: 'white',\n                    fontFamily: 'initial',\n                    fontWeight: 'normal'\n                }\n            };\n\n            // Odd-shaped walls\n            Styles.Wall.NorthWestEastAndNorthWest = Styles.Wall.WestToEast;\n            Styles.Wall.NorthSouthEastAndSouthEast = Styles.Wall.NorthToEast;\n\n            this.setState(\n                {\n                    MobileScreen: MobileScreen,\n                    TabletScreen: TabletScreen\n                },\n                this.forceUpdate()\n            );\n\n            this.props.dispatch({\n                type: 'UPDATE_SCREEN_SIZE',\n                MobileScreen: MobileScreen,\n                TabletScreen: TabletScreen\n            });\n            this.props.dispatch({ type: 'UPDATE_STYLES', Styles });\n        }\n    };\n\n    /* Global Event Listeners */\n\n    componentWillMount() {\n        // keyboard shortcuts\n        document.addEventListener('keydown', this.ListenToKeyboard, false);\n        // responsiveness\n        window.addEventListener('resize', this.CalculateStyles, false);\n        this.CalculateStyles();\n        this.ShowStats();\n    }\n\n    componentDidMount() {\n        let State = { ...this.state };\n        let DebugEventMessages = [];\n\n        if (Debug) {\n            DebugEventMessages.push(Gameplay.Messages.Debug.On);\n        }\n        if (SoundDebug) {\n            DebugEventMessages.push(Gameplay.Messages.SoundDebug.On);\n        }\n        if (State.ShowFullMap) {\n            DebugEventMessages.push(\n                Gameplay.Messages.Cheats.ShowFullMap.On +\n                    (Debug ? ' ShowFullMap is ON.' : '')\n            );\n        }\n        if (State.NoClip) {\n            DebugEventMessages.push(\n                Gameplay.Messages.Cheats.NoClip.On +\n                    (Debug ? ' NoClip is ON.' : '')\n            );\n        }\n        if (State.GodMode) {\n            DebugEventMessages.push(\n                Gameplay.Messages.Cheats.GodMode.On +\n                    (Debug ? ' GodMode is ON.' : '')\n            );\n        }\n        if (State.CastAlwaysSucceeds) {\n            DebugEventMessages.push(\n                Gameplay.Messages.Cheats.CastAlwaysSucceeds.On +\n                    (Debug ? ' CastAlwaysSucceeds is ON.' : '')\n            );\n        }\n        this.SetText(DebugEventMessages);\n    }\n\n    /* Init Game State */\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...this.InitGameEnvironment(true),\n            HideInventory: true,\n            HideSpellBook: true,\n            HideStats: false\n        };\n    }\n\n    /* Init Game Environment */\n\n    GenerateFormattedDate = TimeInMilliseconds => {\n        return [\n            [\n                TimeInMilliseconds.getFullYear(),\n                TimeInMilliseconds.getMonth() + 1,\n                TimeInMilliseconds.getDate()\n            ].join('-'),\n            [\n                this.PadNumber(TimeInMilliseconds.getHours()),\n                this.PadNumber(TimeInMilliseconds.getMinutes())\n            ].join(':')\n        ].join(' ');\n    };\n\n    GenerateFormattedTime = TimeInMilliseconds => {\n        let Time = new Date(TimeInMilliseconds);\n        return [\n            this.PadNumber(Time.getMinutes(), 3),\n            this.PadNumber(Time.getSeconds(), 3)\n        ].join(':');\n    };\n\n    PadNumber = NumberToPad => {\n        if (NumberToPad < 10) {\n            return '0' + NumberToPad;\n        } else {\n            return NumberToPad;\n        }\n    };\n\n    GenerateIds = (ArrayToId, IdType) => {\n        let ArrayWithIds = [...ArrayToId];\n        return ArrayWithIds.map((ArrayElement, index) => {\n            if (!NextAvailableId[IdType]) {\n                NextAvailableId[IdType] = 0;\n            }\n            ArrayElement.Id = NextAvailableId[IdType]++;\n\n            return ArrayElement;\n        });\n    };\n\n    InitGameEnvironment = (InitPlayer = false) => {\n        // Deactivate cheats at startup in production\n        let Cheats = { ...Utilities.Cheats };\n        if (process.env.REACT_APP_RELEASE === 'stable') {\n            Object.keys(Utilities.Cheats).map(Key => {\n                Cheats[Key] = false;\n                return null;\n            });\n        }\n\n        // Campaign assets\n        let InitState = {\n            Player: { ...Campaign.Player },\n            Backpack: { ...Campaign.Backpack },\n            AvailableStartSpell: [...Campaign.AvailableStartSpell],\n            LootContainers: this.GenerateIds(\n                [...Campaign.LootContainers],\n                'LootContainers'\n            ),\n            Monsters: this.GenerateIds([...Campaign.Monsters], 'Monsters'),\n            Texts: [...Campaign.Text],\n            WallMap: [...Campaign.WallMap],\n            GameStarted: {\n                Milliseconds: Date.now(),\n                HumanFriendly: this.GenerateFormattedDate(new Date())\n            },\n            EnterCustomLogEntry: false,\n            Cheats: Cheats\n        };\n\n        // let the player go to the main screen if their character is stored in the state already\n        if (InitPlayer) {\n            InitState.CreateCharacter =\n                process.env.REACT_APP_RELEASE === 'stable'\n                    ? Campaign.CreateCharacter\n                    : Debug\n                    ? Utilities.DebugCreateCharacter\n                    : Campaign.CreateCharacter;\n        }\n\n        // Force startup with an empty backpack\n        if (process.env.REACT_APP_RELEASE === 'stable') {\n            InitState.Backpack.Items = [];\n        }\n\n        // Items\n        // create the list of random items to draw from when looting, grouped by level\n        InitState.RandomItems = {};\n\n        Object.keys(World.Items).map(itemObjectName => {\n            let item = World.Items[itemObjectName];\n            if (InitState.RandomItems['Level' + item.Level] === undefined) {\n                InitState.RandomItems['Level' + item.Level] = [];\n            }\n            InitState.RandomItems['Level' + item.Level].push(item);\n            return null;\n        });\n\n        // Character\n        if (InitPlayer) {\n            let Player = { ...InitState.Player };\n            InitState.Player = this.CreateCharacter(Player);\n        }\n\n        // Character's Backpack\n        InitState.Backpack = this.CheckInventoryWeightAtStartUp(\n            InitState.Backpack\n        );\n        InitState.Backpack.Items = this.GenerateIds(\n            [...InitState.Backpack.Items],\n            'Items'\n        );\n        InitState.Player.Backpack = { ...InitState.Backpack };\n        InitState.Player.Backpack.Weight = {\n            Current: InitState.Player.Backpack.Weight,\n            Max: InitState.Player.MaxWeight\n        };\n        InitState.Player.Backpack.ItemCount.Current =\n            InitState.Player.Backpack.Items.length;\n\n        // Maps\n        // create the dynamic \"revealed area\" map as displayed in the HUD\n        InitState.WallMapRevealed = Campaign.WallMap.map(HorizontalLine =>\n            HorizontalLine.map(x => ' ')\n        );\n\n        // create internal discovery map, given player start position\n        InitState.DiscoveryMap = JSON.parse(\n            JSON.stringify(\n                Campaign.WallMap.map((HorizontalLine, y) =>\n                    HorizontalLine.map((MapObject, x) => {\n                        if (\n                            x >= InitState.Player.x - 1 &&\n                            x <= InitState.Player.x + 1 &&\n                            y >= InitState.Player.y - 1 &&\n                            y <= InitState.Player.y + 1\n                        ) {\n                            return Empty;\n                        } else {\n                            return Undiscovered;\n                        }\n                    })\n                )\n            )\n        );\n\n        // create the internal map of loot containers\n        let LootMap = JSON.parse(\n            JSON.stringify(\n                Campaign.WallMap.map(HorizontalLine =>\n                    HorizontalLine.map(x => ' ')\n                )\n            )\n        );\n\n        if (InitState.LootContainers) {\n            InitState.LootContainers = InitState.LootContainers.map(\n                Container => {\n                    if (Container.x && Container.y) {\n                        LootMap[Container.y][Container.x] = LootContainer;\n                    }\n                    // give ids to the loot container items\n                    if (Container.items) {\n                        Container.items = this.GenerateIds(\n                            [...Container.items],\n                            'Items'\n                        );\n                    }\n                    return Container;\n                }\n            );\n        }\n\n        InitState.LootMap = LootMap;\n\n        // create the internal map of monster locations\n        let MonsterMap = JSON.parse(\n            JSON.stringify(\n                Campaign.WallMap.map(HorizontalLine =>\n                    HorizontalLine.map(x => ' ')\n                )\n            )\n        );\n\n        if (Campaign.Monsters) {\n            Campaign.Monsters.map(Monster => {\n                MonsterMap[Monster.y][Monster.x] = Monster.Id;\n                return null;\n            });\n        }\n\n        InitState.MonsterMap = MonsterMap;\n\n        // Story\n        // these two are deprecated\n        InitState.currentText = Campaign.StartText\n            ? Campaign.StartText.text\n            : null;\n        InitState.currentTextImage = null;\n        // text displayed at the beginning of the campaign\n        InitState.Story = {\n            Text: Campaign.StartText ? Campaign.StartText.text : null,\n            Image: Campaign.StartText ? Campaign.StartText.image : null\n        };\n\n        // Event Log\n        InitState.EventLog = ['00:00: ' + Gameplay.Messages.NewGame];\n\n        // Turn\n        InitState.Turn = 0;\n\n        // Sound\n        if ((Debug || SoundDebug) && Utilities.DebugVolume !== undefined) {\n            InitState.Sound = {\n                Volume: Utilities.DebugVolume\n            };\n            InitState.EventLog.push(\n                '00:00: Debug volume is ' + Utilities.DebugVolume + '.'\n            );\n        } else {\n            InitState.Sound = {\n                Volume: Utilities.DefaultSoundVolume || 0.3\n            };\n        }\n\n        this.props.dispatch({\n            type: 'UPDATE_PLAYER',\n            Player: InitState.Player\n        });\n        this.props.dispatch({\n            type: 'UPDATE_MONSTERS',\n            Monsters: InitState.Monsters\n        });\n        this.props.dispatch({\n            type: 'UPDATE_CHEATS',\n            Cheats: InitState.Cheats\n        });\n        this.props.dispatch({\n            type: 'UPDATE_EVENT_LOG',\n            EventLog: InitState.EventLog\n        });\n        this.props.dispatch({ type: 'UPDATE_STORY', Story: InitState.Story });\n        this.props.dispatch({ type: 'UPDATE_TEXTS', Texts: InitState.Texts });\n        this.props.dispatch({ type: 'UPDATE_SOUND', Sound: InitState.Sound });\n        this.props.dispatch({\n            type: 'UPDATE_MAPS',\n            WallMap: InitState.WallMap,\n            WallMapRevealed: InitState.WallMapRevealed,\n            DiscoveryMap: InitState.DiscoveryMap,\n            LootMap: InitState.LootMap,\n            MonsterMap: InitState.MonsterMap\n        });\n        this.props.dispatch({\n            type: 'UPDATE_LOOT',\n            LootContainers: InitState.LootContainers\n        });\n        this.props.dispatch({ type: 'UPDATE_TURN', Turn: 0 });\n        this.props.dispatch({\n            type: 'ADD_TIMESTAMP',\n            Milliseconds: InitState.GameStarted.Milliseconds,\n            HumanFriendly: InitState.GameStarted.HumanFriendly\n        });\n        this.props.dispatch({\n            type: 'UPDATE_DEBUG',\n            Debug: Utilities.Debug,\n            SoundDebug: Utilities.SoundDebug\n        });\n        this.props.dispatch({\n            type: 'UPDATE_SCREEN_SIZE',\n            MobileScreen: MobileScreen,\n            TabletScreen: TabletScreen\n        });\n\n        return InitState;\n    };\n\n    /* Character Creation */\n\n    ShowCharacterScreen = () => {\n        this.setState(\n            { CreateCharacter: true, GameInBackground: this.state },\n            function () {\n                let Player = this.CreateCharacter();\n                this.setState({ Player: Player }, function () {\n                    this.CalculateStyles();\n                    this.forceUpdate();\n                });\n            }\n        );\n    };\n\n    GeneratePlayerStats = () => {\n        let Player = { ...this.state.Player };\n        Player = this.CreateCharacter(Player);\n        this.setState({ Player: Player });\n    };\n\n    CreateCharacter = Player => {\n        if (!Player) {\n            Player = { ...Campaign.Player };\n        }\n\n        if (Campaign.Player.Race) {\n            Player.Race = { ...Campaign.Player.Race };\n        } else {\n            if (!Player.Race) {\n                Player.Race = {\n                    ...World.Races[Object.keys(World.Races)[2]],\n                    Id: Object.keys(World.Races)[2]\n                };\n            }\n        }\n\n        if (Campaign.Player.Class) {\n            Player.Class = { ...Campaign.Player.Class };\n        } else {\n            if (!Player.Class) {\n                Player.Class = {\n                    ...World.Classes[Object.keys(World.Classes)[3]],\n                    Id: Object.keys(World.Classes)[3]\n                };\n            }\n        }\n\n        // Abilities\n        // generate and sort random stats for the player\n        let Rolls = [];\n        for (\n            let i = 0;\n            i < World.Classes[Player.Class.Id].AbilityPriorities.length;\n            i++\n        ) {\n            // add a bonus die to the 2 first abilities of non-spell casters\n            if (!Player.Class.Spellcaster && i <= 1) {\n                Rolls.push(this.GeneratePlayerAbilityScore(true));\n            } else {\n                Rolls.push(this.GeneratePlayerAbilityScore());\n            }\n        }\n        Rolls = Rolls.sort(function (a, b) {\n            return a < b;\n        });\n\n        let AbilityScores = {};\n        for (\n            let i = 0;\n            i < World.Classes[Player.Class.Id].AbilityPriorities.length;\n            i++\n        ) {\n            AbilityScores[World.Classes[Player.Class.Id].AbilityPriorities[i]] =\n                Rolls[i];\n        }\n\n        // if stats were pre-determined for the campaign start, use them instead (weird numbers are handled gracefully)\n        Player.Constitution =\n            Math.max(\n                0,\n                Math.min(Campaign.Player.Constitution, Gameplay.MaxAbilityScore)\n            ) ||\n            AbilityScores.Constitution +\n                (Player.Race.AbilityBoost.Constitution || 0);\n        Player.Strength =\n            Math.max(\n                0,\n                Math.min(Campaign.Player.Strength, Gameplay.MaxAbilityScore)\n            ) ||\n            AbilityScores.Strength + (Player.Race.AbilityBoost.Strength || 0);\n        Player.Dexterity =\n            Math.max(\n                0,\n                Math.min(Campaign.Player.Dexterity, Gameplay.MaxAbilityScore)\n            ) ||\n            AbilityScores.Dexterity + (Player.Race.AbilityBoost.Dexterity || 0);\n        Player.ArmorClass =\n            Math.max(0, Campaign.Player.ArmorClass) ||\n            10 + this.AbilityModifier(Player.Dexterity);\n\n        // Vitals\n        // the interface will take whatever numbers come from the campaign assets and make sense of them (negative values or maximums greater than the current amount are handled gracefully)\n        // Health\n        Player.MaxHealth =\n            Math.max(0, Campaign.Player.MaxHealth || 0) ||\n            this.CalculateMaxHealth(Player);\n        Player.Health = Math.max(0, Campaign.Player.Health) || Player.MaxHealth;\n        if (Player.MaxHealth < Player.Health) Player.MaxHealth = Player.Health;\n        // Stamina\n        Player.MaxStamina =\n            Math.max(0, Campaign.Player.MaxStamina || 0) ||\n            this.CalculateMaxStamina(Player);\n        Player.Stamina =\n            Math.max(0, Campaign.Player.Stamina) || Player.MaxStamina;\n        if (Player.MaxStamina < Player.Stamina)\n            Player.MaxStamina = Player.Stamina;\n        Player.MaxWeight =\n            Campaign.Player.MaxWeight || this.CalculateMaxWeight(Player);\n\n        // Intelligence and Mana\n        if (Player.Class.Spellcaster) {\n            Player.Intelligence =\n                Math.max(\n                    0,\n                    Math.min(\n                        Campaign.Player.Intelligence,\n                        Gameplay.MaxAbilityScore\n                    )\n                ) ||\n                AbilityScores.Intelligence +\n                    (Player.Race.AbilityBoost.Intelligence || 0);\n            Player.MaxMana =\n                Math.max(0, Campaign.Player.MaxMana || 0) ||\n                this.CalculateMaxMana(Player);\n            Player.Mana = Math.max(0, Campaign.Player.Mana) || Player.MaxMana;\n            if (Player.MaxMana < Player.Mana) Player.MaxMana = Player.Mana;\n        } else {\n            Player.MaxMana = Player.Mana = 0;\n            Player.Intelligence = 5;\n        }\n\n        Player.Abilities = {\n            Strength: Player.Strength,\n            Constitution: Player.Constitution,\n            Dexterity: Player.Dexterity,\n            Intelligence: Player.Intelligence\n        };\n\n        // Spellbook\n        if (!Player.Class.Spellcaster) {\n            delete Player.SpellBook;\n        } else {\n            if (!Player.SpellBook || !Player.SpellBook.Spells) {\n                if (\n                    Campaign.AvailableStartSpell &&\n                    Campaign.AvailableStartSpell.length > 0\n                ) {\n                    Player.SpellBook = {\n                        Spells: [Campaign.AvailableStartSpell[0]]\n                    };\n                }\n            }\n        }\n\n        // Check player's start coordinates\n        if (!Campaign.Player.x && !Campaign.Player.x) {\n            Player.x = 0;\n            Player.y = 0;\n            console.error(\n                'Please make sure to assign starting coordinates to the player.'\n            );\n        }\n\n        Player.Facing = Campaign.Player.Facing || 'North';\n        Player.Level = Campaign.Player.Level || 1;\n        Player.XP = Campaign.Player.XP || 0;\n\n        return Player;\n    };\n\n    // takes the 3 best rolls out of 4d6\n    GeneratePlayerAbilityScore = (AbilityDieBonus = false) => {\n        let rolls = [];\n        let score = 0;\n        for (var i = 1; i <= 4 + AbilityDieBonus; i++) {\n            let dieScore = this.RollDice(1, 6);\n            rolls.push(dieScore);\n            score += dieScore;\n        }\n\n        score -= Math.min.apply(null, rolls);\n\n        return score;\n    };\n\n    CalculateMaxHealth = Player => {\n        // level up\n        if (Player.MaxHealth) {\n            return Math.ceil(Player.Constitution * 2.5 + Player.Strength / 5);\n        }\n        // new player\n        else {\n            return Math.ceil(Player.Constitution * 2.5 + Player.Strength / 5);\n        }\n    };\n\n    CalculateMaxMana = Player => {\n        // level up\n        if (Player.MaxMana) {\n            return Math.ceil(Player.Intelligence * 1.85);\n        }\n        // new player\n        else {\n            return Math.ceil(Player.Intelligence * 1.85);\n        }\n    };\n\n    CalculateMaxStamina = Player => {\n        return Math.ceil(Player.Strength * 5);\n    };\n\n    CalculateMaxWeight = Player => {\n        // level up\n        if (Player.MaxWeight) {\n            return Math.ceil(Player.Strength * 1.6);\n        }\n        // new player\n        else {\n            return Math.ceil(Player.Strength * 1.6);\n        }\n    };\n\n    SetRace = RaceObject => {\n        let Player = { ...this.state.Player };\n        Player.Race = { ...RaceObject };\n        Player = this.CreateCharacter(Player);\n        this.setState({ Player: Player }, function () {});\n    };\n\n    SetClass = ClassObject => {\n        let Player = { ...this.state.Player };\n        Player.Class = { ...ClassObject };\n        Player = this.CreateCharacter(Player);\n        this.setState({ Player: Player });\n    };\n\n    SetFirstSpell = SpellBook => {\n        let Player = { ...this.state.Player };\n        Player.SpellBook = SpellBook;\n        this.setState({ Player: Player });\n    };\n\n    SavePlayerName = input => {\n        let Player = { ...this.state.Player };\n        Player[input.name] = input.value;\n        this.setState({ Player: Player });\n    };\n\n    StartPlaying = () => {\n        this.setState(\n            {\n                CreateCharacter: false\n            },\n            function () {\n                // reset the environment\n                let State = this.InitGameEnvironment();\n                // grab the character that the player just created\n                State.Player = { ...this.state.Player };\n                // keep the volume at its current level\n                State.Sound = { ...this.state.Sound };\n\n                this.setState(State);\n\n                this.CalculateStyles();\n\n                this.forceUpdate();\n            }\n        );\n    };\n\n    ResumeGame = () => {\n        let GameInBackground = { ...this.state.GameInBackground };\n        this.setState(GameInBackground, function () {\n            delete this.state.GameInBackground;\n            this.CalculateStyles();\n            this.forceUpdate();\n        });\n    };\n\n    /* Save/Load Game */\n\n    ToggleGameStateBox = Operation => {\n        let EditableGameStateBox = this.state.EditableGameStateBox;\n        let Visibility = !this.state.ShowGameStateBox;\n        let Editable = true;\n\n        // can not modify the game state\n        if (Operation === 'Save') {\n            Editable = false;\n        }\n\n        // user has already clicked the save game button\n        if (Operation === 'Save' && !EditableGameStateBox) {\n            Visibility = true;\n        }\n\n        // user has already clicked the load game button\n        if (Operation === 'Save' && EditableGameStateBox) {\n            Visibility = true;\n            this.UpdateGameStateToLoad('');\n        }\n\n        // user has already clicked the save game button\n        if (Operation === 'Load' && !EditableGameStateBox) {\n            Visibility = true;\n        }\n\n        // load the state\n        if (Operation === 'Load' && EditableGameStateBox) {\n            this.LoadGame(this.state.GameStateToLoad);\n            return false;\n        }\n\n        // close everything\n        if (Operation === 'Cancel') {\n            Editable = false;\n            Visibility = false;\n            this.UpdateGameStateToLoad('');\n        }\n\n        this.setState({\n            EditableGameStateBox: Editable,\n            ShowGameStateBox: Visibility,\n            LoadGameError: ''\n        });\n    };\n\n    UpdateGameStateToLoad = GameState => {\n        this.setState({ GameStateToLoad: GameState, LoadGameError: '' });\n    };\n\n    LoadGame = () => {\n        let GameStateToLoad = this.state.GameStateToLoad;\n\n        try {\n            GameStateToLoad = JSON.parse(GameStateToLoad);\n\n            delete this.state;\n\n            this.setState(GameStateToLoad, function () {\n                this.CalculateStyles();\n            });\n        } catch (error) {\n            // catch JSON parse error\n            if (Debug) console.error('Invalid JSON object.', GameStateToLoad);\n            this.setState({\n                LoadGameError: Gameplay.Messages.LoadGameError.Invalid\n            });\n        }\n    };\n\n    ShowStats = () => {\n        this.setState({\n            HideStats: false,\n            HideInventory: true,\n            HideSpellBook: true\n        });\n    };\n\n    ShowInventory = () => {\n        this.setState({\n            HideStats: true,\n            HideInventory: false,\n            HideSpellBook: true\n        });\n    };\n\n    ShowSpellBook = () => {\n        this.setState({\n            HideStats: true,\n            HideInventory: true,\n            HideSpellBook: false\n        });\n    };\n\n    /* In-Game Keyboard Shortcuts */\n\n    ListenToKeyboard = keypress => {\n        let State = { ...this.state };\n        let Player = { ...this.props.Player };\n        let Keystrokes = this.state.Keystrokes\n            ? [...this.state.Keystrokes]\n            : [];\n\n        // do not capture key strokes\n        if (Player.Dead) return false;\n        if (\n            keypress.target.tagName.toLowerCase() === 'textarea' ||\n            keypress.target.tagName.toLowerCase() === 'input'\n        )\n            return false;\n\n        // do not absorb function keys\n        if (keypress.key.match(/(F[1-9]|F1[0-2])/) === null) {\n            keypress.preventDefault();\n        }\n\n        if (Debug) console.log('keypress: ', keypress.key);\n\n        // track subsequent key strokes\n        let BreakEvent = false;\n        if (Keystrokes) Keystrokes.push(keypress.key);\n        else Keystrokes = [keypress.key];\n        this.setState({ Keystrokes: Keystrokes }, function () {\n            // detect two digit numbers between 01 and 99\n            if (this.state.Keystrokes.join('').match(/[0-9][1-9]/) !== null) {\n                this.CastSpellFromKeyboard(this.state.Keystrokes.join(''));\n                this.FlushKeystrokeHistory();\n                BreakEvent = true;\n            }\n\n            // detect \"B\" + two digit numbers between 01 and 99\n            if (this.state.Keystrokes.join('').match(/b[0-9][1-9]/) !== null) {\n                this.UseItemFromKeyboard(this.state.Keystrokes.join(''));\n                this.FlushKeystrokeHistory();\n                BreakEvent = true;\n            }\n\n            // cheats\n            if (this.LookForCheats(this.state.Keystrokes.join(''))) {\n                BreakEvent = true;\n            }\n        });\n\n        if (BreakEvent) return true;\n\n        // in-game single-keypress shortcuts\n        switch (keypress.key) {\n            default:\n                break;\n\n            case 'Escape':\n            case 'Enter':\n                this.FlushKeystrokeHistory();\n                break;\n\n            case 'ArrowDown':\n                if (State.CreateCharacter) return false;\n                this.MovePlayer('South');\n                this.onClickArrow(keypress.key);\n                this.FlushKeystrokeHistory();\n                break;\n\n            case 'ArrowUp':\n                if (State.CreateCharacter) return false;\n                this.MovePlayer('North');\n                this.onClickArrow(keypress.key);\n                this.FlushKeystrokeHistory();\n                break;\n\n            case 'ArrowLeft':\n                if (State.CreateCharacter) return false;\n                this.MovePlayer('West');\n                this.onClickArrow(keypress.key);\n                this.FlushKeystrokeHistory();\n                break;\n\n            case 'ArrowRight':\n                if (State.CreateCharacter) return false;\n                this.MovePlayer('East');\n                this.onClickArrow(keypress.key);\n                this.FlushKeystrokeHistory();\n                break;\n\n            case '+':\n                this.props.dispatch({ type: 'INCREASE_VOLUME' });\n                this.PlaySound('sound_control');\n                break;\n\n            case '-':\n                this.props.dispatch({ type: 'DECREASE_VOLUME' });\n                this.PlaySound('sound_control');\n                break;\n\n            case 'm':\n                this.props.dispatch({ type: 'MUTE_VOLUME' });\n                break;\n\n            case 't':\n                if (State.CreateCharacter) return false;\n                this.TakeAllLoot();\n                this.FlushKeystrokeHistory();\n                break;\n        }\n    };\n\n    LookForCheats = (Input, Strict = false) => {\n        let Cheat = false;\n        let State = { ...this.state };\n        let Prefix = 'd!';\n\n        // debug\n        if (\n            (Strict && Input === Prefix + 'debug') ||\n            (!Strict && Input.indexOf('debug') > -1)\n        ) {\n            Debug = !Debug;\n            console.log(\n                Debug ? Gameplay.Messages.Debug.On : Gameplay.Messages.Debug.Off\n            );\n            this.SetText(\n                Debug ? Gameplay.Messages.Debug.On : Gameplay.Messages.Debug.Off\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n        if (\n            (Strict && Input === Prefix + 'sound') ||\n            (!Strict && Input.indexOf('sound') > -1)\n        ) {\n            SoundDebug = !SoundDebug;\n            console.log(\n                SoundDebug\n                    ? Gameplay.Messages.SoundDebug.On\n                    : Gameplay.Messages.SoundDebug.Off\n            );\n            this.SetText(\n                SoundDebug\n                    ? Gameplay.Messages.SoundDebug.On\n                    : Gameplay.Messages.SoundDebug.Off\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n\n        // actual cheats\n        if (\n            (Strict && Input === Prefix + 'showmap') ||\n            (!Strict && Input.indexOf('showmap') > -1)\n        ) {\n            this.setState(\n                {\n                    ShowFullMap:\n                        State.ShowFullMap === undefined\n                            ? true\n                            : !State.ShowFullMap\n                },\n                function () {\n                    this.SetText(\n                        this.state.ShowFullMap\n                            ? Gameplay.Messages.Cheats.ShowFullMap.On\n                            : Gameplay.Messages.Cheats.ShowFullMap.Off\n                    );\n                }\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n        if (\n            (Strict && Input === Prefix + 'noclip') ||\n            (!Strict && Input.indexOf('noclip') > -1)\n        ) {\n            this.setState(\n                { NoClip: State.NoClip === undefined ? true : !State.NoClip },\n                function () {\n                    this.SetText(\n                        this.state.NoClip\n                            ? Gameplay.Messages.Cheats.NoClip.On\n                            : Gameplay.Messages.Cheats.NoClip.Off\n                    );\n                }\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n        if (\n            (Strict && Input === Prefix + 'god') ||\n            (!Strict && Input.indexOf('god') > -1)\n        ) {\n            this.setState(\n                {\n                    GodMode: State.GodMode === undefined ? true : !State.GodMode\n                },\n                function () {\n                    this.SetText(\n                        this.state.GodMode\n                            ? Gameplay.Messages.Cheats.GodMode.On\n                            : Gameplay.Messages.Cheats.GodMode.Off\n                    );\n                }\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n        if (\n            (Strict && Input === Prefix + 'spell') ||\n            (!Strict && Input.indexOf('spell') > -1)\n        ) {\n            if (State.CreateCharacter) return false;\n            this.setState(\n                {\n                    CastAlwaysSucceeds:\n                        State.CastAlwaysSucceeds === undefined\n                            ? true\n                            : !State.CastAlwaysSucceeds\n                },\n                function () {\n                    this.SetText(\n                        this.state.CastAlwaysSucceeds\n                            ? Gameplay.Messages.Cheats.CastAlwaysSucceeds.On\n                            : Gameplay.Messages.Cheats.CastAlwaysSucceeds.Off\n                    );\n                }\n            );\n            this.FlushKeystrokeHistory();\n            Cheat = true;\n        }\n\n        return Cheat;\n    };\n\n    FlushKeystrokeHistory = () => {\n        this.setState({ Keystrokes: [] });\n    };\n\n    PlaySound = (SoundName, Precedence) => {\n        let Sound = { ...this.props.Sound };\n\n        if (!Object.getOwnPropertyNames(Sound).length || Sound.Volume === 0)\n            return false;\n\n        const SoundFileExtensions = ['.wav', /*\".mp3\",*/ '.ogg'];\n        const SoundFileFolders = ['', SoundName + '/'];\n\n        let SoundPlaying = false;\n        let CountTest = 0;\n        let CountErrors = 0;\n        let MaxErrorCount =\n            SoundFileFolders.length * SoundFileExtensions.length +\n            (SoundFileFolders.length - 1) *\n                SoundFileExtensions.length *\n                Utilities.MaxSoundFilesPerFolder;\n\n        let SoundArray = [];\n\n        let AudioObject = new Audio();\n\n        /* Function to handle single sound */\n        let PlaySingleFile = function (AudObj) {\n            AudioObject.play()\n                .then(function () {\n                    if (SoundDebug) {\n                        // this.props.SetText(\"Sound played:\", AudObj.src)\n                        console.log('Played:', AudObj.src);\n                    }\n\n                    AudObj.volume = Sound.Volume;\n                    SoundPlaying = true;\n                })\n                .catch(function () {\n                    CountErrors++;\n\n                    // did not find a sound file that matches any extension\n                    if (CountErrors === MaxErrorCount) {\n                        console.error(\n                            [\"Sound '\", SoundName, \"' not found.\"].join('')\n                        );\n                    }\n                });\n        };\n\n        /* Functions to handle random sound selection */\n        // on error\n        let SoundFileDoesNotExist = function () {\n            CountErrors++;\n            CountTest++;\n\n            if (CountErrors === MaxErrorCount) {\n                console.error([\"Sound '\", SoundName, \"' not found.\"].join(''));\n            }\n        };\n        // on loaded data\n        var that = this;\n        let SoundFileExists = function (AudObj, i, x, p) {\n            AudObj.onloadeddata = function () {\n                if (SoundPlaying) {\n                    console.warn(\n                        [\n                            `Warning: Sound files for the '`,\n                            SoundName,\n                            `' event were both found in the 'sounds/' folder and in the 'sounds/`,\n                            SoundName + '/',\n                            `' subfolder.\n              \\nIf you want to play a randomly selected sound when this event occur, keep the 'sounds/`,\n                            SoundName + '/',\n                            `' subfolder and delete the '`,\n                            SoundName,\n                            `' file at the root of the 'sounds/' folder.\n              \\nIf you want to play the exact same sound every time, delete the 'sounds/`,\n                            SoundName + '/',\n                            `' subfolder and keep the '`,\n                            SoundName,\n                            `' file at the root of the 'sounds/' folder.`\n                        ].join('')\n                    );\n                    return null;\n                }\n\n                CountTest++;\n\n                SoundArray.push(\n                    './sounds/' +\n                        SoundFileFolders[i] +\n                        SoundName +\n                        (p || '') +\n                        SoundFileExtensions[x]\n                );\n\n                if (CountTest === MaxErrorCount) {\n                    let SelectedSound =\n                        SoundArray[that.RandomInteger(SoundArray.length)];\n\n                    AudObj = new Audio(SelectedSound);\n\n                    if (SoundDebug)\n                        console.log('Random sound options:', SoundArray);\n\n                    AudObj.play()\n                        .then(function () {\n                            if (SoundDebug) {\n                                console.log('Played:', AudObj.src);\n                            }\n\n                            AudObj.volume = Sound.Volume;\n                            SoundPlaying = true;\n                        })\n                        .catch(function () {\n                            console.error(\n                                [\"Could not play '\", SelectedSound, \"'.\"].join(\n                                    ''\n                                )\n                            );\n                        });\n                }\n            };\n        };\n\n        /* Find audio file */\n        // Inspect folders\n        for (let i = 0; i < SoundFileFolders.length; i++) {\n            // Inspect file extensions\n            for (let x = 0; x < SoundFileExtensions.length; x++) {\n                // Inspect subfolders\n                if (SoundFileFolders[i] !== '') {\n                    // Try numbered file names (e.g.: /drink_potion/drink_potion1.wav)\n                    for (\n                        let p = 0;\n                        p <= Utilities.MaxSoundFilesPerFolder;\n                        p++\n                    ) {\n                        if (SoundDebug)\n                            console.log(\n                                'Inspecting:',\n                                './sounds/' +\n                                    SoundFileFolders[i] +\n                                    SoundName +\n                                    (p || '') +\n                                    SoundFileExtensions[x]\n                            );\n\n                        AudioObject = new Audio(\n                            './sounds/' +\n                                SoundFileFolders[i] +\n                                SoundName +\n                                (p || '') +\n                                SoundFileExtensions[x]\n                        );\n\n                        AudioObject.onerror = SoundFileDoesNotExist;\n\n                        SoundFileExists(AudioObject, i, x, p);\n\n                        if (SoundPlaying) {\n                            break;\n                        }\n                    }\n                }\n\n                // Inspect root folder\n                else {\n                    CountTest++;\n\n                    if (SoundDebug)\n                        console.log(\n                            'Inspecting:',\n                            './sounds/' + SoundName + SoundFileExtensions[x]\n                        );\n\n                    AudioObject = new Audio(\n                        './sounds/' + SoundName + SoundFileExtensions[x]\n                    );\n\n                    PlaySingleFile(AudioObject);\n                }\n\n                if (SoundPlaying) {\n                    console.log('BREAK');\n                    break;\n                }\n            }\n\n            if (SoundPlaying) {\n                break;\n            }\n        }\n\n        this.setState({ Sound: Sound });\n    };\n\n    RandomDirection = array => {\n        array = array.filter(HorizontalLine => HorizontalLine.length > 0);\n\n        let randomY = Math.floor(Math.random() * array.length);\n        let randomX = Math.floor(Math.random() * array[randomY].length);\n        return array[randomY][randomX];\n    };\n\n    RandomIntegerFromRange = (min, max) => {\n        return (\n            Math.floor(\n                Math.random() * (Math.floor(max) - Math.floor(min) + 1)\n            ) + Math.floor(min)\n        );\n    };\n\n    RandomInteger = (max = 100) => {\n        return Math.floor(Math.random() * Math.floor(max));\n    };\n\n    RollD20 = () => {\n        return this.RandomIntegerFromRange(1, 20);\n    };\n\n    RollDice = (dice, sides) => {\n        let result = 0;\n        for (let i = 1; i <= dice; i++) {\n            result += this.RandomIntegerFromRange(1, sides);\n        }\n        return result;\n    };\n\n    AbilityModifier = Ability => {\n        if (Ability <= 1) {\n            return -5;\n        }\n        if (Ability <= 3) {\n            return -4;\n        }\n        if (Ability <= 5) {\n            return -3;\n        }\n        if (Ability <= 7) {\n            return -2;\n        }\n        if (Ability <= 9) {\n            return -1;\n        }\n        if (Ability <= 11) {\n            return 0;\n        }\n        if (Ability <= 13) {\n            return 1;\n        }\n        if (Ability <= 15) {\n            return 2;\n        }\n        if (Ability <= 17) {\n            return 3;\n        }\n        if (Ability <= 19) {\n            return 4;\n        }\n        if (Ability <= 21) {\n            return 5;\n        }\n        if (Ability <= 23) {\n            return 6;\n        }\n        if (Ability <= 25) {\n            return 7;\n        }\n        if (Ability <= 27) {\n            return 8;\n        }\n        if (Ability <= 29) {\n            return 9;\n        }\n        return 10;\n    };\n\n    GetUnlucky = Luck => {\n        return this.RandomInteger() + Luck <= 60;\n    };\n\n    SetMessage = Message => {\n        if (Message) {\n            this.setState({ currentMessage: Message });\n        }\n    };\n\n    SetText = (Message = '', Image = null) => {\n        if (Message || Image) {\n            let EventLogEntries = [...this.state.EventLog];\n            let GameStarted = this.state.GameStarted.Milliseconds;\n\n            if (!EventLogEntries) {\n                EventLogEntries = [];\n            }\n\n            if (Array.isArray(Message)) {\n                let Messages = [...Message];\n                EventLogEntries = [\n                    ...EventLogEntries,\n                    ...Messages.map(Msg => {\n                        return [\n                            this.GenerateFormattedTime(\n                                Date.now() - GameStarted\n                            ),\n                            Msg\n                        ].join(': ');\n                    })\n                ];\n            } else {\n                EventLogEntries.push(\n                    [\n                        this.GenerateFormattedTime(Date.now() - GameStarted),\n                        Message\n                    ].join(': ')\n                );\n            }\n\n            // FIXME: It looks like sometimes setState is not called when the event log get updated with multiple messages in separate functions.\n\n            this.setState({ EventLog: EventLogEntries }, function () {\n                this.ScrollToBottom('EventLog');\n                let { EnterCustomLogEntry } = this.state;\n                if (EnterCustomLogEntry) {\n                    this.setState({\n                        EnterCustomLogEntry: false,\n                        CustomLogEntry: ''\n                    });\n                }\n            });\n        }\n    };\n\n    ScrollToBottom = ElementId => {\n        if (document.getElementById(ElementId)) {\n            let HtmlElement = document.getElementById(ElementId);\n            HtmlElement.scrollTop = HtmlElement.scrollHeight;\n        }\n    };\n\n    ScrollToTop = ElementId => {\n        console.log('go');\n        if (document.getElementById(ElementId)) {\n            let HtmlElement = document.getElementById(ElementId);\n            HtmlElement.scrollTop = 0;\n        }\n    };\n\n    Scroll = (ElementId, Direction) => {\n        if (document.getElementById(ElementId)) {\n            let HtmlElement = document.getElementById(ElementId);\n            HtmlElement.scrollTop =\n                HtmlElement.scrollTop +\n                HtmlElement.clientHeight * Direction -\n                (18 + Direction) * Direction;\n        }\n    };\n\n    ClearLog = () => {\n        this.setState({\n            EventLog: [],\n            EnterCustomLogEntry: false,\n            CustomLogEntry: ''\n        });\n    };\n\n    DisplayCustomLogEntryInput = input => {\n        let {\n            EnterCustomLogEntry,\n            CustomLogEntry,\n            CustomLogEntryInputRecentlyClosed\n        } = this.state;\n\n        if (!EnterCustomLogEntry && !CustomLogEntryInputRecentlyClosed) {\n            this.setState({ EnterCustomLogEntry: true }, function () {\n                this.ScrollToBottom('EventLog');\n            });\n        }\n        if (CustomLogEntryInputRecentlyClosed) {\n            this.setState({ CustomLogEntryInputRecentlyClosed: false });\n        }\n        if (EnterCustomLogEntry && (CustomLogEntry === '' || !CustomLogEntry)) {\n            if (input.target.name !== 'CustomLogEntry') {\n                this.setState({ EnterCustomLogEntry: false });\n            }\n        }\n    };\n\n    StoreCustomLogEntryInput = LogEntry => {\n        this.setState({ CustomLogEntry: LogEntry.value });\n    };\n\n    SaveCustomLogEntryInput = input => {\n        let NewLogEntry = this.state.CustomLogEntry;\n        this.SetText(NewLogEntry);\n        this.LookForCheats(NewLogEntry, true);\n        if (this.state.EnterCustomLogEntry) {\n            this.setState({\n                EnterCustomLogEntry: false,\n                CustomLogEntry: '',\n                CustomLogEntryInputRecentlyClosed: true\n            });\n        }\n    };\n\n    onClickArrow = key => {\n        let arrowStyle = {};\n        arrowStyle[key] = Styles.ArrowBlockClick;\n        this.setState({ arrowStyle }, function () {\n            this.ResetArrowStyle();\n        });\n    };\n\n    ResetArrowStyle = () => {\n        if (this.state.arrowStyle !== null) {\n            setTimeout(\n                function () {\n                    this.setState({ arrowStyle: null });\n                }.bind(this),\n                50\n            );\n        }\n    };\n\n    UpdateText = ({ x, y }) => {\n        let currentText = this.state.currentText;\n        let currentTextImage = this.state.currentTextImage;\n        let StoryTexts = [...this.state.Texts];\n\n        let matchTextAccessPoint = false;\n\n        if (StoryTexts) {\n            StoryTexts.map((text, index) => {\n                if (text.Used) return null;\n                return !text.accessPoints\n                    ? null\n                    : text.accessPoints.filter(accessPoint => {\n                          if (accessPoint.x === x && accessPoint.y === y) {\n                              matchTextAccessPoint = true;\n                              currentText = text.text;\n                              currentTextImage = text.image || null;\n                              StoryTexts[index].Used = true;\n                              return true;\n                          } else {\n                              return false;\n                          }\n                      });\n            });\n\n            if (currentText !== this.state.currentText) {\n                this.ScrollToTop('Story');\n            }\n\n            this.setState({\n                currentText: currentText,\n                currentTextImage: currentTextImage,\n                Text: StoryTexts\n            });\n        }\n\n        return matchTextAccessPoint;\n    };\n\n    AbilityCheck = (AbilityScore, Modifier) => {\n        if (\n            this.RandomInteger() >=\n            100 -\n                (AbilityScore / Gameplay.MaxAbilityScore) * 100 -\n                (Modifier || 0)\n        ) {\n            return true;\n        }\n\n        return false;\n    };\n\n    FindMonsterById = MonsterId => {\n        // let {Monsters} = this.state\n        let Monsters = Object.assign([], this.state.Monsters);\n\n        return Monsters.filter(Monster => {\n            return Monster.Id === MonsterId;\n        });\n    };\n\n    FindSingleMonsterInSurroundings = Actor => {\n        // let {MonsterMap} = this.state\n        let MonsterMap = Object.assign([], this.state.MonsterMap);\n\n        let Targets = []\n            .concat(\n                MonsterMap[Actor.y - 1].slice(Actor.x - 1, Actor.x + 2),\n                MonsterMap[Actor.y].slice(Actor.x - 1, Actor.x + 2),\n                MonsterMap[Actor.y + 1].slice(Actor.x - 1, Actor.x + 2)\n            )\n            .filter(MapObject => {\n                return MapObject !== Empty;\n            });\n\n        if (Targets.length > 0) {\n            return this.FindMonsterById(Targets[0]);\n        }\n\n        return false;\n    };\n\n    CastSpellFromKeyboard = SpellNumber => {\n        let Player = { ...this.state.Player };\n\n        if (!Player.Class.Spellcaster || !Player.SpellBook) return false;\n\n        let FindSpell = Player.SpellBook.Spells.filter((Item, index) => {\n            if (index === Number(SpellNumber - 1)) {\n                return true;\n            }\n            return false;\n        });\n\n        if (!FindSpell.length) return false;\n\n        this.CastSpell(FindSpell[0]);\n    };\n\n    CastSpell = (Spell, Caster) => {\n        let Player = { ...this.props.Player };\n        let Monsters = [...this.state.Monsters];\n        let MonsterMap = [...this.state.MonsterMap];\n        let Turn = this.state.Turn;\n        let CastAlwaysSucceeds = this.state.CastAlwaysSucceeds;\n\n        let CasterIsPlayer = false;\n        let UpdateEventLog = true;\n\n        if (!Caster) {\n            Caster = Player;\n            CasterIsPlayer = true;\n\n            if (Player.Dead) return false;\n        }\n\n        // enough mana\n        if (!Spell.ManaCost || Caster.Mana >= Spell.ManaCost) {\n            // not enough XP\n            if (Spell.Level > Caster.Level) {\n                if (CasterIsPlayer) {\n                    this.SetText(Gameplay.Messages.Spell.UnsufficientLevel);\n                }\n\n                return false;\n            }\n\n            // ability score spell-level modifier\n            let Modifier = 0;\n            if (Caster.Intelligence <= 5) {\n                this.SetText(Gameplay.Messages.Spell.CanNotCast);\n                return false;\n            } else if (Caster.Intelligence <= 10) {\n                Modifier = Utilities.MaxSpellLevel / Spell.Level / 4;\n            } else {\n                Modifier = Utilities.MaxSpellLevel / Spell.Level;\n            }\n\n            // attempt to cast the spell\n            if (\n                this.AbilityCheck(Caster.Intelligence, Modifier) ||\n                CastAlwaysSucceeds\n            ) {\n                if (Spell.Sound) {\n                    this.PlaySound(Spell.Sound);\n                }\n\n                // Heal\n                if (Spell.Type === 'Heal') {\n                    Caster[Spell.Heal.Property] += Math.min(\n                        this.RandomIntegerFromRange(\n                            Spell.Heal.Min,\n                            Spell.Heal.Max\n                        ),\n                        Caster['Max' + Spell.Heal.Property]\n                    );\n                }\n\n                // Attack\n                else if (Spell.Type === 'Attack') {\n                    // Default Target: whatever monster is in front of the caster\n                    // and Adjacent Targets: whatever monster is in front of the caster and then an monster adjacent to this monster (and so on, until the max number of targets is reached)\n                    if (!Spell.Target || Spell.Target === 'Adjacent') {\n                        let targetCoordinates = {\n                            x:\n                                Caster.x +\n                                Utilities.DirectionsOffset[Caster.Facing].x,\n                            y:\n                                Caster.y +\n                                Utilities.DirectionsOffset[Caster.Facing].y\n                        };\n\n                        // find target\n                        let TargetMonster = Monsters.filter(\n                            (Monster, index) => {\n                                if (\n                                    Monster.x === targetCoordinates.x &&\n                                    Monster.y === targetCoordinates.y\n                                ) {\n                                    return true;\n                                }\n                                return false;\n                            }\n                        );\n\n                        if (TargetMonster.length === 0) {\n                            if (CasterIsPlayer) {\n                                this.SetText(Gameplay.Messages.Spell.NoTarget);\n                                UpdateEventLog = false;\n                            }\n                        } else {\n                            let Damage = this.RandomIntegerFromRange(\n                                Spell.Damage.Min,\n                                Spell.Damage.Max\n                            );\n\n                            if (\n                                !this.MonsterTakeDamage(\n                                    TargetMonster[0],\n                                    Damage\n                                )\n                            ) {\n                            }\n\n                            if (Spell.Vampiric) {\n                                Caster.Health += Damage;\n                            }\n\n                            // adjacent-spell only\n                            if (Spell.Target === 'Adjacent') {\n                                if (Spell.MaxTargets) {\n                                    let MonsterInCenter = TargetMonster[0];\n                                    let TargetHit = 0;\n\n                                    while (\n                                        TargetHit < Spell.MaxTargets - 1 &&\n                                        MonsterInCenter\n                                    ) {\n                                        let Target = this.FindSingleMonsterInSurroundings(\n                                            MonsterInCenter\n                                        );\n\n                                        console.log(\n                                            'target hit:',\n                                            TargetHit,\n                                            '\\nmonster in center:',\n                                            MonsterInCenter,\n                                            '\\nnew target:',\n                                            Target\n                                        );\n\n                                        if (Target) {\n                                            this.MonsterTakeDamage(\n                                                Target[0],\n                                                this.RandomIntegerFromRange(\n                                                    Spell.Damage.Min,\n                                                    Spell.Damage.Max\n                                                )\n                                            );\n\n                                            TargetHit++;\n                                        }\n\n                                        MonsterInCenter = Target[0];\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    // Target Area: whatever monsters are surrounding the caster (until the maximum number of targets has been reached)\n                    else if (Spell.Target === 'Surrounding') {\n                        let Targets = []\n                            .concat(\n                                MonsterMap[Caster.y - 1].slice(\n                                    Caster.x - 1,\n                                    Caster.x + 2\n                                ),\n                                MonsterMap[Caster.y].slice(\n                                    Caster.x - 1,\n                                    Caster.x + 2\n                                ),\n                                MonsterMap[Caster.y + 1].slice(\n                                    Caster.x - 1,\n                                    Caster.x + 2\n                                )\n                            )\n                            .filter(MapObject => {\n                                return MapObject !== Empty;\n                            });\n\n                        let TargetHit = 0;\n\n                        while (\n                            TargetHit <\n                            Math.min(Spell.MaxTargets || 8, Targets.length)\n                        ) {\n                            let Target = this.FindMonsterById(\n                                Targets[TargetHit]\n                            );\n\n                            this.MonsterTakeDamage(\n                                Target[0],\n                                this.RandomIntegerFromRange(\n                                    Spell.Damage.Min,\n                                    Spell.Damage.Max\n                                )\n                            );\n\n                            TargetHit++;\n                        }\n\n                        if (TargetHit === 0) {\n                            if (CasterIsPlayer) {\n                                this.SetText(\n                                    Gameplay.Messages.Spell.NoTargetArea\n                                );\n                            }\n                        }\n                    }\n                }\n\n                // update player state and message\n                if (CasterIsPlayer) {\n                    Turn++;\n                    Caster.Stamina--;\n                    Caster.Mana -= Spell.ManaCost || 0;\n                    Caster.SpellActionUsed = true;\n\n                    if (UpdateEventLog) {\n                        this.SetText(\n                            Gameplay.PartialMessages.SpellSuccess +\n                                Spell.Name +\n                                Gameplay.PartialMessages.Period\n                        );\n                    }\n\n                    this.setState(\n                        {\n                            Player: Caster,\n                            Turn: Turn\n                        },\n                        function () {\n                            this.MoveMonsters();\n                        }\n                    );\n                    this.props.dispatch({\n                        type: 'UPDATE_PLAYER',\n                        Player: Caster\n                    });\n                }\n\n                return true;\n            }\n            // cast failed\n            else {\n                this.PlaySound('spell_failed');\n\n                if (CasterIsPlayer) {\n                    Caster.Mana -= Spell.ManaCost || 0;\n                    this.setState({ Player: Caster });\n                    this.props.dispatch({\n                        type: 'UPDATE_PLAYER',\n                        Player: Caster\n                    });\n\n                    this.SetText(\n                        Gameplay.Messages.Spell.Failed[\n                            this.RandomInteger(\n                                Gameplay.Messages.Spell.Failed.length\n                            )\n                        ]\n                    );\n                }\n            }\n        }\n        // caster does not have required mana amount\n        else {\n            if (CasterIsPlayer) {\n                this.SetText(\n                    Gameplay.Messages.Spell.NotEnoughMana[\n                        this.RandomInteger(\n                            Gameplay.Messages.Spell.NotEnoughMana.length\n                        )\n                    ]\n                );\n            }\n        }\n\n        return false;\n    };\n\n    MovePlayer = Direction => {\n        let Player = { ...this.props.Player };\n        let WallMap = [...this.state.WallMap];\n        let MonsterMap = [...this.state.MonsterMap];\n        let NoClip = this.state.NoClip;\n\n        let FullStateUpdate = true;\n\n        if (Player.Dead) return false;\n\n        // get the target coordinates\n        let targetCoordinates = this.MoveObject(\n            { x: Player.x, y: Player.y },\n            Direction\n        );\n\n        // out of range\n        if (\n            targetCoordinates.y > WallMap.length - 1 ||\n            targetCoordinates.y < 0 ||\n            targetCoordinates.x > WallMap[targetCoordinates.y].length - 1 ||\n            targetCoordinates.x < 0\n        ) {\n            this.SetText(Gameplay.Messages.Collision);\n            this.PlaySound('cant_go_there');\n\n            return;\n        }\n\n        // check if there is a locked door in the way\n        let Door = this.CheckLockedDoors(targetCoordinates);\n        if (Door.Locked && !NoClip) {\n            let LockedDoor = this.UnlockDoor(Door.Object);\n            if (LockedDoor.Unlocked) {\n                let UnlockMessage =\n                    Gameplay.PartialMessages.UnlockDoor +\n                    LockedDoor.Key +\n                    Gameplay.PartialMessages.Period;\n                this.setState({\n                    currentText: UnlockMessage,\n                    currentTextImage: null\n                });\n            } else {\n                this.setState({\n                    currentText: Gameplay.Messages.LockedDoor,\n                    currentTextImage: null\n                });\n                return;\n            }\n        }\n\n        // player is attacking a monster\n        if (MonsterMap[targetCoordinates.y][targetCoordinates.x] !== Empty) {\n            FullStateUpdate = false;\n            this.AttackMonster(targetCoordinates);\n            // player is not moving\n            targetCoordinates.x = Player.x;\n            targetCoordinates.y = Player.y;\n        } else {\n            // the player can not go there (there is a wall/door in the way)\n            if (!this.DetectCollision(targetCoordinates)) {\n                this.SetText(Gameplay.Messages.Collision);\n                this.PlaySound('cant_go_there');\n\n                return;\n            }\n        }\n\n        // the monsters get to move now\n        this.MoveMonsters(targetCoordinates);\n\n        // wake up any monster in the vicinity of the player\n        this.WakeUpMonster(targetCoordinates);\n\n        // let {Turn, DiscoveryMap, currentEvent, currentText, currentTextImage} = this.state\n        let Turn = this.state.Turn;\n        let DiscoveryMap = Object.assign([], this.state.DiscoveryMap);\n        let currentEvent = Object.assign([], this.state.currentEvent);\n        let currentText = this.state.currentText;\n        let currentTextImage = this.state.currentTextImage;\n\n        // update the state partially\n        Player.Facing = Direction;\n\n        // update various parts of the state\n        if (FullStateUpdate) {\n            // update which parts of the map were revealed\n            DiscoveryMap = this.UpdateDiscoveryMap(targetCoordinates);\n\n            // add loot containers to the list of events if applicable\n            currentEvent = this.CheckLootContainers(targetCoordinates);\n\n            // reset messages when an event occur (loot container)\n            if (currentEvent.length > 0) {\n                currentText = '';\n                currentTextImage = null;\n            }\n\n            // save the new coordinates\n            Player.x = targetCoordinates.x;\n            Player.y = targetCoordinates.y;\n\n            Player.Stationary = false;\n        }\n\n        // update player stats\n        if (Player.Stamina > 1) {\n            Player.Stamina--;\n        }\n\n        // add 1 turn to the game state\n        Turn++;\n\n        // catch up with other state mutations\n        let PlayerCoordinates = { x: Player.x, y: Player.y };\n        if (Player !== this.state.Player) {\n            let NewPlayerState = this.state.Player;\n            if (NewPlayerState.Health !== Player.Health) {\n                Player.Health = NewPlayerState.Health;\n                Player.Dead = NewPlayerState.Dead;\n            }\n\n            // keep the coordinates\n            Player.x = PlayerCoordinates.x;\n            Player.y = PlayerCoordinates.y;\n        }\n\n        this.setState({\n            Player: Player,\n            Turn: Turn,\n            currentEvent: currentEvent,\n            currentText: currentText,\n            currentTextImage: currentTextImage,\n            DiscoveryMap: DiscoveryMap\n        });\n\n        // update story text\n        this.UpdateText(targetCoordinates);\n    };\n\n    MoveObject = (originalCoordinates, Direction) => {\n        // grab the object's current position\n        let targetCoordinates = {\n            x: originalCoordinates.x,\n            y: originalCoordinates.y\n        };\n\n        // calculate target coordinates\n        if (Direction === 'West') {\n            targetCoordinates.x -= 1;\n        }\n        if (Direction === 'East') {\n            targetCoordinates.x += 1;\n        }\n        if (Direction === 'North') {\n            targetCoordinates.y -= 1;\n        }\n        if (Direction === 'South') {\n            targetCoordinates.y += 1;\n        }\n\n        return targetCoordinates;\n    };\n\n    DetectCollision = ({ x, y }) => {\n        // let {WallMap, MonsterMap, NoClip} = this.state\n        let WallMap = Object.assign([], this.state.WallMap);\n        let MonsterMap = Object.assign([], this.state.MonsterMap);\n        let NoClip = this.state.NoClip;\n\n        if (NoClip) {\n            return true;\n        }\n\n        // can not get out of the map boundaries\n        if (y < 0 || x < 0 || y >= WallMap.length || x >= WallMap[y].length) {\n            return false;\n        }\n\n        // target is a monster\n        if (MonsterMap[y][x] !== Empty) {\n            return false;\n        }\n\n        // target is empty or non-blocking\n        if (WallMap[y][x] === Empty) {\n            return true;\n        }\n\n        // target is a door\n        if (WallMap[y][x] === Door) {\n            // check if the door is locked\n            let Door = this.CheckLockedDoors({ x, y });\n            if (Door.Locked) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    UpdateDiscoveryMap = ({ x, y }) => {\n        // let {DiscoveryMap} = this.state\n        let DiscoveryMap = Object.assign([], this.state.DiscoveryMap);\n\n        let NewDiscoveryMap = DiscoveryMap.map((HorizontalLine, MapY) => {\n            return HorizontalLine.map((MapObject, MapX) => {\n                if (\n                    MapY >= y - 1 &&\n                    MapY <= y + 1 &&\n                    MapX >= x - 1 &&\n                    MapX <= x + 1\n                ) {\n                    return Empty;\n                } else {\n                    return MapObject;\n                }\n            });\n        });\n\n        return NewDiscoveryMap;\n    };\n\n    CheckLockedDoors = ({ x, y }) => {\n        // let {LockedDoors} = this.state\n        let LockedDoors = Object.assign([], this.state.LockedDoors);\n\n        if (LockedDoors) {\n            let matchLockedDoor = LockedDoors.filter(object => {\n                return object.x === x && object.y === y && !object.Unlocked;\n            });\n\n            return {\n                Locked: matchLockedDoor.length > 0,\n                Object: matchLockedDoor.length > 0 ? matchLockedDoor[0] : null\n            };\n        }\n\n        return {\n            Locked: false,\n            Object: null\n        };\n    };\n\n    UnlockDoor = Door => {\n        // let {Backpack} = this.state\n        let Backpack = Object.assign({}, this.state.Backpack);\n\n        let matchKey = Backpack.Items.filter(Item => {\n            return Item.DoorId === Door.Id;\n        });\n\n        if (matchKey.length > 0) {\n            Door.Unlocked = true;\n            this.setState({ Backpack: Backpack });\n        }\n\n        return {\n            Unlocked: matchKey.length > 0,\n            Key: matchKey.length > 0 ? matchKey[0].Name : null\n        };\n    };\n\n    CheckLootContainers = ({ x, y }) => {\n        let LootContainers = [...this.state.LootContainers];\n\n        if (LootContainers) {\n            let matchLootContainer = LootContainers.filter(object => {\n                if (object.items) {\n                    object.items = object.items\n                        .map(item => {\n                            return this.GenerateRandomLoot(item);\n                        })\n                        .filter(item => {\n                            return item !== null;\n                        });\n                }\n                return object.x === x && object.y === y;\n            });\n\n            matchLootContainer = matchLootContainer.map(loot => {\n                loot.eventType = 'loot';\n                return loot;\n            });\n\n            return matchLootContainer;\n        }\n\n        return [];\n    };\n\n    GenerateRandomLoot = item => {\n        // let {RandomItems} = this.state\n        let RandomItems = Object.assign({}, this.state.RandomItems);\n\n        if (item && item.random) {\n            if (!this.GetUnlucky(10)) {\n                item =\n                    RandomItems['Level' + item.Level][\n                        this.RandomIntegerFromRange(\n                            0,\n                            RandomItems['Level' + item.Level].length - 1\n                        )\n                    ];\n            } else {\n                return null;\n            }\n        }\n        return item;\n    };\n\n    TakeAllLoot = () => {\n        if (!this.state.currentEvent) return false;\n\n        let currentEvent = [...this.state.currentEvent];\n\n        if (currentEvent.length === 0) return false;\n\n        let Player = { ...this.props.Player };\n        let Backpack = { ...this.state.Backpack };\n\n        if (Player.Dead) return false;\n\n        let loot = [];\n        let LootCount = 0;\n        let FreeSlots =\n            Backpack.maxItems - (Backpack.Items ? Backpack.Items.length : 0);\n\n        let LootEvents = currentEvent.filter(event => {\n            if (event.eventType === 'loot') {\n                if (event.items) {\n                    LootCount += event.items.length;\n                    return true;\n                }\n            }\n            return false;\n        });\n\n        if (LootEvents.length === 0) return false;\n\n        LootEvents.map(event => {\n            if (event.eventType === 'loot') {\n                if (event.items) {\n                    loot = loot.concat(event.items);\n                }\n            }\n            return null;\n        });\n\n        if (FreeSlots >= LootCount && loot.length > 0) {\n            if (this.CheckInventoryWeight(loot)) {\n                currentEvent.map(event => {\n                    if (event.eventType === 'loot') {\n                        if (event.items) {\n                            event.items = [];\n                        }\n                    }\n                    return null;\n                });\n\n                Backpack.Items = Backpack.Items\n                    ? Backpack.Items.concat(loot)\n                    : [...loot];\n                Backpack.Weight = this.CheckInventoryWeight(loot, true);\n                Player.Stationary = true;\n\n                this.setState({ Backpack: Backpack, Player: Player });\n\n                this.SetText(Gameplay.Messages.Loot.Gathered);\n                this.PlaySound('take_loot');\n            } else {\n                this.SetText(Gameplay.Messages.Loot.TooHeavy);\n            }\n        } else if (loot.length > 0) {\n            this.SetText(Gameplay.Messages.Loot.TooMuch);\n        }\n    };\n\n    TakeSingleLoot = (lootIndex, containerId) => {\n        let LootContainers = [...this.state.LootContainers];\n        let Backpack = { ...this.state.Backpack };\n        let Player = { ...this.state.Player };\n\n        if (Player.Dead) return false;\n\n        let FreeSlots =\n            Backpack.maxItems - (Backpack.Items ? Backpack.Items.length : 0);\n\n        let matchLootContainer = LootContainers.filter(lootContainer => {\n            return lootContainer.Id === containerId;\n        })[0];\n\n        if (FreeSlots > 0) {\n            if (\n                this.CheckInventoryWeight([matchLootContainer.items[lootIndex]])\n            ) {\n                if (Backpack.Items) {\n                    Backpack.Items.push(matchLootContainer.items[lootIndex]);\n                } else {\n                    Backpack.Items = [];\n                    Backpack.Items.push(matchLootContainer.items[lootIndex]);\n                }\n\n                Backpack.Weight = this.CheckInventoryWeight(\n                    matchLootContainer.items[lootIndex],\n                    true\n                );\n\n                console.log(Backpack);\n\n                this.setState({ Backpack: Backpack }, function () {\n                    matchLootContainer.items.splice(lootIndex, 1);\n                    Player.Stationary = true;\n                    this.setState({\n                        currentEvent: this.state.currentEvent,\n                        Player: Player\n                    });\n                });\n            } else {\n                this.SetText(Gameplay.Messages.Loot.ItemTooHeavy);\n            }\n        } else {\n            this.SetText(Gameplay.Messages.Loot.BackpackFull);\n        }\n    };\n\n    DropItem = () => {\n        console.log('drop');\n    };\n\n    CheckInventoryWeight = (Loot, Save) => {\n        // let {Backpack, Player} = this.state\n        let Backpack = Object.assign({}, this.state.Backpack);\n        let Player = Object.assign({}, this.state.Player);\n\n        let BackpackWeight = 0;\n\n        if (Backpack.Items && Backpack.Items.length > 0) {\n            BackpackWeight = Backpack.Items.map(Item => {\n                return Item !== null ? Item.Weight || 0 : 0;\n            }).reduce((sum, val) => sum + val);\n        } else {\n            BackpackWeight = 0;\n        }\n\n        if (Loot && Loot.length > 0) {\n            let LootWeight = Loot.map(Item => {\n                return Item !== null ? Item.Weight || 0 : 0;\n            }).reduce((sum, val) => sum + val);\n\n            BackpackWeight += LootWeight;\n        }\n\n        if (BackpackWeight <= Player.MaxWeight) {\n            if (Save) {\n                return BackpackWeight;\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    CheckInventoryWeightAtStartUp = Backpack => {\n        let BackpackWeight = 0;\n\n        if (Backpack.Items && Backpack.Items.length > 0) {\n            BackpackWeight = Backpack.Items.map(Item => {\n                return Item !== null ? Item.Weight || 0 : 0;\n            }).reduce((sum, val) => sum + val);\n        } else {\n            BackpackWeight = 0;\n        }\n\n        Backpack.Weight = BackpackWeight;\n\n        return Backpack;\n    };\n\n    WakeUpMonster = ({ x, y }) => {\n        let Monsters = [...this.state.Monsters];\n        let PlaySound = false;\n\n        if (Monsters) {\n            let MonsterList = Monsters.map(Monster => {\n                if (\n                    Monster.x >= x - 1 &&\n                    Monster.x <= x + 1 &&\n                    Monster.y >= y - 1 &&\n                    Monster.y <= y + 1 &&\n                    !Monster.ChasePlayer\n                ) {\n                    PlaySound = true;\n\n                    Monster.ChasePlayer = true;\n                    Monster.Stationary = false;\n                    this.SetText(\n                        Functions.IndefiniteArticle(Monster.Name, true) +\n                            ' ' +\n                            Monster.Name +\n                            Gameplay.PartialMessages.MonsterNoticed\n                    );\n                }\n                return Monster;\n            });\n\n            this.setState({ Monsters: MonsterList });\n\n            if (PlaySound) {\n                this.PlaySound('player_noticed');\n            }\n        }\n    };\n\n    MoveMonsters = PlayerNewCoordinates => {\n        let Monsters = [...this.state.Monsters];\n        let Player = { ...this.state.Player };\n\n        if (Monsters) {\n            let MovingMonsters = Monsters.filter(Monster => {\n                return (\n                    !Monster.Dead &&\n                    (Monster.ChasePlayer || !Monster.Stationary)\n                );\n            });\n\n            MovingMonsters.map(Monster => {\n                if (Monster.ChasePlayer) {\n                    return this.ChasePlayer(\n                        Monster,\n                        PlayerNewCoordinates || { x: Player.x, y: Player.y }\n                    );\n                } else {\n                    return this.Patrol(Monster);\n                }\n            });\n        }\n    };\n\n    Patrol = Monster => {\n        // let {MonsterMap} = this.state\n        let MonsterMap = Object.assign([], this.state.MonsterMap);\n\n        let Surroundings = this.GetSurroundingWalls({\n            x: Monster.x,\n            y: Monster.y\n        });\n\n        // indicate coordinates in the array\n        Surroundings = Surroundings.map((HorizontalLine, y) => {\n            return HorizontalLine.map((MapObject, x) => {\n                if (MapObject === Empty) {\n                    // do not let monsters move diagonally\n                    if (\n                        (x === 0 && y === 0) ||\n                        (x === 2 && y === 2) ||\n                        (x === 2 && y === 0) ||\n                        (x === 0 && y === 2)\n                    ) {\n                        return Wall;\n                    }\n                    return { x: x - 1, y: y - 1 };\n                } else {\n                    return MapObject;\n                }\n            });\n        });\n\n        // filter out walls and doors to only give valid choices\n        Surroundings = Surroundings.map((HorizontalLine, y) => {\n            return HorizontalLine.filter(x => {\n                return x !== Wall && x !== Door;\n            });\n        });\n\n        let Direction = this.RandomDirection(Surroundings);\n\n        MonsterMap[Monster.y][Monster.x] = Empty;\n        MonsterMap[Monster.y + Direction.y][Monster.x + Direction.x] =\n            Monster.Id;\n\n        Monster.x = Monster.x + Direction.x;\n        Monster.y = Monster.y + Direction.y;\n\n        return Monster;\n    };\n\n    ChasePlayer = (Monster, PlayerNewCoordinates) => {\n        let MonsterMap = [...this.state.MonsterMap];\n        let Monsters = [...this.state.Monsters];\n        let WallMap = [...this.state.WallMap];\n\n        let originalMonsterCoordinates = { x: Monster.x, y: Monster.y };\n        let HorizontalDistance = PlayerNewCoordinates.x - Monster.x;\n        let VerticalDistance = PlayerNewCoordinates.y - Monster.y;\n\n        let index = null;\n        Monsters.filter((Monst, i) => {\n            if (Monst.Id === Monster.Id) {\n                index = i;\n                return true;\n            }\n            return false;\n        });\n\n        // player is north of the monster\n        if (\n            VerticalDistance < 0 &&\n            WallMap[Monster.y - 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y - 1][Monster.x] === Empty &&\n            Monster.y - 1 !== PlayerNewCoordinates.y\n        ) {\n            Monster.y -= 1;\n        }\n        // player is south of the monster\n        else if (\n            VerticalDistance > 0 &&\n            WallMap[Monster.y + 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y + 1][Monster.x] === Empty &&\n            Monster.y + 1 !== PlayerNewCoordinates.y\n        ) {\n            Monster.y += 1;\n        }\n        // player is west of the monster\n        else if (\n            HorizontalDistance < 0 &&\n            WallMap[Monster.y][Monster.x - 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x - 1] === Empty &&\n            Monster.x - 1 !== PlayerNewCoordinates.x\n        ) {\n            Monster.x -= 1;\n        } else if (\n            // player is east of the monster\n            HorizontalDistance > 0 &&\n            WallMap[Monster.y][Monster.x + 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x + 1] === Empty &&\n            Monster.x + 1 !== PlayerNewCoordinates.x\n        ) {\n            Monster.x += 1;\n        }\n        // player is north-west of the monster and north is not blocked\n        else if (\n            VerticalDistance < 0 &&\n            HorizontalDistance < 0 &&\n            WallMap[Monster.y - 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y - 1][Monster.x] === Empty &&\n            (Monster.y - 1 !== PlayerNewCoordinates.y ||\n                (Monster.y - 1 === PlayerNewCoordinates.y &&\n                    Monster.x !== PlayerNewCoordinates.x))\n        ) {\n            Monster.y -= 1;\n        }\n        // player is north-west of the monster and west is not blocked\n        else if (\n            VerticalDistance < 0 &&\n            HorizontalDistance < 0 &&\n            WallMap[Monster.y][Monster.x - 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x - 1] === Empty &&\n            (Monster.x - 1 !== PlayerNewCoordinates.x ||\n                (Monster.x - 1 === PlayerNewCoordinates.x &&\n                    Monster.y !== PlayerNewCoordinates.y))\n        ) {\n            Monster.x -= 1;\n        }\n        // player is north-east of the monster and north is not blocked\n        else if (\n            VerticalDistance < 0 &&\n            HorizontalDistance > 0 &&\n            WallMap[Monster.y - 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y - 1][Monster.x] === Empty &&\n            (Monster.y - 1 !== PlayerNewCoordinates.y ||\n                (Monster.y - 1 === PlayerNewCoordinates.y &&\n                    Monster.x !== PlayerNewCoordinates.x))\n        ) {\n            Monster.y -= 1;\n        }\n        // player is north-east of the monster and east is not blocked\n        else if (\n            VerticalDistance < 0 &&\n            HorizontalDistance > 0 &&\n            WallMap[Monster.y][Monster.x + 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x + 1] === Empty &&\n            (Monster.x + 1 !== PlayerNewCoordinates.x ||\n                (Monster.x + 1 === PlayerNewCoordinates.x &&\n                    Monster.y !== PlayerNewCoordinates.y))\n        ) {\n            Monster.x += 1;\n        }\n        // player is south-west of the monster and south is not blocked\n        else if (\n            VerticalDistance > 0 &&\n            HorizontalDistance < 0 &&\n            WallMap[Monster.y + 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y + 1][Monster.x] === Empty &&\n            (Monster.y + 1 !== PlayerNewCoordinates.y ||\n                (Monster.y + 1 === PlayerNewCoordinates.y &&\n                    Monster.x !== PlayerNewCoordinates.x))\n        ) {\n            Monster.y += 1;\n        }\n        // player is south-west of the monster and west is not blocked\n        else if (\n            VerticalDistance > 0 &&\n            HorizontalDistance < 0 &&\n            WallMap[Monster.y][Monster.x - 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x - 1] === Empty &&\n            (Monster.x - 1 !== PlayerNewCoordinates.x ||\n                (Monster.x - 1 === PlayerNewCoordinates.x &&\n                    Monster.y !== PlayerNewCoordinates.y))\n        ) {\n            Monster.x -= 1;\n        }\n        // player is south-east of the monster and south is not blocked\n        else if (\n            VerticalDistance > 0 &&\n            HorizontalDistance > 0 &&\n            WallMap[Monster.y + 1][Monster.x] === Empty &&\n            MonsterMap[Monster.y + 1][Monster.x] === Empty &&\n            (Monster.y + 1 !== PlayerNewCoordinates.y ||\n                (Monster.y + 1 === PlayerNewCoordinates.y &&\n                    Monster.x !== PlayerNewCoordinates.x))\n        ) {\n            Monster.y += 1;\n        }\n        // player is south-east of the monster and east is not blocked\n        else if (\n            VerticalDistance > 0 &&\n            HorizontalDistance > 0 &&\n            WallMap[Monster.y][Monster.x + 1] === Empty &&\n            MonsterMap[Monster.y][Monster.x + 1] === Empty &&\n            (Monster.x + 1 !== PlayerNewCoordinates.x ||\n                (Monster.x + 1 === PlayerNewCoordinates.x &&\n                    Monster.y !== PlayerNewCoordinates.y))\n        ) {\n            Monster.x += 1;\n        }\n\n        // recalculate distance for attack after move\n        HorizontalDistance = PlayerNewCoordinates.x - Monster.x;\n        VerticalDistance = PlayerNewCoordinates.y - Monster.y;\n\n        if (\n            (HorizontalDistance === 0 &&\n                (VerticalDistance === 1 || VerticalDistance === -1)) ||\n            (VerticalDistance === 0 &&\n                (HorizontalDistance === 1 || HorizontalDistance === -1)) ||\n            (HorizontalDistance === 0 && VerticalDistance === 0)\n        ) {\n            this.AttackPlayer(Monster);\n        }\n\n        MonsterMap[originalMonsterCoordinates.y][\n            originalMonsterCoordinates.x\n        ] = Empty;\n        MonsterMap[Monster.y][Monster.x] = Monster.Id;\n\n        Monsters[index] = Monster;\n        this.setState({ MonsterMap: MonsterMap, Monsters: Monsters });\n    };\n\n    AttackPlayer = Monster => {\n        let Player = { ...this.props.Player };\n\n        if (Player.Dead) return false;\n\n        if (this.RandomInteger(100) >= Player.Dexterity) {\n            let Damage = this.RandomIntegerFromRange(\n                Monster.Damage.Min,\n                Monster.Damage.Max\n            );\n\n            this.PlaySound('attack_hit');\n\n            this.SetText(\n                Functions.IndefiniteArticle(Monster.Name, true) +\n                    ' ' +\n                    Monster.Name +\n                    Gameplay.PartialMessages.MonsterAttacking\n            );\n\n            this.PlayerTakeDamage(Damage);\n        } else {\n            this.PlaySound('attack_missed');\n\n            this.SetText(\n                Functions.IndefiniteArticle(Monster.Name, true) +\n                    ' ' +\n                    Monster.Name +\n                    Gameplay.PartialMessages.MonsterMissed\n            );\n        }\n    };\n\n    AttackMonster = MonsterCoordinates => {\n        let Player = { ...this.state.Player };\n        let Gear = { ...this.props.Player.Gear };\n        let Monsters = Object.assign([], this.state.Monsters);\n        let index = 0;\n\n        if (this.RandomInteger(100) >= Player.Dexterity) {\n            let Monster = Monsters.filter((Enemy, i) => {\n                if (\n                    Enemy.x === MonsterCoordinates.x &&\n                    Enemy.y === MonsterCoordinates.y\n                ) {\n                    index = i;\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n\n            if (Monster.length > 0) {\n                Monster = Monster[0];\n\n                let Damage = this.RandomIntegerFromRange(\n                    Gear.LeftHand.Damage.Min +\n                        this.AbilityModifier(Player.Strength),\n                    Gear.LeftHand.Damage.Max +\n                        this.AbilityModifier(Player.Strength)\n                );\n\n                // console.log(Gear.LeftHand.Damage.Min + this.AbilityModifier(Player.Strength), Gear.LeftHand.Damage.Max + this.AbilityModifier(Player.Strength))\n\n                this.PlaySound('attack_hit');\n\n                this.SetText(\n                    Gameplay.PartialMessages.PlayerHit +\n                        Functions.IndefiniteArticle(Monster.Name) +\n                        ' ' +\n                        Monster.Name +\n                        Gameplay.PartialMessages.Period\n                );\n\n                this.MonsterTakeDamage(Monster, Damage, index);\n            }\n        } else {\n            this.PlaySound('attack_missed');\n\n            this.SetText(Gameplay.Messages.PlayerMissed);\n        }\n    };\n\n    PlayerTakeDamage = Damage => {\n        let Player = { ...this.props.Player };\n        const GodMode = this.props.Cheats.GodMode;\n\n        if (!GodMode) {\n            Player.Health = Math.max(0, Player.Health - Damage);\n\n            if (Player.Health <= 0) {\n                Player.Dead = true;\n                this.SetText(Gameplay.Messages.PlayerDead);\n            }\n\n            this.props.dispatch({\n                type: 'UPDATE_PLAYER',\n                Player\n            });\n        }\n    };\n\n    MonsterTakeDamage = (Monster, Damage, index = null) => {\n        // let {MonsterMap} = this.state\n        let MonsterMap = Object.assign([], this.state.MonsterMap);\n        let Monsters = [...this.state.Monsters];\n\n        Monster.Health = Math.max(0, Monster.Health - Damage);\n\n        if (Monster.Health <= 0) {\n            Monster.Dead = true;\n            MonsterMap[Monster.y][Monster.x] = Empty;\n            this.SetText(\n                Gameplay.PartialMessages.MonsterKilled +\n                    Functions.IndefiniteArticle(Monster.Name) +\n                    ' ' +\n                    Monster.Name +\n                    Gameplay.PartialMessages.Period\n            );\n            this.DistributeXP(Monster);\n\n            if (index !== null) {\n                Monsters.splice(index, 1);\n            }\n\n            this.setState({ Monsters: Monsters });\n\n            return false;\n        }\n\n        return true;\n    };\n\n    GetSurroundingWalls = ({ x, y }) => {\n        // let {WallMap} = this.state\n        let WallMap = Object.assign([], this.state.WallMap);\n\n        let Surroundings = [\n            y - 1 >= 0\n                ? WallMap[y - 1].slice(x - 1, x + 2)\n                : [Wall, Wall, Wall],\n            WallMap[y].slice(x - 1, x + 2),\n            y + 1 < WallMap.length\n                ? WallMap[y + 1].slice(x - 1, x + 2)\n                : [Wall, Wall, Wall]\n        ];\n\n        // if horizontally out of range, block the object from moving outside with walls\n        if (x === 0) {\n            Surroundings = [\n                [Wall, WallMap[y - 1][x], WallMap[y - 1][x + 1]],\n                [Wall, WallMap[y][x], WallMap[y][x + 1]],\n                [Wall, WallMap[y + 1][x], WallMap[y + 1][x + 1]]\n            ];\n        } else if (x === WallMap[y].length - 1) {\n            Surroundings = [\n                [WallMap[y - 1][x - 1], WallMap[y - 1][x], Wall],\n                [WallMap[y - 1][x - 1], WallMap[y][x], Wall],\n                [WallMap[y - 1][x - 1], WallMap[y + 1][x], Wall]\n            ];\n        }\n\n        return Surroundings;\n    };\n\n    UseItemFromKeyboard = ItemNumber => {\n        let Backpack = { ...this.state.Backpack };\n\n        let FindItem = Backpack.Items.filter((Item, index) => {\n            if (index === Number(ItemNumber.replace('b', '') - 1)) {\n                return true;\n            }\n            return false;\n        });\n\n        if (FindItem.length === 0) return false;\n\n        this.UseItem(FindItem[0]);\n    };\n\n    UseItem = (Item, Action) => {\n        console.log(Action, Item);\n\n        if (this[Item.Action]) {\n            this[Item.Action](Item);\n        }\n    };\n\n    DrinkPotion = Item => {\n        let Player = { ...this.state.Player };\n        let Backpack = { ...this.state.Backpack };\n\n        let Message = null;\n\n        // Healing potion\n        if (Player[Item.Heal]) {\n            let NewHealedProperty = Math.min(\n                Player['Max' + Item.Heal],\n                Player[Item.Heal] +\n                    Item.Strength +\n                    Functions.RandomIntegerFromRange(-2, 3)\n            );\n\n            if (NewHealedProperty - Player[Item.Heal] === 0) {\n                Message = Gameplay.Messages.Potion.NoEffect;\n            } else if (NewHealedProperty - Player[Item.Heal] <= 5) {\n                Message = Gameplay.Messages.Potion[Item.Heal + '1'];\n            } else if (NewHealedProperty - Player[Item.Heal] <= 10) {\n                Message = Gameplay.Messages.Potion[Item.Heal + '2'];\n            } else {\n                Message = Gameplay.Messages.Potion[Item.Heal + '3'];\n            }\n\n            Player[Item.Heal] = NewHealedProperty;\n        } else {\n            Message = Gameplay.Messages.Potion.NoEffect;\n        }\n\n        Backpack.Items = this.RemoveItemFromInventory(Item);\n\n        this.PlaySound('drink_potion', 999);\n\n        if (Message) {\n            this.SetText(Message);\n        }\n\n        this.setState({ Player: Player, Backpack: Backpack }, function () {\n            Backpack = { ...this.state.Backpack };\n            Backpack.Weight = this.CheckInventoryWeight(null, true);\n            this.setState({ Backpack: Backpack });\n        });\n    };\n\n    ConsumeFood = Item => {\n        // let {Player, Backpack} = this.state\n        let Player = Object.assign({}, this.state.Player);\n        let Backpack = Object.assign({}, this.state.Backpack);\n\n        let RestoreStamina = Number(Item.RestoreStamina);\n        let Bonus =\n            RestoreStamina +\n            this.RandomIntegerFromRange(\n                Math.floor(RestoreStamina / -4),\n                Math.ceil(RestoreStamina / 4)\n            );\n\n        Player.Stamina = Math.min(Player.MaxStamina, Player.Stamina + Bonus);\n\n        Backpack.Items = this.RemoveItemFromInventory(Item);\n\n        let Messages = [\n            Gameplay.Messages.Food.Yummy,\n            Gameplay.Messages.Food.Delicious,\n            Gameplay.Messages.Food.Diet,\n            Gameplay.Messages.Food.NotAsGoodAsMyMom\n        ];\n\n        if (Player.Stamina / Player.MaxStamina < 0.4) {\n            Messages.push(Gameplay.Messages.Food.Rest);\n        }\n\n        if (Player.Stamina / Player.MaxStamina < 0.7) {\n            Messages.push(Gameplay.Messages.Food.More);\n        } else if (Player.Stamina / Player.MaxStamina > 0.9) {\n            Messages.push(Gameplay.Messages.Food.NotNecessary);\n        }\n\n        this.SetText(Messages[this.RandomInteger(Messages.length)]);\n\n        this.setState({ Player: Player, Backpack: Backpack }, function () {\n            Backpack = { ...this.state.Backpack };\n            Backpack.Weight = this.CheckInventoryWeight(null, true);\n            this.setState({ Backpack: Backpack });\n        });\n    };\n\n    RemoveItemFromInventory = Item => {\n        let Backpack = { ...this.state.Backpack };\n\n        let UpdatedBackpackItems = [];\n\n        Backpack.Items.map((BackpackItem, index) => {\n            if (\n                BackpackItem.Id !== Item.Id ||\n                typeof BackpackItem.Id === undefined\n            ) {\n                UpdatedBackpackItems.push(BackpackItem);\n            }\n            return null;\n        });\n\n        return UpdatedBackpackItems;\n    };\n\n    DistributeXP = Source => {\n        if (!Source) return false;\n\n        // let {Player} = this.state\n        let Player = Object.assign({}, this.state.Player);\n\n        if (Source.XP) {\n            Player.XP += Source.XP;\n\n            if (\n                Player.Level < Gameplay.MaxPlayerLevel &&\n                Player.XP > Gameplay.LevelXP['Level' + Number(Player.Level + 1)]\n            ) {\n                Player.Level++;\n            }\n\n            this.setState({ Player: Player });\n        }\n    };\n\n    render() {\n        // create character mode\n        if (this.state.CreateCharacter) {\n            return (\n                <CreateCharacter {...this} {...this.state} Styles={Styles} />\n            );\n        }\n\n        return <Play {...this} {...this.state} Styles={Styles} />;\n    }\n}\nconst GameContainer = connect(mapStateToProps)(Game);\n\nclass GameStore extends Component {\n    render() {\n        return (\n            <Provider store={Store}>\n                <GameContainer />\n            </Provider>\n        );\n    }\n}\n\nexport default GameStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game.js';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}